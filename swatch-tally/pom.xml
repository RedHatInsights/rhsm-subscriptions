<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.redhat.swatch</groupId>
    <artifactId>swatch-spring-parent</artifactId>
    <version>1.1.0-SNAPSHOT</version>
    <relativePath>../swatch-spring-parent/pom.xml</relativePath>
  </parent>

  <artifactId>swatch-tally</artifactId>
  <name>SWATCH - Services - Tally</name>

  <properties>
    <tally_api_spec_file>${maven.multiModuleProjectDirectory}/src/main/spec/internal-tally-api-spec.yaml</tally_api_spec_file>
  </properties>

  <dependencies>
    <!-- For the LiveReload feature of spring boot as long as IntelliJ is set to build/make automatically on code changes -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-servlet-spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-aop</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.retry</groupId>
      <artifactId>spring-retry</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-validator-provider</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>swagger-ui</artifactId>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>webjars-locator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate.validator</groupId>
      <artifactId>hibernate-validator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.yaml</groupId>
      <artifactId>snakeyaml</artifactId>
    </dependency>
    <dependency>
      <groupId>com.redhat.swatch</groupId>
      <artifactId>swatch-common-models</artifactId>
    </dependency>
    <dependency>
      <groupId>com.redhat.swatch</groupId>
      <artifactId>swatch-common-clock</artifactId>
    </dependency>
    <dependency>
      <groupId>com.redhat.swatch</groupId>
      <artifactId>swatch-common-export</artifactId>
    </dependency>
    <dependency>
      <groupId>com.redhat.swatch</groupId>
      <artifactId>swatch-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.redhat.swatch</groupId>
      <artifactId>api</artifactId>
    </dependency>
    <dependency>
      <groupId>com.redhat.swatch.clients.spring</groupId>
      <artifactId>rbac-client</artifactId>
    </dependency>
    <dependency>
      <groupId>com.redhat.swatch.clients.spring</groupId>
      <artifactId>contracts-client</artifactId>
    </dependency>
    <dependency>
      <groupId>com.redhat.swatch.clients.spring</groupId>
      <artifactId>export-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
    </dependency>
    <!-- the following dep is necessary to avoid jackson kotlin warnings -->
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-kotlin</artifactId>
    </dependency>
    <!-- used to deserialize subscription/product messages from UMB -->
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-xml</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-jakarta-xmlbind-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct-processor</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-csv</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock-standalone</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.redhat.swatch</groupId>
      <artifactId>swatch-core-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.redhat.swatch</groupId>
      <artifactId>swatch-common-testcontainers</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.redhat.swatch</groupId>
      <artifactId>swatch-database-migrations</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <sourceDirectory>../src/main/java</sourceDirectory>
    <testSourceDirectory>../src/test/java</testSourceDirectory>
    <resources>
      <resource>
        <directory>../src/main/resources</directory>
      </resource>
      <resource>
        <directory>${maven.multiModuleProjectDirectory}/api</directory>
        <includes>
          <include>rhsm-subscriptions-api-v1-spec.yaml</include>
          <include>rhsm-subscriptions-api-v2-spec.yaml</include>
        </includes>
      </resource>
      <resource>
        <directory>${maven.multiModuleProjectDirectory}/api/target/openapijson</directory>
        <includes>
          <include>rhsm-subscriptions-api-v1-openapi.json</include>
          <include>rhsm-subscriptions-api-v2-openapi.json</include>
        </includes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>../src/test/resources</directory>
      </testResource>
    </testResources>

    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
              <goal>build-info</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <executions>
          <execution>
            <id>default-compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <parameters>true</parameters>
              <annotationProcessorPaths>
                <path>
                  <groupId>org.projectlombok</groupId>
                  <artifactId>lombok</artifactId>
                </path>
                <path>
                  <groupId>org.mapstruct</groupId>
                  <artifactId>mapstruct-processor</artifactId>
                </path>
              </annotationProcessorPaths>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>buildApiTally</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>jaxrs-spec</generatorName>
              <inputSpec>${tally_api_spec_file}</inputSpec>
              <configurationFile>${maven.multiModuleProjectDirectory}/src/main/spec/internal-tally-api-config.json</configurationFile>
              <output>${project.build.directory}/generated/tally</output>
              <generateModelTests>false</generateModelTests>
              <generateApiTests>false</generateApiTests>
              <configOptions>
                <interfaceOnly>true</interfaceOnly>
                <generatePom>false</generatePom>
                <dateLibrary>java8</dateLibrary>
                <useJakartaEe>true</useJakartaEe>
                <useTags>true</useTags>
              </configOptions>
            </configuration>
          </execution>

          <execution>
            <id>generateApiDocsTally</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>html</generatorName>
              <inputSpec>${tally_api_spec_file}</inputSpec>
              <output>${project.build.directory}/internal-tally-docs</output>
              <generateModelTests>false</generateModelTests>
              <generateApiTests>false</generateApiTests>
            </configuration>
          </execution>

          <execution>
            <id>generateOpenApiJsonTally</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${tally_api_spec_file}</inputSpec>
              <generatorName>openapi</generatorName>
              <output>${project.build.directory}/openapijson</output>
              <generateModelTests>false</generateModelTests>
              <generateApiTests>false</generateApiTests>
              <configOptions>
                <outputFileName>internal-tally-openapi.json</outputFileName>
                <useJakartaEe>true</useJakartaEe>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated/tally/src/gen/java</source>
                <source>${project.build.directory}/generated/rhm/src/gen/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>io.swagger.codegen.v3</groupId>
        <artifactId>swagger-codegen-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-tally-api-spec-yaml</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${tally_api_spec_file}</inputSpec>
              <language>openapi-yaml</language>
              <output>${project.build.directory}/classes/swagger</output>
              <configOptions>
                <outputFile>generated-tally-api-spec.yaml</outputFile>
              </configOptions>
            </configuration>
          </execution>
          <execution>
            <id>generate-tally-api-spec-json</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${tally_api_spec_file}</inputSpec>
              <language>openapi</language>
              <output>${project.build.directory}/classes/swagger</output>
              <configOptions>
                <outputFile>generated-tally-api-spec.json</outputFile>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
