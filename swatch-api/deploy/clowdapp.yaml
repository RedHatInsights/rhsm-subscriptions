---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: swatch-api
parameters:
  - name: JAVA_DEBUG
    # Set to "true" to enable remote debugging
    value: ''
  - name: JAVA_OPTS_APPEND
    value: ''
  - name: DEV_MODE
    value: 'false'
  - name: ENV_NAME
    value: env-swatch-api
  - name: IMAGE_PULL_SECRET
    value: quay-cloudservices-pull
  - name: IMAGE
    value: quay.io/cloudservices/rhsm-subscriptions
  - name: IMAGE_TAG
    value: latest
  - name: SERVER_MAX_HTTP_HEADER_SIZE
    value: '48000'
  - name: LOGGING_LEVEL_ROOT
    value: WARN
  - name: LOGGING_LEVEL
    value: INFO
  - name: REPLICAS
    value: '1'
  - name: MEMORY_REQUEST
    value: 800Mi
  - name: MEMORY_LIMIT
    value: 800Mi
  - name: CPU_REQUEST
    value: 200m
  - name: CPU_LIMIT
    value: 300m
  - name: DATABASE_CONNECTION_TIMEOUT_MS
    value: '30000'
  - name: DATABASE_MAX_POOL_SIZE
    value: '10'
  - name: ENABLE_SPLUNK_HEC
    value: 'true'
  - name: SPLUNK_SOURCE
    value: 'rhsm-subscription-hec'
  - name: SPLUNK_SOURCE_TYPE
    value: 'springboot_server'
  - name: SPLUNK_MESSAGE_FORMAT
    value: 'text'
  - name: SPLUNK_HEC_URL
    value: https://splunk-hec.redhat.com:8088
  - name: SPLUNK_HEC_CONNECT_TIMEOUT
    value: '5000'
  - name: SPLUNK_HEC_BATCH_SIZE
    value: '1000'
  - name: SPLUNK_HEC_TERMINATION_TIMEOUT
    value: '2000'
  - name: OTEL_SERVICE_NAME
    value: swatch-api
  - name: NGINX_OTEL_IMAGE_TAG
    value: '1df2c89'
  - name: OTEL_ENABLED
    value: 'off'
  - name: OTEL_JAVAAGENT_ENABLED
    value: 'false'
  - name: OTEL_EXPORTER_OTLP_ENDPOINT
    value: 'http://localhost:4317'

objects:
  - apiVersion: cloud.redhat.com/v1alpha1
    kind: ClowdApp
    metadata:
      name: swatch-api
      labels:
        prometheus: rhsm
    pullSecrets:
      name: ${IMAGE_PULL_SECRET}

    spec:
      envName: ${ENV_NAME}
      dependencies:
        - swatch-tally
        - rbac

      database:
        sharedDbAppName: swatch-tally

      deployments:
        - name: service
          replicas: ${{REPLICAS}}
          webServices:
            public:
              enabled: true
          podSpec:
            image: ${IMAGE}:${IMAGE_TAG}
            initContainers:
              - image: ${IMAGE}:${IMAGE_TAG}
                env:
                  - name: JAVA_DEBUG
                    value: ${JAVA_DEBUG}
                  - name: SPRING_PROFILES_ACTIVE
                    value: liquibase-only
                  - name: JAVA_MAX_MEM_RATIO
                    value: '85'
                  - name: GC_MAX_METASPACE_SIZE
                    value: '256'
                  - name: DATABASE_HOST
                    valueFrom:
                      secretKeyRef:
                        name: swatch-tally-db
                        key: db.host
                  - name: DATABASE_PORT
                    valueFrom:
                      secretKeyRef:
                        name: swatch-tally-db
                        key: db.port
                  - name: DATABASE_USERNAME
                    valueFrom:
                      secretKeyRef:
                        name: swatch-tally-db
                        key: db.user
                  - name: DATABASE_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: swatch-tally-db
                        key: db.password
                  - name: DATABASE_DATABASE
                    valueFrom:
                      secretKeyRef:
                        name: swatch-tally-db
                        key: db.name
                  - name: OTEL_EXPORTER_OTLP_ENDPOINT
                    value: ${OTEL_EXPORTER_OTLP_ENDPOINT}
                  - name: OTEL_SERVICE_NAME
                    value: ${OTEL_SERVICE_NAME}
                  - name: OTEL_JAVAAGENT_ENABLED
                    value: ${OTEL_JAVAAGENT_ENABLED}
                resources:
                  requests:
                    cpu: ${CPU_REQUEST}
                    memory: ${MEMORY_REQUEST}
                  limits:
                    cpu: ${CPU_LIMIT}
                    memory: ${MEMORY_LIMIT}
            env:
              - name: JAVA_DEBUG
                value: ${JAVA_DEBUG}
              - name: JAVA_OPTS_APPEND
                value: -javaagent:/opt/splunk-otel-javaagent.jar ${JAVA_OPTS_APPEND}
              - name: DEV_MODE
                value: ${DEV_MODE}
              - name: SERVER_MAX_HTTP_HEADER_SIZE
                value: ${SERVER_MAX_HTTP_HEADER_SIZE}
              - name: LOG_FILE
                value: /logs/server.log
              - name: SPRING_PROFILES_ACTIVE
                value: api
              - name: JAVA_MAX_MEM_RATIO
                value: '85'
              - name: GC_MAX_METASPACE_SIZE
                value: '256'
              - name: LOGGING_LEVEL_ROOT
                value: ${LOGGING_LEVEL_ROOT}
              - name: LOGGING_LEVEL_ORG_CANDLEPIN
                value: ${LOGGING_LEVEL}
              - name: DATABASE_HOST
                valueFrom:
                  secretKeyRef:
                    name: swatch-tally-db
                    key: db.host
              - name: DATABASE_PORT
                valueFrom:
                  secretKeyRef:
                    name: swatch-tally-db
                    key: db.port
              - name: DATABASE_USERNAME
                valueFrom:
                  secretKeyRef:
                    name: swatch-tally-db
                    key: db.user
              - name: DATABASE_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: swatch-tally-db
                    key: db.password
              - name: DATABASE_DATABASE
                valueFrom:
                  secretKeyRef:
                    name: swatch-tally-db
                    key: db.name
              - name: DATABASE_CONNECTION_TIMEOUT_MS
                value: ${DATABASE_CONNECTION_TIMEOUT_MS}
              - name: DATABASE_MAX_POOL_SIZE
                value: ${DATABASE_MAX_POOL_SIZE}
              - name: SWATCH_SELF_PSK
                valueFrom:
                  secretKeyRef:
                    name: swatch-psks
                    key: self
              - name: ENABLE_SPLUNK_HEC
                value: ${ENABLE_SPLUNK_HEC}
              - name: SPLUNKMETA_namespace
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
              - name: HOST_NAME
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.name
              - name: SPLUNK_HEC_URL
                value: ${SPLUNK_HEC_URL}
              - name: SPLUNK_HEC_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: splunk-hec-external
                    key: token
              - name: SPLUNK_SOURCE
                value: ${SPLUNK_SOURCE}
              - name: SPLUNK_SOURCE_TYPE
                value: ${SPLUNK_SOURCE_TYPE}
              - name: SPLUNK_MESSAGE_FORMAT
                value: ${SPLUNK_MESSAGE_FORMAT}
              - name: SPLUNK_HEC_CONNECT_TIMEOUT
                value: ${SPLUNK_HEC_CONNECT_TIMEOUT}
              - name: SPLUNK_HEC_BATCH_SIZE
                value: ${SPLUNK_HEC_BATCH_SIZE}
              - name: SPLUNK_HEC_TERMINATION_TIMEOUT
                value: ${SPLUNK_HEC_TERMINATION_TIMEOUT}
              - name: OTEL_EXPORTER_OTLP_ENDPOINT
                value: ${OTEL_EXPORTER_OTLP_ENDPOINT}
              - name: OTEL_SERVICE_NAME
                value: ${OTEL_SERVICE_NAME}
              - name: OTEL_JAVAAGENT_ENABLED
                value: ${OTEL_JAVAAGENT_ENABLED}
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /health/liveness
                port: 9000
                scheme: HTTP
              initialDelaySeconds: 160
              periodSeconds: 20
              successThreshold: 1
              timeoutSeconds: 5
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /health
                port: 9000
                scheme: HTTP
              initialDelaySeconds: 160
              periodSeconds: 20
              successThreshold: 1
              timeoutSeconds: 5
            resources:
              requests:
                cpu: ${CPU_REQUEST}
                memory: ${MEMORY_REQUEST}
              limits:
                cpu: ${CPU_LIMIT}
                memory: ${MEMORY_LIMIT}
            volumeMounts:
              - name: logs
                mountPath: /logs
              - name: pinhead
                mountPath: /pinhead
            volumes:
              - name: logs
                emptyDir:
              - name: pinhead
                secret:
                  secretName: pinhead
        - name: nginx-proxy
          replicas: ${{REPLICAS}}
          webServices:
            public:
              enabled: true
              apiPath: rhsm-subscriptions
          podSpec:
            image: quay.io/cloudservices/nginx-otel:${NGINX_OTEL_IMAGE_TAG}
            command:
            - nginx
            - "-g"
            - "daemon off;"
            env:
            - name: DEV_MODE
              value: ${DEV_MODE}
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: ${OTEL_EXPORTER_OTLP_ENDPOINT}
            - name: OTEL_SERVICE_NAME
              value: swatch-api-nginx-proxy
            volumeMounts:
            - name: swatch-api-nginx-conf
              mountPath: /etc/nginx
            volumes:
            - name: swatch-api-nginx-conf
              configMap:
                name: nginx-conf

  - kind: Service
    apiVersion: v1
    metadata:
      name: rhsm-subscriptions
    spec:
      ports:
        - port: 8000
          name: "8000"
          protocol: TCP
          targetPort: 8000
        - port: 8080
          name: "8080"
          protocol: TCP
          targetPort: 8000
      selector:
        pod: swatch-api-nginx-proxy


  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: nginx-conf
    data:
      nginx.conf: |-
        load_module /opt/otel_ngx_module.so;
        events {}
        http {
          opentelemetry ${OTEL_ENABLED};
          opentelemetry_config /etc/nginx/otel.toml;
          upstream swatch-api {
            server swatch-api-service:8000;
          }

          server {
            error_log  stderr;
            access_log  /dev/stdout;
            listen 8000;
            client_max_body_size 500M;
            client_header_buffer_size 46k;

            location /healthz {
                opentelemetry       off;
                auth_basic          off;
                allow               all;
                return              200;
            }

            location ^~/ {
              proxy_pass http://swatch-api;
            }
          }
        }
      otel.toml: |-
        exporter = "otlp"
        processor = "batch"

        [exporters.otlp]
        # host and port are set via OTEL_EXPORTER_OTLP_ENDPOINT

        [processors.batch]
        max_queue_size = 2048
        schedule_delay_millis = 5000
        max_export_batch_size = 512
