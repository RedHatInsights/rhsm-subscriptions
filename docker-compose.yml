---
version: '3.1'
services:
  db:
    image: quay.io/centos7/postgresql-13-centos7
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRESQL_MAX_CONNECTIONS=5000
      - POSTGRESQL_ADMIN_PASSWORD=admin
    volumes:
      - ./init_dbs.sh:/usr/share/container-scripts/postgresql/start/set_passwords.sh:z
      - ./postgresql.conf:/opt/app-root/src/postgresql-cfg/postgresql.conf:z
      - ./pg_hba.conf:/pg_hba.conf:z
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      retries: 5
      timeout: 5s
  kafka:
    image: quay.io/strimzi/kafka:latest-kafka-3.1.0
    command: sh /init_kafka.sh
    environment:
      # Enable SSL debugging
      # - KAFKA_OPTS=-Djavax.net.debug=ssl,handshake,data,trustmanager,keymanager
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,SASL_SSL:SASL_SSL
      - KAFKA_LISTENERS=PLAINTEXT://:29092,PLAINTEXT_HOST://:9092,CONTROLLER://:9093,SASL_SSL://:9094
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092,SASL_SSL://localhost:9094
      - LOG_DIR=/tmp/logs
      - KAFKA_SSL_CLIENT_AUTH=required
      - KAFKA_SSL_KEYSTORE_LOCATION=/etc/kafka/secrets/certs/server.jks
      - KAFKA_SSL_KEYSTORE_PASSWORD=password
      - KAFKA_SSL_TRUSTSTORE_LOCATION=/etc/kafka/secrets/certs/test-ca.jks
      - KAFKA_SSL_TRUSTSTORE_PASSWORD=password
        # Passed directly to the JVM. Place SSL debug options here (e.g. -Djavax.net.debug=ssl)
      - KAFKA_OPTS=-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf
        # Note that as of this writing (20 Jul 2022), Kraft mode does not support SCRAM
      - KAFKA_SASL_MECHANISM=PLAIN
    ports:
      - "127.0.0.1:9092:9092"
      # Port 9093 is used by the Kraft configuration
      - "127.0.0.1:9094:9094"
      - "127.0.0.1:29092:29092"
    volumes:
      - ./config/kafka/init_kafka.sh:/init_kafka.sh:z
      - ./config/kafka/kafka_server_jaas.conf:/etc/kafka/kafka_server_jaas.conf:z
      - ./config/kafka/:/etc/kafka/secrets/certs:z
  kafka-rest:
    image: docker.io/confluentinc/cp-kafka-rest
    environment:
      - KAFKA_REST_BOOTSTRAP_SERVERS=kafka:29092
    depends_on:
      - kafka
  kafka-topics-ui:
    image: docker.io/landoop/kafka-topics-ui
    environment:
      - KAFKA_REST_PROXY_URL=http://kafka-rest:8082
      - PROXY=true
    ports:
      - "127.0.0.1:3030:8000"
    depends_on:
      - kafka-rest
  inventory:
    image: quay.io/cloudservices/insights-inventory
    environment:
      - INVENTORY_LOG_LEVEL=DEBUG
      - INVENTORY_DB_HOST=db
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    depends_on:
      - kafka
      - db
  export:
    container_name: export-server
    image: quay.io/cloudservices/export-service:276d09f
    environment:
      - PGSQL_PORT=5432
      - PGSQL_HOSTNAME=db
      - DEBUG=true
      - OPEN_API_FILE_PATH=/var/tmp/openapi.json
      - OPEN_API_PRIVATE_PATH=/var/tmp/private.json
      - PSKS=testing-a-psk
      - KAFKA_BROKERS=kafka:29092
      - AWS_ACCESS_KEY=minio
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - PUBLIC_PORT=8000
      - METRICS_PORT=9090
      - MINIO_PORT=9099
      - PRIVATE_PORT=10010
    ports:
      - 8002:8000
      - 10000:10010
    command: /bin/bash -c "export-service migrate_db upgrade && export-service api_server"
    depends_on:
      - db
      - kafka

  s3:
    image: minio/minio
    ports:
      - 9099:9099
      - 9990:9990
    volumes:
      - ./tmp/minio:/data:Z
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY-minio}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY-minioadmin}
    command: server --address 0.0.0.0:9099 --console-address 0.0.0.0:9990 /data

  s3-createbucket:
    image: minio/mc
    depends_on:
      - s3
    restart: on-failure
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://s3:9099 ${AWS_ACCESS_KEY-minio} ${AWS_SECRET_ACCESS_KEY-minioadmin} || exit 1;
      /usr/bin/mc mb --ignore-existing myminio/exports-bucket;
      /usr/bin/mc policy set public myminio/exports-bucket;
      "
