apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: verify-snapshot-components
spec:
  params:
    - name: SNAPSHOT
      description: The JSON string of the Snapshot under test
  steps:
    - name: verify-snapshot-components
      image: quay.io/konflux-ci/konflux-test:stable
      workingDir: /workspace
      env:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
        - name: SNAPSHOT_URL
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['pac.test.appstudio.openshift.io/source-repo-url']
        - name: SNAPSHOT_SHA
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['pac.test.appstudio.openshift.io/sha']
      script: |
        #!/bin/sh
        set -e
        components=$(jq -c '.components[]' <<< "${SNAPSHOT}")
        snapshotUrlUrlWithoutSuffix=$(echo $SNAPSHOT_URL | sed 's/\.git$//')
        while read components
        do
          # Variables
          componentUrl=$(echo "$components" | jq -r '.source.git.url')
          componentUrlWithoutSuffix=$(echo $componentUrl | sed 's/\.git$//')
          name=$(echo "$components" | jq -r '.name')

          # Skip swatch-database with warning
          if [[ "$name" == "swatch-database" ]]; then
            echo "WARNING: Component $name is excluded from snapshot SHA validation. Skipping."
            continue
          fi

          componentSha=$(echo "$components" | jq -r '.source.git.revision')
          # Check if component git url equals to snapshot git url, if yes check if the snapshot SHA equals to component SHA
          if [[ $componentUrlWithoutSuffix == $snapshotUrlUrlWithoutSuffix ]]; then
              if [[ $componentSha != $SNAPSHOT_SHA ]]; then
                echo "FAIL: Component $name has different SHA: $componentSha than the snapshot, SHA: $SNAPSHOT_SHA."
                exit 1
              fi
              echo "SUCCESS: Component $name matches snapshot SHA."
          else
            echo "INFO: Component $name does not belong to the snapshot repository $SNAPSHOT_URL."
          fi
        done < <(echo "$components")
