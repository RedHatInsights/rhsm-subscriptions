---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: swatch-producer-aws
parameters:
  - name: JAVA_DEBUG
    # Set to "true" to enable remote debugging
    value: ''
  - name: QUARKUS_LAUNCH_DEVMODE
    value: ''
  - name: IMAGE_PULL_SECRET
    value: quay-cloudservices-pull
  - name: MEMORY_REQUEST
    value: 1000Mi
  - name: MEMORY_LIMIT
    value: 1400Mi
  - name: CPU_REQUEST
    value: 350m
  - name: CPU_LIMIT
    value: 1500m
  - name: ENV_NAME
    value: env-swatch-producer-aws
  - name: REPLICAS
    value: '1'
  - name: IMAGE
    value: quay.io/cloudservices/swatch-producer-aws
  - name: IMAGE_TAG
    value: latest
  - name: ENABLE_SPLUNK_HEC
    value: 'true'
  - name: SPLUNK_HEC_URL
    value: https://splunk-hec.redhat.com:8088
  - name: SPLUNK_SOURCE
    value: 'swatch-producer-aws'
  - name: SPLUNK_SOURCE_TYPE
    value: 'quarkus_service'
  - name: SPLUNK_HEC_BATCH_SIZE
    value: '1000'
  - name: SPLUNK_HEC_BATCH_INTERVAL
    value: '10S'
  - name: SPLUNK_HEC_RETRY_COUNT
    value: '3'
  - name: SPLUNK_HEC_INCLUDE_EX
    value: 'true'
  - name: MOTO_REPLICAS
    value: '0'
  - name: AWS_MARKETPLACE_ENDPOINT_URL
    value: 'http://localhost:8101/aws-marketplace/'
  - name: AWS_MANUAL_SUBMISSION_ENABLED
    value: 'false'
  - name: AWS_MARKETPLACE_ENDPOINT_OVERRIDE
    value: 'false'
  - name: AWS_MARKETPLACE_USAGE_WINDOW
    value: 6h
  - name: TALLY_IN_FAIL_ON_DESER_FAILURE
    value: 'true'
  - name: LOGGING_LEVEL_ROOT
    value: 'INFO'
  - name: LOGGING_LEVEL_COM_REDHAT_SWATCH
    value: 'INFO'
  - name: KAFKA_SEEK_OVERRIDE_END
    value: 'false'
  - name: KAFKA_SEEK_OVERRIDE_TIMESTAMP
    value: ''
  - name: ENABLE_AWS_DRY_RUN
    value: 'false'
  - name: KAFKA_BILLABLE_USAGE_REPLICAS
    value: '3'
  - name: KAFKA_BILLABLE_USAGE_PARTITIONS
    value: '3'
  - name: QUARKUS_PROFILE
    value: prod

objects:
- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: swatch-producer-aws
    labels:
      prometheus: quarkus
  spec:
    envName: ${ENV_NAME}
    dependencies:
      - swatch-subscription-sync
      - swatch-billable-usage

    kafkaTopics:
      - replicas: ${{KAFKA_BILLABLE_USAGE_REPLICAS}}
        partitions: ${{KAFKA_BILLABLE_USAGE_PARTITIONS}}
        topicName: platform.rhsm-subscriptions.billable-usage
      - replicas: ${{KAFKA_BILLABLE_USAGE_REPLICAS}}
        partitions: ${{KAFKA_BILLABLE_USAGE_PARTITIONS}}
        topicName: platform.rhsm-subscriptions.billable-usage-hourly-aggregate

    pullSecrets:
      name: ${IMAGE_PULL_SECRET}

    deployments:
      - name: service
        replicas: ${{REPLICAS}}
        webServices:
          public:
            enabled: true
        podSpec:
          image: ${IMAGE}:${IMAGE_TAG}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/live
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/ready
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          env:
            - name: JAVA_DEBUG
              value: ${JAVA_DEBUG}
            - name: QUARKUS_LAUNCH_DEVMODE
              value: ${QUARKUS_LAUNCH_DEVMODE}
            - name: LOGGING_LEVEL_ROOT
              value: ${LOGGING_LEVEL_ROOT}
            - name: LOGGING_LEVEL_COM_REDHAT_SWATCH
              value: ${LOGGING_LEVEL_COM_REDHAT_SWATCH}
            - name: ENABLE_SPLUNK_HEC
              value: ${ENABLE_SPLUNK_HEC}
            - name: SPLUNKMETA_namespace
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: HOST_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: SPLUNK_HEC_URL
              value: ${SPLUNK_HEC_URL}
            - name: SPLUNK_HEC_TOKEN
              valueFrom:
                secretKeyRef:
                  name: splunk-hec-external
                  key: token
            - name: SPLUNK_SOURCE
              value: ${SPLUNK_SOURCE}
            - name: SPLUNK_SOURCE_TYPE
              value: ${SPLUNK_SOURCE_TYPE}
            - name: SPLUNK_HEC_BATCH_SIZE
              value: ${SPLUNK_HEC_BATCH_SIZE}
            - name: SPLUNK_HEC_BATCH_INTERVAL
              value: ${SPLUNK_HEC_BATCH_INTERVAL}
            - name: SPLUNK_HEC_RETRY_COUNT
              value: ${SPLUNK_HEC_RETRY_COUNT}
            - name: SPLUNK_HEC_INCLUDE_EX
              value: ${SPLUNK_HEC_INCLUDE_EX}
            - name: AWS_MANUAL_SUBMISSION_ENABLED
              value: ${AWS_MANUAL_SUBMISSION_ENABLED}
            - name: AWS_MARKETPLACE_ENDPOINT_OVERRIDE
              value: ${AWS_MARKETPLACE_ENDPOINT_OVERRIDE}
            - name: AWS_CONFIG_FILE
              value: /aws-marketplace-credentials/config.ini
            - name: AWS_MARKETPLACE_ENDPOINT_URL
              value: ${AWS_MARKETPLACE_ENDPOINT_URL}
            - name: AWS_MARKETPLACE_USAGE_WINDOW
              value: ${AWS_MARKETPLACE_USAGE_WINDOW}
            - name: SWATCH_SELF_PSK
              valueFrom:
                secretKeyRef:
                  name: swatch-psks
                  key: self
            - name: TALLY_IN_FAIL_ON_DESER_FAILURE
              value: ${TALLY_IN_FAIL_ON_DESER_FAILURE}
            - name: KAFKA_SEEK_OVERRIDE_END
              value: ${KAFKA_SEEK_OVERRIDE_END}
            - name: KAFKA_SEEK_OVERRIDE_TIMESTAMP
              value: ${KAFKA_SEEK_OVERRIDE_TIMESTAMP}
            - name: ENABLE_AWS_DRY_RUN
              value: ${ENABLE_AWS_DRY_RUN}
            - name: QUARKUS_PROFILE
              value: ${QUARKUS_PROFILE}
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: pinhead
              mountPath: /pinhead
            - name: aws-marketplace-credentials
              mountPath: /aws-marketplace-credentials
          volumes:
            - name: logs
              emptyDir:
            - name: pinhead
              secret:
                secretName: pinhead
            - name: aws-marketplace-credentials
              secret:
                secretName: aws-marketplace-credentials

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: swatch-producer-aws-moto
    labels:
      app: swatch-producer-aws-moto
  spec:
    replicas: ${{MOTO_REPLICAS}}
    selector:
      matchLabels:
        app: swatch-producer-aws-moto
    template:
      metadata:
        labels:
          app: swatch-producer-aws-moto
      spec:
        containers:
          - name: moto
            image: 'motoserver/moto:latest'
            env:
              - name: MOTO_PORT
                value: '5000'
            volumeMounts:
              - name: logs
                mountPath: /logs
        volumes:
          - name: logs
            emptyDir:

- apiVersion: v1
  kind: Service
  metadata:
    name: moto
  spec:
    selector:
      app: swatch-producer-aws-moto
    ports:
      - protocol: TCP
        port: 5000
        targetPort: 5000

- apiVersion: v1
  kind: Secret
  metadata:
    name: swatch-psks
  data:
    self: cGxhY2Vob2xkZXI=

- apiVersion: v1
  kind: Secret
  metadata:
    name: aws-marketplace-credentials
  data:
    # Base64 encoded
    config.ini: W3Byb2ZpbGUgMTIzNDU2N10KYXdzX2FjY2Vzc19rZXlfaWQgPSByYW5kb21zdHVmZgphd3Nfc2VjcmV0X2FjY2Vzc19rZXkgPSByYW5kb21zdHVmZgo=
