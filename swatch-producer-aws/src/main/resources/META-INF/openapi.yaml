---
openapi: 3.0.2
info:
  title: SWatch Producer AWS Internal API
  version: 1.0.0
  description: "Provides AWS with billing details based on BillableUsage"
  contact:
    url: https://github.com/RedHatInsights/rhsm-subscriptions
paths:
  /api/swatch-producer-aws/internal/aws/billable_usage:
    post:
      summary: Send `BillableUsage` usage data to AWS.
      requestBody:
        description: A given `BillableUsage` to have usage data forwarded to AWS.
        content:
          application/json:
            schema:
              $ref: '../../../../../swatch-core/schemas/billable_usage.yaml'
        required: false
      responses:
        '202':
          description: "BillableUsage queued for sending to AWS."
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: submitBillableUsage
      description: Only available when `AWS_MANUAL_SUBMISSION_ENABLED=true`
  /api/swatch-producer-aws/internal/kafka_seek_position:
    post:
      summary:  Seek Kafka consumer to a relative position
      tags:
        - kafka
      parameters:
        - name: position
          in: query
          schema:
            $ref: '#/components/schemas/KafkaSeekPosition'
      responses:
        '204':
          description: "Kafka queue seeked successfully for all partitions."
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: kafkaSeekPosition
      description: >
        Seek the kafka consumer manually to the specified position (for
        debugging/support purposes)
  /api/swatch-producer-aws/internal/kafka_seek_timestamp:
    post:
      summary: Seek Kafka consumer to a specific timestamp
      tags:
        - kafka
      parameters:
        - name: timestamp
          in: query
          schema:
            type: string
      responses:
        '204':
          description: "Kafka queue seeked successfully for all partitions."
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: kafkaSeekTimestamp
      description: >
        Seek the kafka consumer manually to the specified timestamp (for
        debugging/support purposes).
components:
  responses:
    InternalServerError:
      description: "An internal server error has occurred and is not recoverable."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    BadRequest:
      description: "The server could could not process the current request."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    Forbidden:
      description: "The request was valid, but the request was refused by the server."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    ResourceNotFound:
      description: "The requested resource was not found."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    ServiceUnavailable:
      description: "The server is currently unavailable."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
  schemas:
    Errors:
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: "#/components/schemas/Error"
    Error:
      required:
        - status
        - code
        - title
      properties:
        status:
          type: string
        code:
          type: string
        title:
          type: string
        detail:
          type: string
    KafkaSeekPosition:
      enum:
        - beginning
        - end
