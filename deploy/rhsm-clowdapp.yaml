---
apiVersion: v1
kind: Template
metadata:
  name: rhsm
parameters:
  - name: SUBSCRIPTIONS_HAWTIO_BASE_PATH
    value: /app/rhsm-subscriptions/hawtio
  - name: RH_MARKETPLACE_HAWTIO_BASE_PATH
    value: /app/rhsm-rh-marketplace/hawtio
  - name: METRICS_WORKER_HAWTIO_BASE_PATH
    value: /app/rhsm-metrics/hawtio
  - name: CONDUIT_HAWTIO_BASE_PATH
    value: /app/rhsm-conduit/hawtio
  - name: CAPACITY_INGRESS_HAWTIO_BASE_PATH
    value: /app/rhsm-capacity-ingress/hawtio
  - name: SERVER_MAX_HTTP_HEADER_SIZE
    value: '48000'
  - name: LOGGING_LEVEL_ROOT
    value: WARN
  - name: LOGGING_LEVEL
    value: INFO
  - name: KAFKA_MESSAGE_THREADS
    value: '24'
  - name: KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS
    value: '3600000'
  - name: KAFKA_SEEK_OVERRIDE_END
    value: 'false'
  - name: KAFKA_SEEK_OVERRIDE_TIMESTAMP
    value: ''
  - name: REPLICAS
    value: '1'
  - name: IMAGE
    value: quay.io/cloudservices/rhsm-subscriptions
  - name: CONDUIT_IMAGE
    value: quay.io/cloudservices/swatch-system-conduit
  - name: IMAGE_TAG
    value: latest
  - name: IMAGE_PULL_SECRET
    value: quay-cloudservices-pull
  - name: MEMORY_REQUEST
    value: 1000Mi
  - name: MEMORY_LIMIT
    value: 1400Mi
  - name: CPU_REQUEST
    value: 350m
  - name: CPU_LIMIT
    value: 1500m
  - name: CLOUDIGRADE_ENABLED
    value: 'false'
  - name: CLOUDIGRADE_HOST
    value: 'localhost'
  - name: CLOUDIGRADE_PORT
    value: '8080'
  - name: RHSM_URL
    value: https://api.rhsm.qa.redhat.com/v1

  - name: TOKEN_REFRESHER_IMAGE
    value: quay.io/observatorium/token-refresher:master-2021-02-05-5da9663
  - name: TOKEN_REFRESHER_CPU_REQUEST
    value: 50m
  - name: TOKEN_REFRESHER_CPU_LIMIT
    value: 100m
  - name: TOKEN_REFRESHER_MEMORY_REQUEST
    value: 128Mi
  - name: TOKEN_REFRESHER_MEMORY_LIMIT
    value: 150Mi
  - name: PROM_URL
    value: http://localhost:8082
  - name: DATABASE_CONNECTION_TIMEOUT_MS
    value: '30000'
  # TODO This has been lowered from what it was in the previous environment (from 25 to 10)
  # We were running the clowder DB out of connections.  If we need more, we need to investigate
  # tuning the database to allow more
  - name: DATABASE_MAX_POOL_SIZE
    value: '10'
  - name: INVENTORY_DATABASE_CONNECTION_TIMEOUT_MS
    value: '30000'
  # TODO This has been lowered from what it was in the previous environment (from 25 to 10)
  # We were running the clowder DB out of connections.  If we need more, we need to investigate
  # tuning the database to allow more
  - name: INVENTORY_DATABASE_MAX_POOL_SIZE
    value: '10'
  - name: OPENSHIFT_BILLING_MODEL_FILTER
    value: 'marketplace'
  - name: RH_MARKETPLACE_TOKEN_REFRESH_PERIOD
    value: 1m
  - name: RH_MARKETPLACE_MAX_ATTEMPTS
    value: '10'
  - name: RH_MARKETPLACE_BACK_OFF_MAX_INTERVAL
    value: 64s
  - name: RH_MARKETPLACE_BACK_OFF_INITIAL_INTERVAL
    value: 1s
  - name: RH_MARKETPLACE_BACK_OFF_MULTIPLIER
    value: '2'
  - name: RH_MARKETPLACE_VERIFY_BATCHES
    value: 'true'
  - name: RH_MARKETPLACE_MANUAL_SUBMISSION_ENABLED
    value: 'false'
  - name: RH_MARKETPLACE_AMENDMENT_NOT_SUPPORTED_MARKER
    value: '(amendments) is not available'
  - name: SUBSCRIPTION_URL
    value: https://subscription.qa.api.redhat.com/svcrest/subscription/v5
  - name: SUBSCRIPTION_MAX_CONNECTIONS
    value: '100'
  - name: SUBSCRIPTION_BACKOFF_INITIAL_INTERVAL
    value: 1s
  - name: SUBSCRIPTION_MAX_RETRY_ATTEMPTS
    value: '4'
  - name: SUBSCRIPTION_PAGE_SIZE
    value: '500'
  - name: USER_HOST
    # required: true # FIXME Not sure where this is provided
    value: 'user.qa.api.redhat.com'
  - name: USER_MAX_CONNECTIONS
    value: '100'
  - name: USER_MAX_ATTEMPTS
    value: '10'
  - name: USER_BACK_OFF_MAX_INTERVAL
    value: 64s
  - name: USER_BACK_OFF_INITIAL_INTERVAL
    value: 1s
  - name: USER_BACK_OFF_MULTIPLIER
    value: '2'
  - name: ENV_NAME
    value: env-rhsm

  - name: PURGE_SNAPSHOT_SCHEDULE
    value: 0 3 * * *
  - name: CAPTURE_SNAPSHOT_SCHEDULE
    value: 0 1 * * *
  - name: CAPTURE_HOURLY_SNAPSHOT_SCHEDULE
    value: '@hourly'
  - name: SUBSCRIPTION_SYNC_SCHEDULE
    value: 0 10 * * *
  - name: METERING_SCHEDULE
    value: '@hourly'
  - name: OFFERING_SYNC_SCHEDULE
    value: 0 2 * * *

  - name: OPENSHIFT_METERING_RANGE
    value: '60'
  - name: HOURLY_TALLY_OFFSET
    value: '60'
  # TODO: this should be removed once OCM has non-standard billing_model clusters
  - name: OPENSHIFT_ENABLED_ACCOUNT_PROMQL
    value: "group(min_over_time(subscription_labels{ebs_account != '', billing_model='standard'}[1h])) by (ebs_account)"
  - name: EVENT_RECORD_RETENTION
    value: '90d'
  - name: SUBSCRIPTION_SYNC_ENABLED
    value: 'true'
  - name: SUBSCRIPTION_URL
    value: https://subscription.qa.api.redhat.com/svcrest/subscription/v5
  - name: SUBSCRIPTION_IGNORE_EXPIRED_OLDER_THAN
    value: 2m
  - name: SUBSCRIPTION_IGNORE_STARTING_LATER_THAN
    value: 2m
  - name: PRODUCT_URL
    value: https://product.qa.api.redhat.com/svcrest/product/v3
  - name: RHSM_RBAC_USE_STUB
    value: 'false'
  # TODO after enable individual functionality (see ENT-4487)
  - name: DEV_MODE
    value: 'false'
  - name: ENABLE_ACCOUNT_RESET
    value: 'false'
  - name: ENABLE_SPLUNK_HEC
    value: 'true'
  - name: SPLUNK_SOURCE
    value: 'rhsm-subscription-hec'
  - name: SPLUNK_SOURCE_TYPE
    value: 'springboot_server'
  - name: SPLUNK_MESSAGE_FORMAT
    value: 'text'
  - name: SPLUNK_HEC_URL
    value: https://splunk-hec.redhat.com:8088
  - name: SPLUNK_HEC_CONNECT_TIMEOUT
    value: '5000'
  - name: SPLUNK_HEC_BATCH_SIZE
    value: '1'
  - name: SPLUNK_HEC_TERMINATION_TIMEOUT
    value: '2000'

objects:
- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdJobInvocation
  metadata:
    name: rhsm-jobs
  spec:
    appName: rhsm
    jobs:
      - metrics-cron
      - cron-tally
      - hourly-tally
      - cron-purge
      - subscription-sync
      - offering-sync

- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: rhsm
  spec:
    # The name of the ClowdEnvironment providing the services
    envName: ${ENV_NAME}
    dependencies:
      - host-inventory

    kafkaTopics:
      - replicas: 3
        partitions: 3
        topicName: platform.rhsm-subscriptions.tally
      - replicas: 3
        partitions: 3
        topicName: platform.rhsm-subscriptions.tasks
      - replicas: 3
        partitions: 3
        topicName: platform.rhsm-subscriptions.openshift-metering-tasks
      - replicas: 3
        partitions: 3
        topicName: platform.rhsm-subscriptions.subscription-sync

    # Creates a database if local mode, or uses RDS in production
    database:
      # Must specify both a name and a major postgres version
      name: rhsm-db
      version: 12

    pullSecrets:
      name: ${IMAGE_PULL_SECRET}

    deployments:
      - name: api
        minReplicas: 1
        webServices:
          public:
            enabled: true
        podSpec:
          image: ${IMAGE}:${IMAGE_TAG}
          command:
            - /bin/bash
            - /usr/local/s2i/run
          initContainers:
            - env:
                - name: SPRING_PROFILES_ACTIVE
                  value: liquibase-only
              inheritEnv: true
              command:
                - /bin/bash
                - /usr/local/s2i/run
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
          env:
            - name: ENABLE_SPLUNK_HEC
              value: ${ENABLE_SPLUNK_HEC}
            - name: SPLUNKMETA_namespace
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: SPLUNKMETA_host
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: SPLUNK_HEC_URL
              value: ${SPLUNK_HEC_URL}
            - name: SPLUNK_HEC_TOKEN
              valueFrom:
                secretKeyRef:
                  name: splunk-hec-external
                  key: token
            - name: SPLUNK_SOURCE
              value: ${SPLUNK_SOURCE}
            - name: SPLUNK_SOURCE_TYPE
              value: ${SPLUNK_SOURCE_TYPE}
            - name: SPLUNK_MESSAGE_FORMAT
              value: ${SPLUNK_MESSAGE_FORMAT}
            - name: SPLUNK_HEC_CONNECT_TIMEOUT
              value: ${SPLUNK_HEC_CONNECT_TIMEOUT}
            - name: SPLUNK_HEC_BATCH_SIZE
              value: ${SPLUNK_HEC_BATCH_SIZE}
            - name: SPLUNK_HEC_TERMINATION_TIMEOUT
              value: ${SPLUNK_HEC_TERMINATION_TIMEOUT}
            - name: SPRING_PROFILES_ACTIVE
              value: api
            # turn off built-in jolokia, so that the spring boot jolokia actuator will work
            - name: AB_JOLOKIA_OFF
              value: 'true'
            - name: SERVER_MAX_HTTP_HEADER_SIZE
              value: ${SERVER_MAX_HTTP_HEADER_SIZE}
            - name: LOG_FILE
              value: /logs/server.log
            - name: JAVA_MAX_MEM_RATIO
              value: '85'
            - name: GC_MAX_METASPACE_SIZE
              value: '256'
            - name: LOGGING_LEVEL_ROOT
              value: ${LOGGING_LEVEL_ROOT}
            - name: LOGGING_LEVEL_ORG_CANDLEPIN
              value: ${LOGGING_LEVEL}
            - name: KAFKA_MESSAGE_THREADS
              value: ${KAFKA_MESSAGE_THREADS}
            - name: KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS
              value: ${KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS}
            - name: KAFKA_SEEK_OVERRIDE_END
              value: ${KAFKA_SEEK_OVERRIDE_END}
            - name: KAFKA_SEEK_OVERRIDE_TIMESTAMP
              value: ${KAFKA_SEEK_OVERRIDE_TIMESTAMP}
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: hostname
            - name: DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: port
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: password
            - name: DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: name
            - name: DATABASE_CONNECTION_TIMEOUT_MS
              value: ${DATABASE_CONNECTION_TIMEOUT_MS}
            - name: DATABASE_MAX_POOL_SIZE
              value: ${DATABASE_MAX_POOL_SIZE}
            - name: INVENTORY_DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: hostname
            - name: INVENTORY_DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: name
            - name: INVENTORY_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: username
            - name: INVENTORY_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: password
            - name: CLOUDIGRADE_ENABLED
              value: ${CLOUDIGRADE_ENABLED}
            - name: CLOUDIGRADE_HOST
              value: ${CLOUDIGRADE_HOST}
            - name: CLOUDIGRADE_PORT
              value: ${CLOUDIGRADE_PORT}
            - name: PROM_URL
              value: ${PROM_URL}
            - name: OPENSHIFT_BILLING_MODEL_FILTER
              value: ${OPENSHIFT_BILLING_MODEL_FILTER}
            - name: USER_HOST
              value: ${USER_HOST}
            - name: USER_MAX_CONNECTIONS
              value: ${USER_MAX_CONNECTIONS}
            - name: USER_MAX_ATTEMPTS
              value: ${USER_MAX_ATTEMPTS}
            - name: USER_BACK_OFF_MAX_INTERVAL
              value: ${USER_BACK_OFF_MAX_INTERVAL}
            - name: USER_BACK_OFF_INITIAL_INTERVAL
              value: ${USER_BACK_OFF_INITIAL_INTERVAL}
            - name: USER_BACK_OFF_MULTIPLIER
              value: ${USER_BACK_OFF_MULTIPLIER}
            - name: RHSM_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tls
                  key: keystore_password
            - name: RHSM_KEYSTORE
              value: /pinhead/keystore.jks
            - name: RHSM_RBAC_USE_STUB
              value: ${RHSM_RBAC_USE_STUB}
            - name: DEV_MODE
              value: ${DEV_MODE}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: pinhead
              mountPath: /pinhead
          volumes:
            - name: logs
              emptyDir:
            - name: pinhead
              secret:
                secretName: pinhead

      - name: subscriptions-worker
        minReplicas: 1
        webServices:
          public:
            enabled: true
        podSpec:
          image: ${IMAGE}:${IMAGE_TAG}
          command:
            - /bin/bash
            - /usr/local/s2i/run
          initContainers:
            - env:
                - name: SPRING_PROFILES_ACTIVE
                  value: liquibase-only
              inheritEnv: true
              command:
                - /bin/bash
                - /usr/local/s2i/run
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
          env:
            - name: ENABLE_SPLUNK_HEC
              value: ${ENABLE_SPLUNK_HEC}
            - name: SPLUNKMETA_namespace
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: SPLUNKMETA_host
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: SPLUNK_HEC_URL
              value: ${SPLUNK_HEC_URL}
            - name: SPLUNK_HEC_TOKEN
              valueFrom:
                secretKeyRef:
                  name: splunk-hec-external
                  key: token
            - name: SPLUNK_SOURCE
              value: ${SPLUNK_SOURCE}
            - name: SPLUNK_SOURCE_TYPE
              value: ${SPLUNK_SOURCE_TYPE}
            - name: SPLUNK_MESSAGE_FORMAT
              value: ${SPLUNK_MESSAGE_FORMAT}
            - name: SPLUNK_HEC_CONNECT_TIMEOUT
              value: ${SPLUNK_HEC_CONNECT_TIMEOUT}
            - name: SPLUNK_HEC_BATCH_SIZE
              value: ${SPLUNK_HEC_BATCH_SIZE}
            - name: SPLUNK_HEC_TERMINATION_TIMEOUT
              value: ${SPLUNK_HEC_TERMINATION_TIMEOUT}
            - name: SPRING_PROFILES_ACTIVE
              value: worker,kafka-queue
            - name: AB_JOLOKIA_OFF
              value: 'true'
            - name: SERVER_MAX_HTTP_HEADER_SIZE
              value: ${SERVER_MAX_HTTP_HEADER_SIZE}
            - name: HAWTIO_BASE_PATH
              value: ${SUBSCRIPTIONS_HAWTIO_BASE_PATH}
            - name: LOG_FILE
              value: /logs/server.log
            - name: JAVA_MAX_MEM_RATIO
              value: '85'
            - name: GC_MAX_METASPACE_SIZE
              value: '256'
            - name: LOGGING_LEVEL_ROOT
              value: ${LOGGING_LEVEL_ROOT}
            - name: LOGGING_LEVEL_ORG_CANDLEPIN
              value: ${LOGGING_LEVEL}
            - name: KAFKA_MESSAGE_THREADS
              value: ${KAFKA_MESSAGE_THREADS}
            - name: KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS
              value: ${KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS}
            - name: KAFKA_SEEK_OVERRIDE_END
              value: ${KAFKA_SEEK_OVERRIDE_END}
            - name: KAFKA_SEEK_OVERRIDE_TIMESTAMP
              value: ${KAFKA_SEEK_OVERRIDE_TIMESTAMP}
            - name: DATABASE_CONNECTION_TIMEOUT_MS
              value: ${DATABASE_CONNECTION_TIMEOUT_MS}
            - name: DATABASE_MAX_POOL_SIZE
              value: ${DATABASE_MAX_POOL_SIZE}
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: hostname
            - name: DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: port
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: password
            - name: DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: name
            - name: INVENTORY_DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: hostname
            - name: INVENTORY_DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: name
            - name: INVENTORY_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: username
            - name: INVENTORY_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: password
            - name: INVENTORY_DATABASE_CONNECTION_TIMEOUT_MS
              value: ${INVENTORY_DATABASE_CONNECTION_TIMEOUT_MS}
            - name: INVENTORY_DATABASE_MAX_POOL_SIZE
              value: ${INVENTORY_DATABASE_MAX_POOL_SIZE}
            - name: CLOUDIGRADE_ENABLED
              value: ${CLOUDIGRADE_ENABLED}
            - name: CLOUDIGRADE_HOST
              value: ${CLOUDIGRADE_HOST}
            - name: CLOUDIGRADE_PORT
              value: ${CLOUDIGRADE_PORT}
            - name: PROM_URL
              value: ${PROM_URL}
            - name: OPENSHIFT_BILLING_MODEL_FILTER
              value: ${OPENSHIFT_BILLING_MODEL_FILTER}
            - name: USER_HOST
              value: ${USER_HOST}
            - name: USER_MAX_CONNECTIONS
              value: ${USER_MAX_CONNECTIONS}
            - name: USER_MAX_ATTEMPTS
              value: ${USER_MAX_ATTEMPTS}
            - name: USER_BACK_OFF_MAX_INTERVAL
              value: ${USER_BACK_OFF_MAX_INTERVAL}
            - name: USER_BACK_OFF_INITIAL_INTERVAL
              value: ${USER_BACK_OFF_INITIAL_INTERVAL}
            - name: USER_BACK_OFF_MULTIPLIER
              value: ${USER_BACK_OFF_MULTIPLIER}
            - name: RHSM_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tls
                  key: keystore_password
            - name: RHSM_KEYSTORE
              value: /pinhead/keystore.jks
            - name: DEV_MODE
              value: ${DEV_MODE}
            - name: ENABLE_ACCOUNT_RESET
              value: ${ENABLE_ACCOUNT_RESET}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: pinhead
              mountPath: /pinhead
          volumes:
            - name: logs
              emptyDir:
            - name: pinhead
              secret:
                secretName: pinhead

      - name: billing-provider-rh-marketplace
        webServices:
          public:
            enabled: true
        minReplicas: 1
        podSpec:
          image: ${IMAGE}:${IMAGE_TAG}
          command:
            - /bin/bash
            - /usr/local/s2i/run
          initContainers:
            - env:
                - name: SPRING_PROFILES_ACTIVE
                  value: liquibase-only
              inheritEnv: true
              command:
                - /bin/bash
                - /usr/local/s2i/run
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
          env:
            - name: ENABLE_SPLUNK_HEC
              value: ${ENABLE_SPLUNK_HEC}
            - name: SPLUNKMETA_namespace
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: SPLUNKMETA_host
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: SPLUNK_HEC_URL
              value: ${SPLUNK_HEC_URL}
            - name: SPLUNK_HEC_TOKEN
              valueFrom:
                secretKeyRef:
                  name: splunk-hec-external
                  key: token
            - name: SPLUNK_SOURCE
              value: ${SPLUNK_SOURCE}
            - name: SPLUNK_SOURCE_TYPE
              value: ${SPLUNK_SOURCE_TYPE}
            - name: SPLUNK_MESSAGE_FORMAT
              value: ${SPLUNK_MESSAGE_FORMAT}
            - name: SPLUNK_HEC_CONNECT_TIMEOUT
              value: ${SPLUNK_HEC_CONNECT_TIMEOUT}
            - name: SPLUNK_HEC_BATCH_SIZE
              value: ${SPLUNK_HEC_BATCH_SIZE}
            - name: SPLUNK_HEC_TERMINATION_TIMEOUT
              value: ${SPLUNK_HEC_TERMINATION_TIMEOUT}
            - name: SPRING_PROFILES_ACTIVE
              value: rh-marketplace,kafka-queue
            - name: AB_JOLOKIA_OFF
              value: 'true'
            - name: SERVER_MAX_HTTP_HEADER_SIZE
              value: ${SERVER_MAX_HTTP_HEADER_SIZE}
            - name: HAWTIO_BASE_PATH
              value: ${RH_MARKETPLACE_HAWTIO_BASE_PATH}
            - name: LOG_FILE
              value: /logs/server.log
            - name: JAVA_MAX_MEM_RATIO
              value: '85'
            - name: GC_MAX_METASPACE_SIZE
              value: '256'
            - name: LOGGING_LEVEL_ROOT
              value: ${LOGGING_LEVEL_ROOT}
            - name: LOGGING_LEVEL_ORG_CANDLEPIN
              value: ${LOGGING_LEVEL}
            - name: KAFKA_MESSAGE_THREADS
              value: ${KAFKA_MESSAGE_THREADS}
            - name: KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS
              value: ${KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS}
            - name: KAFKA_SEEK_OVERRIDE_END
              value: ${KAFKA_SEEK_OVERRIDE_END}
            - name: KAFKA_SEEK_OVERRIDE_TIMESTAMP
              value: ${KAFKA_SEEK_OVERRIDE_TIMESTAMP}
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: hostname
            - name: DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: port
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: password
            - name: DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: name
            - name: DATABASE_CONNECTION_TIMEOUT_MS
              value: ${DATABASE_CONNECTION_TIMEOUT_MS}
            - name: DATABASE_MAX_POOL_SIZE
              value: ${DATABASE_MAX_POOL_SIZE}
            - name: RH_MARKETPLACE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: rh-marketplace
                  key: key
            - name: RH_MARKETPLACE_URL
              valueFrom:
                secretKeyRef:
                  name: rh-marketplace
                  key: url
            - name: RH_MARKETPLACE_TOKEN_REFRESH_PERIOD
              value: ${RH_MARKETPLACE_TOKEN_REFRESH_PERIOD}
            - name: RH_MARKETPLACE_MAX_ATTEMPTS
              value: ${RH_MARKETPLACE_MAX_ATTEMPTS}
            - name: RH_MARKETPLACE_BACK_OFF_MAX_INTERVAL
              value: ${RH_MARKETPLACE_BACK_OFF_MAX_INTERVAL}
            - name: RH_MARKETPLACE_BACK_OFF_INITIAL_INTERVAL
              value: ${RH_MARKETPLACE_BACK_OFF_INITIAL_INTERVAL}
            - name: RH_MARKETPLACE_BACK_OFF_MULTIPLIER
              value: ${RH_MARKETPLACE_BACK_OFF_MULTIPLIER}
            - name: RH_MARKETPLACE_VERIFY_BATCHES
              value: ${RH_MARKETPLACE_VERIFY_BATCHES}
            - name: RH_MARKETPLACE_MANUAL_SUBMISSION_ENABLED
              value: ${RH_MARKETPLACE_MANUAL_SUBMISSION_ENABLED}
            - name: RH_MARKETPLACE_AMENDMENT_NOT_SUPPORTED_MARKER
              value: ${RH_MARKETPLACE_AMENDMENT_NOT_SUPPORTED_MARKER}
            - name: SUBSCRIPTION_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tls
                  key: keystore_password
            - name: SUBSCRIPTION_KEYSTORE
              value: /pinhead/keystore.jks
            - name: SUBSCRIPTION_URL
              value: ${SUBSCRIPTION_URL}
            - name: SUBSCRIPTION_MAX_CONNECTIONS
              value: ${SUBSCRIPTION_MAX_CONNECTIONS}
            - name: SUBSCRIPTION_BACKOFF_INITIAL_INTERVAL
              value: ${SUBSCRIPTION_BACKOFF_INITIAL_INTERVAL}
            - name: SUBSCRIPTION_MAX_RETRY_ATTEMPTS
              value: ${SUBSCRIPTION_MAX_RETRY_ATTEMPTS}
            - name: SUBSCRIPTION_PAGE_SIZE
              value: ${SUBSCRIPTION_PAGE_SIZE}
            - name: USER_HOST
              value: ${USER_HOST}
            - name: USER_MAX_CONNECTIONS
              value: ${USER_MAX_CONNECTIONS}
            - name: USER_MAX_ATTEMPTS
              value: ${USER_MAX_ATTEMPTS}
            - name: USER_BACK_OFF_MAX_INTERVAL
              value: ${USER_BACK_OFF_MAX_INTERVAL}
            - name: USER_BACK_OFF_INITIAL_INTERVAL
              value: ${USER_BACK_OFF_INITIAL_INTERVAL}
            - name: USER_BACK_OFF_MULTIPLIER
              value: ${USER_BACK_OFF_MULTIPLIER}
            - name: RHSM_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tls
                  key: keystore_password
            - name: RHSM_KEYSTORE
              value: /pinhead/keystore.jks
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: pinhead
              mountPath: /pinhead
          volumes:
            - name: logs
              emptyDir:
            - name: pinhead
              secret:
                secretName: pinhead

      - name: metrics-worker
        webServices:
          public:
            enabled: true
        minReplicas: 1
        podSpec:
          image: ${IMAGE}:${IMAGE_TAG}
          command:
            - /bin/bash
            - /usr/local/s2i/run
          initContainers:
            - env:
                - name: SPRING_PROFILES_ACTIVE
                  value: liquibase-only
              inheritEnv: true
              command:
                - /bin/bash
                - /usr/local/s2i/run
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
          env:
            - name: ENABLE_SPLUNK_HEC
              value: ${ENABLE_SPLUNK_HEC}
            - name: SPLUNKMETA_namespace
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: SPLUNKMETA_host
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: SPLUNK_HEC_URL
              value: ${SPLUNK_HEC_URL}
            - name: SPLUNK_HEC_TOKEN
              valueFrom:
                secretKeyRef:
                  name: splunk-hec-external
                  key: token
            - name: SPLUNK_SOURCE
              value: ${SPLUNK_SOURCE}
            - name: SPLUNK_SOURCE_TYPE
              value: ${SPLUNK_SOURCE_TYPE}
            - name: SPLUNK_MESSAGE_FORMAT
              value: ${SPLUNK_MESSAGE_FORMAT}
            - name: SPLUNK_HEC_CONNECT_TIMEOUT
              value: ${SPLUNK_HEC_CONNECT_TIMEOUT}
            - name: SPLUNK_HEC_BATCH_SIZE
              value: ${SPLUNK_HEC_BATCH_SIZE}
            - name: SPLUNK_HEC_TERMINATION_TIMEOUT
              value: ${SPLUNK_HEC_TERMINATION_TIMEOUT}
            - name: SPRING_PROFILES_ACTIVE
              value: openshift-metering-worker,kafka-queue
             # turn off built-in jolokia, so that the spring boot jolokia actuator will work
            - name: AB_JOLOKIA_OFF
              value: 'true'
            - name: SERVER_MAX_HTTP_HEADER_SIZE
              value: ${SERVER_MAX_HTTP_HEADER_SIZE}
            - name: HAWTIO_BASE_PATH
              value: ${METRICS_WORKER_HAWTIO_BASE_PATH}
            - name: LOG_FILE
              value: /logs/server.log
            - name: JAVA_MAX_MEM_RATIO
              value: '85'
            - name: GC_MAX_METASPACE_SIZE
              value: '256'
            - name: LOGGING_LEVEL_ROOT
              value: ${LOGGING_LEVEL_ROOT}
            - name: LOGGING_LEVEL_ORG_CANDLEPIN
              value: ${LOGGING_LEVEL}
            - name: KAFKA_MESSAGE_THREADS
              value: ${KAFKA_MESSAGE_THREADS}
            - name: KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS
              value: ${KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS}
            - name: KAFKA_SEEK_OVERRIDE_END
              value: ${KAFKA_SEEK_OVERRIDE_END}
            - name: KAFKA_SEEK_OVERRIDE_TIMESTAMP
              value: ${KAFKA_SEEK_OVERRIDE_TIMESTAMP}
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: hostname
            - name: DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: port
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: password
            - name: DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: name
            - name: DATABASE_CONNECTION_TIMEOUT_MS
              value: ${DATABASE_CONNECTION_TIMEOUT_MS}
            - name: DATABASE_MAX_POOL_SIZE
              value: ${DATABASE_MAX_POOL_SIZE}
            - name: INVENTORY_DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: hostname
            - name: INVENTORY_DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: name
            - name: INVENTORY_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: username
            - name: INVENTORY_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: password
            - name: CLOUDIGRADE_ENABLED
              value: ${CLOUDIGRADE_ENABLED}
            - name: CLOUDIGRADE_HOST
              value: ${CLOUDIGRADE_HOST}
            - name: CLOUDIGRADE_PORT
              value: ${CLOUDIGRADE_PORT}
            - name: PROM_URL
              value: ${PROM_URL}
            - name: OPENSHIFT_BILLING_MODEL_FILTER
              value: ${OPENSHIFT_BILLING_MODEL_FILTER}
            - name: USER_HOST
              value: ${USER_HOST}
            - name: USER_MAX_CONNECTIONS
              value: ${USER_MAX_CONNECTIONS}
            - name: USER_MAX_ATTEMPTS
              value: ${USER_MAX_ATTEMPTS}
            - name: USER_BACK_OFF_MAX_INTERVAL
              value: ${USER_BACK_OFF_MAX_INTERVAL}
            - name: USER_BACK_OFF_INITIAL_INTERVAL
              value: ${USER_BACK_OFF_INITIAL_INTERVAL}
            - name: USER_BACK_OFF_MULTIPLIER
              value: ${USER_BACK_OFF_MULTIPLIER}
            - name: RHSM_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tls
                  key: keystore_password
            - name: RHSM_KEYSTORE
              value: /pinhead/keystore.jks
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: pinhead
              mountPath: /pinhead
          volumes:
            - name: logs
              emptyDir:
            - name: pinhead
              secret:
                secretName: pinhead
          sidecars:
            - name: token-refresher
              enabled: true

      - name: system-conduit
        webServices:
          public:
            enabled: true
        minReplicas: 1
        podSpec:
          image: ${CONDUIT_IMAGE}:${IMAGE_TAG}
          command:
            - /bin/bash
            - /usr/local/s2i/run
          initContainers:
            - image: ${IMAGE}:${IMAGE_TAG}
              env:
                - name: SPRING_PROFILES_ACTIVE
                  value: liquibase-only
              inheritEnv: true
              command:
                - /bin/bash
                - /usr/local/s2i/run
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
          env:
            - name: ENABLE_SPLUNK_HEC
              value: ${ENABLE_SPLUNK_HEC}
            - name: SPLUNKMETA_namespace
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: SPLUNKMETA_host
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: SPLUNK_HEC_URL
              value: ${SPLUNK_HEC_URL}
            - name: SPLUNK_HEC_TOKEN
              valueFrom:
                secretKeyRef:
                  name: splunk-hec-external
                  key: token
            - name: SPLUNK_SOURCE
              value: ${SPLUNK_SOURCE}
            - name: SPLUNK_SOURCE_TYPE
              value: ${SPLUNK_SOURCE_TYPE}
            - name: SPLUNK_MESSAGE_FORMAT
              value: ${SPLUNK_MESSAGE_FORMAT}
            - name: SPLUNK_HEC_CONNECT_TIMEOUT
              value: ${SPLUNK_HEC_CONNECT_TIMEOUT}
            - name: SPLUNK_HEC_BATCH_SIZE
              value: ${SPLUNK_HEC_BATCH_SIZE}
            - name: SPLUNK_HEC_TERMINATION_TIMEOUT
              value: ${SPLUNK_HEC_TERMINATION_TIMEOUT}
            - name: SPRING_PROFILES_ACTIVE
              value: kafka-queue
            # turn off built-in jolokia, so that the spring boot jolokia actuator will work
            - name: AB_JOLOKIA_OFF
              value: 'true'
            - name: HAWTIO_BASE_PATH
              value: ${CONDUIT_HAWTIO_BASE_PATH}
            - name: LOG_FILE
              value: /logs/server.log
            - name: JAVA_MAX_MEM_RATIO
              value: '85'
            - name: GC_MAX_METASPACE_SIZE
              value: '256'
            - name: TASK_QUEUE_TYPE
              value: kafka
            - name: RHSM_URL
              value: ${RHSM_URL}
            - name: LOGGING_LEVEL_ROOT
              value: ${LOGGING_LEVEL_ROOT}
            - name: LOGGING_LEVEL_ORG_CANDLEPIN
              value: ${LOGGING_LEVEL}
            - name: KAFKA_TASK_GROUP
              value: platform.rhsm-conduit.tasks
            - name: KAFKA_MESSAGE_THREADS
              value: ${KAFKA_MESSAGE_THREADS}
            - name: KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS
              value: ${KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS}
            - name: KAFKA_SEEK_OVERRIDE_END
              value: ${KAFKA_SEEK_OVERRIDE_END}
            - name: KAFKA_SEEK_OVERRIDE_TIMESTAMP
              value: ${KAFKA_SEEK_OVERRIDE_TIMESTAMP}
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: hostname
            - name: DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: port
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: password
            - name: DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: name
            - name: DATABASE_CONNECTION_TIMEOUT_MS
              value: ${DATABASE_CONNECTION_TIMEOUT_MS}
            - name: DATABASE_MAX_POOL_SIZE
              value: ${DATABASE_MAX_POOL_SIZE}
            - name: RHSM_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tls
                  key: keystore_password
            - name: RHSM_KEYSTORE
              value: /pinhead/keystore.jks
            - name: RHSM_TRUSTSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tls
                  key: keystore_password
            - name: RHSM_TRUSTSTORE
              value: /pinhead/truststore.jks
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: pinhead
              mountPath: /pinhead
          volumes:
            - name: logs
              emptyDir:
            - name: pinhead
              secret:
                secretName: pinhead

      - name: capacity-ingress
        webServices:
          public:
            enabled: true
        minReplicas: 1
        podSpec:
          image: ${IMAGE}:${IMAGE_TAG}
          command:
            - /bin/bash
            - /usr/local/s2i/run
          initContainers:
            - env:
                - name: SPRING_PROFILES_ACTIVE
                  value: liquibase-only
              inheritEnv: true
              command:
                - /bin/bash
                - /usr/local/s2i/run
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
          env:
            - name: ENABLE_SPLUNK_HEC
              value: ${ENABLE_SPLUNK_HEC}
            - name: SPLUNKMETA_namespace
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: SPLUNKMETA_host
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: SPLUNK_HEC_URL
              value: ${SPLUNK_HEC_URL}
            - name: SPLUNK_HEC_TOKEN
              valueFrom:
                secretKeyRef:
                  name: splunk-hec-external
                  key: token
            - name: SPLUNK_SOURCE
              value: ${SPLUNK_SOURCE}
            - name: SPLUNK_SOURCE_TYPE
              value: ${SPLUNK_SOURCE_TYPE}
            - name: SPLUNK_MESSAGE_FORMAT
              value: ${SPLUNK_MESSAGE_FORMAT}
            - name: SPLUNK_HEC_CONNECT_TIMEOUT
              value: ${SPLUNK_HEC_CONNECT_TIMEOUT}
            - name: SPLUNK_HEC_BATCH_SIZE
              value: ${SPLUNK_HEC_BATCH_SIZE}
            - name: SPLUNK_HEC_TERMINATION_TIMEOUT
              value: ${SPLUNK_HEC_TERMINATION_TIMEOUT}
            - name: SPRING_PROFILES_ACTIVE
              value: capacity-ingress
            - name: SUBSCRIPTION_SYNC_ENABLED
              value: ${SUBSCRIPTION_SYNC_ENABLED}
            - name: AB_JOLOKIA_OFF
              value: 'true'
            - name: HAWTIO_BASE_PATH
              value: ${CAPACITY_INGRESS_HAWTIO_BASE_PATH}
            - name: LOG_FILE
              value: /logs/server.log
            - name: JAVA_MAX_MEM_RATIO
              value: '85'
            - name: GC_MAX_METASPACE_SIZE
              value: '256'
            - name: LOGGING_LEVEL_ROOT
              value: ${LOGGING_LEVEL_ROOT}
            - name: LOGGING_LEVEL_ORG_CANDLEPIN
              value: ${LOGGING_LEVEL}
            - name: KAFKA_MESSAGE_THREADS
              value: ${KAFKA_MESSAGE_THREADS}
            - name: KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS
              value: ${KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS}
            - name: KAFKA_SEEK_OVERRIDE_END
              value: ${KAFKA_SEEK_OVERRIDE_END}
            - name: KAFKA_SEEK_OVERRIDE_TIMESTAMP
              value: ${KAFKA_SEEK_OVERRIDE_TIMESTAMP}
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: hostname
            - name: DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: port
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: password
            - name: DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: name
            - name: DATABASE_CONNECTION_TIMEOUT_MS
              value: ${DATABASE_CONNECTION_TIMEOUT_MS}
            - name: DATABASE_MAX_POOL_SIZE
              value: ${DATABASE_MAX_POOL_SIZE}
            - name: INVENTORY_DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: hostname
            - name: INVENTORY_DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: name
            - name: INVENTORY_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: username
            - name: INVENTORY_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: password
            - name: INVENTORY_DATABASE_CONNECTION_TIMEOUT_MS
              value: ${INVENTORY_DATABASE_CONNECTION_TIMEOUT_MS}
            - name: INVENTORY_DATABASE_MAX_POOL_SIZE
              value: ${INVENTORY_DATABASE_MAX_POOL_SIZE}
            - name: PRODUCT_WHITELIST_RESOURCE_LOCATION
              value: file:/capacity-allowlist/product-allowlist.txt
            - name: PRODUCT_KEYSTORE
              value: /pinhead/keystore.jks
            - name: PRODUCT_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tls
                  key: keystore_password
            - name: SUBSCRIPTION_KEYSTORE
              value: /pinhead/keystore.jks
            - name: SUBSCRIPTION_URL
              value: ${SUBSCRIPTION_URL}
            - name: SUBSCRIPTION_IGNORE_EXPIRED_OLDER_THAN
              value: ${SUBSCRIPTION_IGNORE_EXPIRED_OLDER_THAN}
            - name: SUBSCRIPTION_IGNORE_STARTING_LATER_THAN
              value: ${SUBSCRIPTION_IGNORE_STARTING_LATER_THAN}
            - name: PRODUCT_URL
              value: ${PRODUCT_URL}
            - name: SUBSCRIPTION_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tls
                  key: keystore_password
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: capacity-allowlist
              mountPath: /capacity-allowlist
            - name: pinhead
              mountPath: /pinhead
          volumes:
            - name: logs
              emptyDir:
            - name: capacity-allowlist
              configMap:
                name: capacity-allowlist
            - name: pinhead
              secret:
                secretName: pinhead

    jobs:
      - name: metrics-cron
        schedule: ${METERING_SCHEDULE}
        activeDeadlineSeconds: 4200
        successfulJobsHistoryLimit: 2
        restartPolicy: Never
        podSpec:
          image: ${IMAGE}:${IMAGE_TAG}
          command:
            - /bin/bash
            - /usr/local/s2i/run
          initContainers:
            - env:
                - name: SPRING_PROFILES_ACTIVE
                  value: liquibase-only
              inheritEnv: true
              command:
                - /bin/bash
                - /usr/local/s2i/run
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
          env:
            - name: ENABLE_SPLUNK_HEC
              value: ${ENABLE_SPLUNK_HEC}
            - name: SPLUNKMETA_namespace
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: SPLUNKMETA_host
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: SPLUNK_HEC_URL
              value: ${SPLUNK_HEC_URL}
            - name: SPLUNK_HEC_TOKEN
              valueFrom:
                secretKeyRef:
                  name: splunk-hec-external
                  key: token
            - name: SPLUNK_SOURCE
              value: ${SPLUNK_SOURCE}
            - name: SPLUNK_SOURCE_TYPE
              value: ${SPLUNK_SOURCE_TYPE}
            - name: SPLUNK_MESSAGE_FORMAT
              value: ${SPLUNK_MESSAGE_FORMAT}
            - name: SPLUNK_HEC_CONNECT_TIMEOUT
              value: ${SPLUNK_HEC_CONNECT_TIMEOUT}
            - name: SPLUNK_HEC_BATCH_SIZE
              value: ${SPLUNK_HEC_BATCH_SIZE}
            - name: SPLUNK_HEC_TERMINATION_TIMEOUT
              value: ${SPLUNK_HEC_TERMINATION_TIMEOUT}
            - name: SPRING_PROFILES_ACTIVE
              value: metering-job,kafka-queue
            - name: JAVA_MAX_MEM_RATIO
              value: '85'
            - name: GC_MAX_METASPACE_SIZE
              value: '256'
            - name: LOG_FILE
              value: /logs/server.log
            - name: LOGGING_LEVEL_ROOT
              value: ${LOGGING_LEVEL_ROOT}
            - name: LOGGING_LEVEL_ORG_CANDLEPIN
              value: ${LOGGING_LEVEL}
            - name: OPENSHIFT_METERING_RANGE
              value: ${OPENSHIFT_METERING_RANGE}
            - name: HOURLY_TALLY_OFFSET
              value: ${HOURLY_TALLY_OFFSET}
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: hostname
            - name: DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: port
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: password
            - name: DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: name
            - name: INVENTORY_DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: hostname
            - name: INVENTORY_DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: name
            - name: INVENTORY_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: username
            - name: INVENTORY_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: password
            - name: PROM_URL
              value: http://localhost:8082
            # TODO remove once non-standard billing_model lands in OCM
            - name: OPENSHIFT_ENABLED_ACCOUNT_PROMQL
              value: ${OPENSHIFT_ENABLED_ACCOUNT_PROMQL}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          volumeMounts:
            - name: logs
              mountPath: /logs
          volumes:
            - name: logs
              emptyDir:
          sidecars:
            - name: token-refresher
              enabled: true

      - name: cron-tally
        schedule: ${CAPTURE_SNAPSHOT_SCHEDULE}
        activeDeadlineSeconds: 4200
        successfulJobsHistoryLimit: 2
        restartPolicy: Never
        podSpec:
          image: ${IMAGE}:${IMAGE_TAG}
          command:
            - /bin/bash
            - /usr/local/s2i/run
          initContainers:
            - env:
                - name: SPRING_PROFILES_ACTIVE
                  value: liquibase-only
              inheritEnv: true
              command:
                - /bin/bash
                - /usr/local/s2i/run
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
          env:
            - name: ENABLE_SPLUNK_HEC
              value: ${ENABLE_SPLUNK_HEC}
            - name: SPLUNKMETA_namespace
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: SPLUNKMETA_host
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: SPLUNK_HEC_URL
              value: ${SPLUNK_HEC_URL}
            - name: SPLUNK_HEC_TOKEN
              valueFrom:
                secretKeyRef:
                  name: splunk-hec-external
                  key: token
            - name: SPLUNK_SOURCE
              value: ${SPLUNK_SOURCE}
            - name: SPLUNK_SOURCE_TYPE
              value: ${SPLUNK_SOURCE_TYPE}
            - name: SPLUNK_MESSAGE_FORMAT
              value: ${SPLUNK_MESSAGE_FORMAT}
            - name: SPLUNK_HEC_CONNECT_TIMEOUT
              value: ${SPLUNK_HEC_CONNECT_TIMEOUT}
            - name: SPLUNK_HEC_BATCH_SIZE
              value: ${SPLUNK_HEC_BATCH_SIZE}
            - name: SPLUNK_HEC_TERMINATION_TIMEOUT
              value: ${SPLUNK_HEC_TERMINATION_TIMEOUT}
            - name: SPRING_PROFILES_ACTIVE
              value: capture-snapshots,kafka-queue
            - name: JAVA_MAX_MEM_RATIO
              value: '85'
            - name: GC_MAX_METASPACE_SIZE
              value: '256'
            - name: LOG_FILE
              value: /logs/server.log
            - name: LOGGING_LEVEL_ROOT
              value: ${LOGGING_LEVEL_ROOT}
            - name: LOGGING_LEVEL_ORG_CANDLEPIN
              value: ${LOGGING_LEVEL}
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: hostname
            - name: DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: port
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: password
            - name: DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: name
            - name: INVENTORY_DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: hostname
            - name: INVENTORY_DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: name
            - name: INVENTORY_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: username
            - name: INVENTORY_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: password
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          volumeMounts:
            - name: logs
              mountPath: /logs
          volumes:
            - name: logs
              emptyDir:

      - name: hourly-tally
        schedule: ${CAPTURE_HOURLY_SNAPSHOT_SCHEDULE}
        activeDeadlineSeconds: 4200
        successfulJobsHistoryLimit: 2
        restartPolicy: Never
        podSpec:
          image: ${IMAGE}:${IMAGE_TAG}
          command:
            - /bin/bash
            - /usr/local/s2i/run
          initContainers:
            - env:
                - name: SPRING_PROFILES_ACTIVE
                  value: liquibase-only
              inheritEnv: true
              command:
                - /bin/bash
                - /usr/local/s2i/run
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
          env:
            - name: ENABLE_SPLUNK_HEC
              value: ${ENABLE_SPLUNK_HEC}
            - name: SPLUNKMETA_namespace
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: SPLUNKMETA_host
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: SPLUNK_HEC_URL
              value: ${SPLUNK_HEC_URL}
            - name: SPLUNK_HEC_TOKEN
              valueFrom:
                secretKeyRef:
                  name: splunk-hec-external
                  key: token
            - name: SPLUNK_SOURCE
              value: ${SPLUNK_SOURCE}
            - name: SPLUNK_SOURCE_TYPE
              value: ${SPLUNK_SOURCE_TYPE}
            - name: SPLUNK_MESSAGE_FORMAT
              value: ${SPLUNK_MESSAGE_FORMAT}
            - name: SPLUNK_HEC_CONNECT_TIMEOUT
              value: ${SPLUNK_HEC_CONNECT_TIMEOUT}
            - name: SPLUNK_HEC_BATCH_SIZE
              value: ${SPLUNK_HEC_BATCH_SIZE}
            - name: SPLUNK_HEC_TERMINATION_TIMEOUT
              value: ${SPLUNK_HEC_TERMINATION_TIMEOUT}
            - name: SPRING_PROFILES_ACTIVE
              value: capture-hourly-snapshots,kafka-queue
            - name: JAVA_MAX_MEM_RATIO
              value: '85'
            - name: GC_MAX_METASPACE_SIZE
              value: '256'
            - name: LOG_FILE
              value: /logs/server.log
            - name: LOGGING_LEVEL_ROOT
              value: ${LOGGING_LEVEL_ROOT}
            - name: LOGGING_LEVEL_ORG_CANDLEPIN
              value: ${LOGGING_LEVEL}
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: hostname
            - name: DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: port
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: password
            - name: DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: name
            - name: INVENTORY_DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: hostname
            - name: INVENTORY_DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: name
            - name: INVENTORY_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: username
            - name: INVENTORY_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: password
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          volumeMounts:
            - name: logs
              mountPath: /logs
          volumes:
            - name: logs
              emptyDir:

      - name: cron-purge
        schedule: ${PURGE_SNAPSHOT_SCHEDULE}
        activeDeadlineSeconds: 1800
        successfulJobsHistoryLimit: 2
        restartPolicy: Never
        podSpec:
          image: ${IMAGE}:${IMAGE_TAG}
          command:
            - /bin/bash
            - /usr/local/s2i/run
          initContainers:
            - env:
                - name: SPRING_PROFILES_ACTIVE
                  value: liquibase-only
              inheritEnv: true
              command:
                - /bin/bash
                - /usr/local/s2i/run
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
          env:
            - name: ENABLE_SPLUNK_HEC
              value: ${ENABLE_SPLUNK_HEC}
            - name: SPLUNKMETA_namespace
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: SPLUNKMETA_host
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: SPLUNK_HEC_URL
              value: ${SPLUNK_HEC_URL}
            - name: SPLUNK_HEC_TOKEN
              valueFrom:
                secretKeyRef:
                  name: splunk-hec-external
                  key: token
            - name: SPLUNK_SOURCE
              value: ${SPLUNK_SOURCE}
            - name: SPLUNK_SOURCE_TYPE
              value: ${SPLUNK_SOURCE_TYPE}
            - name: SPLUNK_MESSAGE_FORMAT
              value: ${SPLUNK_MESSAGE_FORMAT}
            - name: SPLUNK_HEC_CONNECT_TIMEOUT
              value: ${SPLUNK_HEC_CONNECT_TIMEOUT}
            - name: SPLUNK_HEC_BATCH_SIZE
              value: ${SPLUNK_HEC_BATCH_SIZE}
            - name: SPLUNK_HEC_TERMINATION_TIMEOUT
              value: ${SPLUNK_HEC_TERMINATION_TIMEOUT}
            - name: SPRING_PROFILES_ACTIVE
              value: purge-snapshots,kafka-queue
            - name: JAVA_MAX_MEM_RATIO
              value: '85'
            - name: GC_MAX_METASPACE_SIZE
              value: '256'
            - name: LOG_FILE
              value: /logs/server.log
            - name: LOGGING_LEVEL_ROOT
              value: ${LOGGING_LEVEL_ROOT}
            - name: LOGGING_LEVEL_ORG_CANDLEPIN
              value: ${LOGGING_LEVEL}
            - name: EVENT_RECORD_RETENTION
              value: ${EVENT_RECORD_RETENTION}
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: hostname
            - name: DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: port
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: password
            - name: DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: name
            - name: INVENTORY_DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: hostname
            - name: INVENTORY_DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: name
            - name: INVENTORY_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: username
            - name: INVENTORY_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: password
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          volumeMounts:
            - name: logs
              mountPath: /logs
          volumes:
            - name: logs
              emptyDir:

      - name: subscription-sync
        schedule: ${SUBSCRIPTION_SYNC_SCHEDULE}
        activeDeadlineSeconds: 1800
        successfulJobsHistoryLimit: 2
        restartPolicy: Never
        podSpec:
          image: ${IMAGE}:${IMAGE_TAG}
          command:
            - /bin/bash
            - /usr/local/s2i/run
          initContainers:
            - env:
                - name: SPRING_PROFILES_ACTIVE
                  value: liquibase-only
              inheritEnv: true
              command:
                - /bin/bash
                - /usr/local/s2i/run
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
          env:
            - name: ENABLE_SPLUNK_HEC
              value: ${ENABLE_SPLUNK_HEC}
            - name: SPLUNKMETA_namespace
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: SPLUNKMETA_host
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: SPLUNK_HEC_URL
              value: ${SPLUNK_HEC_URL}
            - name: SPLUNK_HEC_TOKEN
              valueFrom:
                secretKeyRef:
                  name: splunk-hec-external
                  key: token
            - name: SPLUNK_SOURCE
              value: ${SPLUNK_SOURCE}
            - name: SPLUNK_SOURCE_TYPE
              value: ${SPLUNK_SOURCE_TYPE}
            - name: SPLUNK_MESSAGE_FORMAT
              value: ${SPLUNK_MESSAGE_FORMAT}
            - name: SPLUNK_HEC_CONNECT_TIMEOUT
              value: ${SPLUNK_HEC_CONNECT_TIMEOUT}
            - name: SPLUNK_HEC_BATCH_SIZE
              value: ${SPLUNK_HEC_BATCH_SIZE}
            - name: SPLUNK_HEC_TERMINATION_TIMEOUT
              value: ${SPLUNK_HEC_TERMINATION_TIMEOUT}
            - name: SPRING_PROFILES_ACTIVE
              value: subscription-sync,kafka-queue
            - name: JAVA_MAX_MEM_RATIO
              value: '85'
            - name: GC_MAX_METASPACE_SIZE
              value: '256'
            - name: LOG_FILE
              value: /logs/server.log
            - name: LOGGING_LEVEL_ROOT
              value: ${LOGGING_LEVEL_ROOT}
            - name: LOGGING_LEVEL_ORG_CANDLEPIN
              value: ${LOGGING_LEVEL}
            - name: SUBSCRIPTION_SYNC_ENABLED
              value: ${SUBSCRIPTION_SYNC_ENABLED}
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: hostname
            - name: DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: port
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: password
            - name: DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: name
            - name: INVENTORY_DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: hostname
            - name: INVENTORY_DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: name
            - name: INVENTORY_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: username
            - name: INVENTORY_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: password
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          volumeMounts:
            - name: logs
              mountPath: /logs
          volumes:
            - name: logs
              emptyDir:

      - name: offering-sync
        schedule: ${OFFERING_SYNC_SCHEDULE}
        activeDeadlineSeconds: 1800
        successfulJobsHistoryLimit: 2
        restartPolicy: Never
        podSpec:
          image: ${IMAGE}:${IMAGE_TAG}
          command:
            - /bin/bash
            - /usr/local/s2i/run
          initContainers:
            - env:
                - name: SPRING_PROFILES_ACTIVE
                  value: liquibase-only
              inheritEnv: true
              command:
                - /bin/bash
                - /usr/local/s2i/run
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
          env:
            - name: ENABLE_SPLUNK_HEC
              value: ${ENABLE_SPLUNK_HEC}
            - name: SPLUNKMETA_namespace
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: SPLUNKMETA_host
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: SPLUNK_HEC_URL
              value: ${SPLUNK_HEC_URL}
            - name: SPLUNK_HEC_TOKEN
              valueFrom:
                secretKeyRef:
                  name: splunk-hec-external
                  key: token
            - name: SPLUNK_SOURCE
              value: ${SPLUNK_SOURCE}
            - name: SPLUNK_SOURCE_TYPE
              value: ${SPLUNK_SOURCE_TYPE}
            - name: SPLUNK_MESSAGE_FORMAT
              value: ${SPLUNK_MESSAGE_FORMAT}
            - name: SPLUNK_HEC_CONNECT_TIMEOUT
              value: ${SPLUNK_HEC_CONNECT_TIMEOUT}
            - name: SPLUNK_HEC_BATCH_SIZE
              value: ${SPLUNK_HEC_BATCH_SIZE}
            - name: SPLUNK_HEC_TERMINATION_TIMEOUT
              value: ${SPLUNK_HEC_TERMINATION_TIMEOUT}
            - name: SPRING_PROFILES_ACTIVE
              value: offering-sync,kafka-queue
            - name: JAVA_MAX_MEM_RATIO
              value: '85'
            - name: GC_MAX_METASPACE_SIZE
              value: '256'
            - name: LOG_FILE
              value: /logs/server.log
            - name: LOGGING_LEVEL_ROOT
              value: ${LOGGING_LEVEL_ROOT}
            - name: LOGGING_LEVEL_ORG_CANDLEPIN
              value: ${LOGGING_LEVEL}
            - name: PRODUCT_WHITELIST_RESOURCE_LOCATION
              value: file:/capacity-allowlist/product-allowlist.txt
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: hostname
            - name: DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: port
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: password
            - name: DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: rhsm-db
                  key: name
            - name: INVENTORY_DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: hostname
            - name: INVENTORY_DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: name
            - name: INVENTORY_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: username
            - name: INVENTORY_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: host-inventory-db
                  key: password
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: capacity-allowlist
              mountPath: /capacity-allowlist
          volumes:
            - name: logs
              emptyDir:
            - name: capacity-allowlist
              configMap:
                name: capacity-allowlist
