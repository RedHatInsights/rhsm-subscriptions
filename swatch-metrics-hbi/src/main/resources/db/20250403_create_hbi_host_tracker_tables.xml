<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                   https://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">

  <property name="json_type" dbms="h2" value="json"/>
  <property name="json_type" dbms="postgresql" value="jsonb"/>
  <changeSet id="20250403-01" author="lburnett">
    <createTable tableName="hbi_host">
      <column name="id" type="UUID" remarks="Primary key identifier">
        <constraints primaryKey="true" nullable="false"/>
      </column>

      <column name="org_id" type="VARCHAR" remarks="Org ID this host belongs to">
        <constraints nullable="false"/>
      </column>

      <!-- Enforce partial uniqueness with an index -->
      <column name="subscription_manager_id" type="VARCHAR"
        remarks="subscription_manager_id (nullable, partially unique)">
        <constraints nullable="true"/>
      </column>
      <column name="inventory_id" type="VARCHAR" remarks="HBI system's ID for this host">
        <constraints nullable="false"/>
      </column>
      <column name="hbi_message" type="${json_type}"
        remarks="Raw HBI message received">
        <constraints nullable="false"/>
      </column>
      <column name="creation_date" type="TIMESTAMP WITH TIME ZONE"
        remarks="Timestamp when the host was first seen by this swatch service">
        <constraints nullable="false"/>
      </column>
      <column name="last_updated" type="TIMESTAMP WITH TIME ZONE"
        remarks="Timestamp when the host was last seen by this swatch service">
        <constraints nullable="false"/>
      </column>
    </createTable>

    <addUniqueConstraint tableName="hbi_host" columnNames="inventory_id"
      constraintName="uq_inventory_id"/>

    <rollback>
      <dropTable tableName="hbi_host"/>
    </rollback>
  </changeSet>


  <!--
  This partial unique index ensures that subscription_manager_id values are unique
  only when they are NOT NULL. Multiple rows can still have NULL values,
  but any non-null value must be distinct. This is necessary because a standard
  UNIQUE constraint cannot express conditional uniqueness in PostgreSQL.
-->
  <changeSet id="20250403-02" author="lburnett" dbms="postgresql">
    <!-- Partial unique indexes are not supported in H2; skipping -->
    <sql>
      CREATE UNIQUE INDEX idx_uq_subscription_manager_id_not_null
        ON hbi_host (subscription_manager_id) WHERE subscription_manager_id IS NOT NULL;
    </sql>

    <rollback>
      DROP INDEX IF EXISTS idx_uq_subscription_manager_id_not_null;
    </rollback>
  </changeSet>

  <changeSet id="20250403-03" author="lburnett">
    <createTable tableName="hbi_hypervisor_guest_relationship"
      remarks="Represents a dependency relationship between hosts. When a host's subscription_manager_id matches the hypervisor_uuid field of another HBI host.">
      <column name="id" type="UUID" remarks="Primary key for the relationship record">
        <constraints primaryKey="true" nullable="false"/>
      </column>
      <column name="hypervisor_host_id" type="UUID"
        remarks="FK to hbi_host.id; the hypervisor host">
        <constraints nullable="false"/>
      </column>
      <column name="guest_host_id" type="UUID"
        remarks="FK to hbi_host.id; the guest host mapped to this hypervisor">
        <constraints nullable="false"/>
      </column>
    </createTable>

    <addForeignKeyConstraint baseTableName="hbi_hypervisor_guest_relationship"
      baseColumnNames="hypervisor_host_id"
      referencedTableName="hbi_host"
      referencedColumnNames="id"
      constraintName="fk_hypervisor_host_id"/>

    <addForeignKeyConstraint baseTableName="hbi_hypervisor_guest_relationship"
      baseColumnNames="guest_host_id"
      referencedTableName="hbi_host"
      referencedColumnNames="id"
      constraintName="fk_guest_host_id"/>

    <rollback>
      <dropTable tableName="hbi_hypervisor_guest_relationship"/>
    </rollback>
  </changeSet>


</databaseChangeLog>