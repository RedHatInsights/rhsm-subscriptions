openapi: "3.0.2"
info:
  title: "rhsm-subscriptions-api"
  description: "REST interface for the rhsm-subscriptions service. Please note any deprecated APIs. Our current deprecation policy is to keep deprecated APIs around for at least 6 months."
  version: 1.0.0

servers:
  - url: /{PATH_PREFIX}/{APP_NAME}/v1
    variables:
      PATH_PREFIX:
        default: api
      APP_NAME:
        default: rhsm-subscriptions
  - url: https://{HOSTNAME}/{PATH_PREFIX}/{APP_NAME}/v1
    variables:
      HOSTNAME:
        enum:
          - ci.cloud.redhat.com
          - qa.cloud.redhat.com
          - stage.cloud.redhat.com
          - cloud.redhat.com
        default: ci.cloud.redhat.com
      PATH_PREFIX:
        default: api
      APP_NAME:
        default: rhsm-subscriptions

paths:
  /version:
    description: "Provides version and build information about the deployed application."
    get:
      summary: "Request version and build information about the deployed application."
      operationId: getVersion
      tags:
        - version
      responses:
        '200':
          description: 'The request for version information was successful.'
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/VersionInfo"
        '500':
          $ref: '#/components/responses/InternalServerError'
  /opt-in:
    description: "Endpoint for opting into subscription watch."
    get:
      summary: "Get the opt-in configuration for the current account."
      operationId: getOptInConfig
      responses:
        '200':
          description: "The request for the account's opt-in configuration was successful."
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OptInConfig"
              example:
                data:
                  opt_in_complete: true
                  account:
                    account_number: 12345
                    tally_sync_enabled: true
                    tally_reporting_enabled: true
                    opt_in_type: 'API'
                    created: '2017-08-04T17:32:05Z'
                    last_updated: '2017-08-04T17:32:05Z'
                  org:
                    org_id: 1111
                    conduit_sync_enabled: true
                    opt_in_type: 'API'
                    created: '2017-08-04T17:32:05Z'
                    last_updated: '2017-08-04T17:32:05Z'
                meta:
                  account_number: 12345
                  org_id: 1111
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: "Create/Update an account's opt-in configuration. Account and Org ID are defined by the
                identity header. If no parameters are specified, all everything will be enabled."
      operationId: putOptInConfig
      parameters:
        - name: enable_tally_sync
          in: query
          required: false
          schema:
            type: boolean
            default: true
        - name: enable_tally_reporting
          in: query
          required: false
          schema:
            type: boolean
            default: true
        - name: enable_conduit_sync
          in: query
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: "The request for the account's opt-in configuration was successful."
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OptInConfig"
              example:
                data:
                  opt_in_complete: true
                  account:
                    account_number: 12345
                    tally_sync_enabled: true
                    tally_reporting_enabled: true
                    opt_in_type: 'API'
                    created: '2017-08-04T17:32:05Z'
                    last_updated: '2017-08-04T17:32:05Z'
                  org:
                    org_id: 1111
                    conduit_sync_enabled: true
                    opt_in_type: 'API'
                    created: '2017-08-04T17:32:05Z'
                    last_updated: '2017-08-04T17:32:05Z'
                meta:
                  account_number: 12345
                  org_id: 1111
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: "Delete an opt-in config for the associated account/org. The account number and org ID are
                pulled from the identity header."
      operationId: deleteOptInConfig
      responses:
        '204':
          description: "Successfully deleted the opt-in configuration for the accociated account/org"
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /tally/products/{product_id}/{metric_id}:
    description: "Operations on a data set of a given tally report."
    parameters:
      - name: product_id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProductId'
        description: "The product to fetch graph data for"
      - name: metric_id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MetricId'
        description: "The metric ID to fetch graph data for"
      - name: category
        in: query
        schema:
          $ref: '#/components/schemas/ReportCategory'
        description: 'The category to fetch graph data for (optional)'
      - name: granularity
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/GranularityType'
        description: "Include only report data matching the specified granularity."
      - name: sla
        in: query
        schema:
          $ref: '#/components/schemas/ServiceLevelType'
        description: "Include only report data matching the specified service level."
      - name: usage
        in: query
        schema:
          $ref: '#/components/schemas/UsageType'
        description: "Include only report data matching the specified usage."
      - name: beginning
        in: query
        required: true
        schema:
          type: string
          format: date-time
        description: "Defines the start of the report period. Dates should be provided in ISO 8601
          format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z"
      - name: ending
        in: query
        required: true
        schema:
          type: string
          format: date-time
        description: "Defines the end of the report period.  Defaults to the current time. Dates should
            be provided in UTC."
      - name: offset
        in: query
        schema:
          type: integer
        description: "The number of items to skip before starting to collect the result set"
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
        description: "The numbers of items to return"
    get:
      summary: "Fetch tally report data for an account and product. "
      description: "If page header parameters are omitted, any dates missing data will have an entry with null as the value."
      operationId: getTallyReportData
      responses:
        '200':
          description: 'The request for a tally report was successful.'
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TallyReportData"
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - tally

  /tally/products/{product_id}:
    description: "Operations for a tally report of a specific account and product."
    parameters:
      - name: product_id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProductId'
        description: "The ID for the product we wish to query"
      - name: offset
        in: query
        schema:
          type: integer
        description: "The number of items to skip before starting to collect the result set"
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
        description: "The numbers of items to return"
    get:
      deprecated: true
      summary: "(Deprecated for removal after 2022-05-01). Fetch a tally report for an account and product. If page header parameters are omitted,
                then any gaps in the resulting report snapshots are filled with a default fake snapshot."
      description: "Deprecated: use /tally/products/{product_id}/{metric_id} instead"
      operationId: getTallyReport
      parameters:
        - name: granularity
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/GranularityType'
          description: "The level of granularity to return."
        - name: sla
          in: query
          schema:
            $ref: '#/components/schemas/ServiceLevelType'
          description: "Include only snapshots matching the specified service level."
        - name: usage
          in: query
          schema:
            $ref: '#/components/schemas/UsageType'
          description: "Include only snapshots matching the specified usage."
        - name: beginning
          in: query
          required: true
          schema:
            type: string
            format: date-time
          description: "Defines the start of the report period. Dates should be provided in ISO 8601
            format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z"
        - name: ending
          in: query
          required: true
          schema:
            type: string
            format: date-time
          description: "Defines the end of the report period.  Defaults to the current time. Dates should
            be provided in UTC."
        - name: use_running_totals_format
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: 'The request for a tally report was successful.'
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TallyReport"
              example:
                data:
                  - date: '2017-08-04T17:32:05Z'
                    instance_count: 10
                    cores: 40
                    sockets: 20
                    physical_instance_count: 5
                    physical_cores: 20
                    physical_sockets: 4
                    hypervisor_instance_count: 5
                    hypervisor_cores: 20
                    hypervisor_sockets: 4
                  - date: '2017-08-05T17:31:04Z'
                    instance_count: 7
                    cores: 14
                    sockets: 8
                    physical_instance_count: 8
                    physical_cores: 14
                    physical_sockets: 8
                    hypervisor_instance_count: 0
                    hypervisor_cores: 0
                    hypervisor_sockets: 0
                  - date: '2017-08-06T17:32:03Z'
                    instance_count: 24
                    cores: 28
                    sockets: 14
                    physical_instance_count: 0
                    physical_cores: 0
                    physical_sockets: 0
                    hypervisor_instance_count: 20
                    hypervisor_cores: 20
                    hypervisor_sockets: 10
                    cloud_instance_count: 4
                    cloud_cores: 8
                    cloud_sockets: 4
                links:
                  first: '/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=DAILY&sla=Premium&beginning=2017-08-01T17%3A32%3A28Z&ending=2017-08-31T17%3A32%3A28Z&offset=0&limit=5'
                  last: '/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=DAILY&sla=Premium&beginning=2017-08-01T17%3A32%3A28Z&ending=2017-08-31T17%3A32%3A28Z&offset=5&limit=5'
                  previous: null
                  next: '/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=DAILY&sla=Premium&beginning=2017-08-01T17%3A32%3A28Z&ending=2017-08-31T17%3A32%3A28Z&offset=5&limit=5'
                meta:
                  count: 10
                  total_core_hours: 30
                  total_instance_hours: 20
                  product: RHEL
                  granularity: Daily
                  service_level: Premium
                  usage: Production
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - tally
  /capacity/products/{product_id}:
    description: 'Operations for capacity report for a given account and product'
    parameters:
      - name: product_id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProductId'
        description: "The ID for the product we wish to query"
      - name: offset
        in: query
        schema:
          type: integer
        description: "The number of items to skip before starting to collect the result set"
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
        description: "The numbers of items to return"
    get:
      summary: "Fetch a capacity report for an account and product."
      operationId: getCapacityReport
      parameters:
        - name: granularity
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/GranularityType'
          description: "The level of granularity to return."
        - name: sla
          in: query
          schema:
            $ref: '#/components/schemas/ServiceLevelType'
          description: "Include only capacity for the specified service level."
        - name: usage
          in: query
          schema:
            $ref: '#/components/schemas/UsageType'
          description: "Include only capacity for the specified usage level."
        - name: beginning
          in: query
          required: true
          schema:
            type: string
            format: date-time
          description: "Defines the start of the report period. Dates should be provided in ISO 8601
            format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z"
        - name: ending
          in: query
          required: true
          schema:
            type: string
            format: date-time
          description: "Defines the end of the report period.  Defaults to the current time. Dates should
            be provided in UTC."
      responses:
        '200':
          description: 'The request for a capacity report was successful.'
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/CapacityReport"
              example:
                data:
                  - date: '2017-08-04T17:32:05Z'
                    sockets: 0
                    physical_sockets: 0
                    hypervisor_sockets: 0
                    has_infinite_quantity: false
                  - date: '2017-08-05T17:31:04Z'
                    sockets: 0
                    physical_sockets: 0
                    hypervisor_sockets: 0
                    has_infinite_quantity: false
                  - date: '2017-08-06T17:32:03Z'
                    sockets: 10
                    physical_sockets: 5
                    hypervisor_sockets: 5
                    has_infinite_quantity: false
                  - date: '2017-08-07T17:34:02Z'
                    sockets: null
                    physical_sockets: null
                    hypervisor_sockets: null
                    has_infinite_quantity: true
                  - date: '2017-08-08T17:32:01Z'
                    sockets: 10
                    physical_sockets: 5
                    hypervisor_sockets: 5
                    has_infinite_quantity: true
                links:
                  first: '/api/rhsm-subscriptions/v1/capacity/RHEL?granularity=DAILY&sla=Premium&beginning=2017-08-01T17%3A32%3A28Z&ending=2017-08-31T17%3A32%3A28Z&offset=0&limit=5'
                  last: '/api/rhsm-subscriptions/v1/capacity/RHEL?granularity=DAILY&sla=Premium&beginning=2017-08-01T17%3A32%3A28Z&ending=2017-08-31T17%3A32%3A28Z&offset=5&limit=5'
                  previous: null
                  next: '/api/rhsm-subscriptions/v1/capacity/RHEL?granularity=DAILY&sla=Premium&beginning=2017-08-01T17%3A32%3A28Z&ending=2017-08-31T17%3A32%3A28Z&offset=5&limit=5'
                meta:
                  count: 10
                  product: RHEL
                  granularity: Daily
                  service_level: Premium
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - capacity
  /hosts/products/{product_id}:
    description: 'Operations for hosts for a given account and product'
    parameters:
      - name: product_id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProductId'
        description: "The ID for the product we wish to query"
      - name: offset
        in: query
        schema:
          type: integer
        description: "The number of items to skip before starting to collect the result set"
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
          maximum: 100
        description: "The numbers of items to return"
    get:
      summary: "Fetch hosts matching report criteria."
      operationId: getHosts
      parameters:
        - name: sla
          in: query
          schema:
            $ref: '#/components/schemas/ServiceLevelType'
          description: "Include only hosts for the specified service level."
        - name: usage
          in: query
          schema:
            $ref: '#/components/schemas/UsageType'
          description: "Include only hosts for the specified usage level."
        - name: uom
          in: query
          schema:
            $ref: '#/components/schemas/Uom'
          description: "Filter hosts to those that contribute to a specific unit of measure"
        - name: display_name_contains
          description: Include only hosts containing the specified display name. Passing an empty string behaves the same way as passing null
          schema:
            type: string
            #Default to empty string to prevent complex jpql statement later
            default: ''
          in: query
        - name: beginning
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: "Defines the start of the report period. Dates should be provided in ISO 8601
            format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z.
            Only applicable for OpenShift-dedicated-metrics and OpenShift-metrics products"
        - name: ending
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: "Defines the end of the report period. Dates should be provided in ISO 8601
            format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z.
            Only applicable for OpenShift-dedicated-metrics and OpenShift-metrics products"
        - name: sort
          in: query
          schema:
            $ref: "#/components/schemas/HostReportSort"
          description: "What property to sort by (optional)"
        - name: dir
          in: query
          schema:
            $ref: "#/components/schemas/SortDirection"
          description: "Which direction to sort by (default: asc)"
      responses:
        '200':
          description: 'The request for hosts was successful.'
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/HostReport"
              example:
                data:
                  - inventory_id: d6214a0b-b344-4778-831c-d53dcacb2da3
                    display_name: rhv.example.com
                    subscription_manager_id: adafd9d5-5b00-42fa-a6c9-75801d45cc6d
                    cores: 4
                    sockets: 2
                    hardware_type: hypervisor
                    number_of_guests: 4
                    last_seen: 2020-01-01T00:00:00Z
                  - inventory_id: 9358e312-1c9f-42f4-8910-dcef6e970852
                    display_name: db.example.com
                    subscription_manager_id: b101a72f-1859-4489-acb8-d6d31c2578c4
                    cores: 4
                    sockets: 2
                    hardware_type: physical
                    last_seen: 2020-01-01T00:00:00Z
                links:
                  first: '/api/rhsm-subscriptions/v1/hosts/RHEL?sla=Premium&usage=Production&offset=0&limit=5'
                  last: '/api/rhsm-subscriptions/v1/hosts/RHEL?sla=Premium&usage=Production&offset=5&limit=5'
                  previous: null
                  next: '/api/rhsm-subscriptions/v1/hosts/RHEL?sla=Premium&usage=Production&offset=5&limit=5'
                meta:
                  count: 10
                  product: RHEL
                  service_level: Premium
                  usage: Production
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - hosts
  /hosts/{hypervisor_uuid}/guests:
    description: 'Operations for hypervisor-guest mappings.'
    parameters:
      - name: hypervisor_uuid
        in: path
        required: true
        schema:
          type: string
        description: "The subscription-manager ID for the hypervisor we wish to query"
      - name: offset
        in: query
        schema:
          type: integer
        description: "The number of items to skip before starting to collect the result set"
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
          maximum: 100
        description: "The numbers of items to return"
    get:
      summary: "Fetch guests for this hypervisor."
      operationId: getHypervisorGuests
      responses:
        '200':
          description: 'The request for a capacity report was successful.'
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/HypervisorGuestReport"
              example:
                data:
                  - inventory_id: d6214a0b-b344-4778-831c-d53dcacb2da3
                    display_name: guest01.example.com
                    subscription_manager_id: adafd9d5-5b00-42fa-a6c9-75801d45cc6d
                    last_seen: 2020-01-01T00:00:00Z
                  - inventory_id: 9358e312-1c9f-42f4-8910-dcef6e970852
                    display_name: guest02.example.com
                    subscription_manager_id: b101a72f-1859-4489-acb8-d6d31c2578c4
                    last_seen: 2020-01-01T00:00:00Z
                links:
                  first: '/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=0&limit=5'
                  last: '/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5'
                  previous: null
                  next: '/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5'
                meta:
                  count: 10
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - hosts
  /instances/products/{product_id}:
    parameters:
      - name: product_id
        description: The ID for the product we wish to query
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProductId'
      - name: offset
        in: query
        schema:
          type: integer
        description: "The number of items to skip before starting to collect the result set"
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
          maximum: 100
        description: "The numbers of items to return"
    get:
      operationId: getInstancesByProduct
      parameters:
        - name: sla
          in: query
          schema:
            $ref: '#/components/schemas/ServiceLevelType'
          description: "Include only hosts for the specified service level."
        - name: usage
          in: query
          schema:
            $ref: '#/components/schemas/UsageType'
          description: "Include only hosts for the specified usage level."
        - name: display_name_contains
          description: Include only hosts containing the specified display name. Passing an empty string behaves the same way as passing null
          schema:
            type: string
            #Default to empty string to prevent complex jpql statement later
            default: ''
          in: query
        - name: beginning
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: "Defines the start of the report period. Dates should be provided in ISO 8601
                     format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z.
                     Only applicable for OpenShift-dedicated-metrics and OpenShift-metrics products"
        - name: ending
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: "Defines the end of the report period. Dates should be provided in ISO 8601
                     format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z.
                     Only applicable for OpenShift-dedicated-metrics and OpenShift-metrics products"
        - name: sort
          in: query
          schema:
            $ref: "#/components/schemas/InstanceReportSort"
          description: "What property to sort by (optional)"
        - name: dir
          in: query
          schema:
            $ref: "#/components/schemas/SortDirection"
          description: "Which direction to sort by (default: asc)"
      tags:
        - instances
      responses:
        '200':
          description: The request for instances was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceResponse'
  /subscriptions/products/{product_id}:
    description: "Operations for total capacity by SKU for all of the owner's active subscriptions for given Swatch product ID."
    parameters:
      - name: product_id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProductId'
        description: "The ID for the product we wish to query"
      - name: offset
        in: query
        schema:
          type: integer
          minimum: 0
        description: "The number of items to skip before starting to collect the result set"
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
        description: "The numbers of items to return"
    get:
      summary: "Returns the total capacity by SKU for all of the owner's active subscriptions for given Swatch product ID."
      operationId: getSkuCapacityReport
      parameters:
        - name: sla
          in: query
          schema:
            $ref: '#/components/schemas/ServiceLevelType'
          description: "Include only capacity for the specified service level."
        - name: usage
          in: query
          schema:
            $ref: '#/components/schemas/UsageType'
          description: "Include only capacity for the specified usage level."
        - name: beginning
          in: query
          schema:
            type: string
            format: date-time
          description: "Defines the start of the report period. Dates should be provided in ISO 8601
             format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z"
        - name: ending
          in: query
          schema:
            type: string
            format: date-time
          description: "Defines the end of the report period.  Defaults to the current time. Dates should
             be provided in UTC."
        - name: uom
          in: query
          schema:
            $ref: '#/components/schemas/Uom'
          description: "Filter subscriptions to those that contribute to a specific unit of measure"
        - name: sort
          in: query
          schema:
            $ref: "#/components/schemas/SkuCapacityReportSort"
          description: "What property to sort by (optional)"
        - name: dir
          in: query
          schema:
            $ref: "#/components/schemas/SortDirection"
          description: "Which direction to sort by (default: asc)"
      responses:
        '200':
          description: "The request for the account's subscription capacities was successful."
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/SkuCapacityReport"
              example:
                data:
                  - sku: RH00011
                    product_name: "Red Hat Enterprise Linux Server, Premium (Physical and 4 Virtual Nodes)(L3 Only)"
                    service_level: Premium
                    usage: Production
                    subscriptions:
                      - id: "1234567890"
                        number: "1234567891"
                      - id: "1234567892"
                        number: "1234567893"
                      - id: "1234567894"
                        number: "1234567895"
                    next_event_date: "2020-04-01T00:00:00Z"
                    next_event_type: Subscription Begin
                    quantity: 3
                    physical_capacity: 3
                    virtual_capacity: 3
                    total_capacity: 6
                    uom: Sockets
                  - sku: RH00010
                    product_name: "Red Hat Enterprise Linux Server"
                    service_level: Self-Support
                    usage: Production
                    subscriptions:
                      - id: "1234567896"
                        number: "1234567897"
                      - id: "1234567898"
                        number: "1234567899"
                      - id: "1234567900"
                        number: "1234567901"
                    next_event_date: "2020-04-02T00:00:00Z"
                    next_event_type: Subscription Begin
                    quantity: 3
                    physical_capacity: 3
                    virtual_capacity": 3
                    total_capacity": 6
                    uom: Sockets
                  - sku: RH00009
                    product_name: "Red Hat Enterprise Linux Server, Premium"
                    service_level: Premium
                    usage: Production
                    subscriptions:
                      - id: "1234567902"
                        number: "1234567903"
                      - id: "1234567904"
                        number: "1234567905"
                      - id: "1234567906"
                        number: "1234567907"
                    next_event_date: "2020-04-01T00:00:00Z"
                    next_event_type: Subscription End
                    quantity: 3
                    physical_capacity: 6
                    virtual_capacity: 6
                    total_capacity: 12
                    uom: Cores
                meta:
                  count: 3
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - subscriptions
  /openapi.json:
    get:
      description: "Get the OpenAPI spec in JSON format."
      operationId: getOpenApiJson
      tags:
        - root
      responses:
        '200':
          description: "The request to get the OpenAPI JSON was successful."
          content:
            application/json:
              schema:
                type: string
  /openapi.yaml:
    get:
      description: "Get the OpenAPI spec in YAML format."
      operationId: getOpenApiYaml
      tags:
        - root
      responses:
        '200':
          description: "The request to get the OpenAPI YAML was successful."
          content:
            application/x-yaml:
              schema:
                type: string

components:
  securitySchemes:
    3ScaleIdentity:
      type: apiKey
      in: header
      name: x-rh-identity
      description: |
        Base64-encoded JSON identity header provided by 3Scale. Contains an
        account number of the user issuing the request. Format of the JSON:
        ```
        {
            "identity": {
                "account_number": "account123",
                "type": "User",
                "user" : {
                    "is_org_admin": true
                },
                "internal" : {
                    "org_id": "org123"
                }
            }
        }
        ```
        Encoded (via `base64 -w0`):
        `eyJpZGVudGl0eSI6eyJhY2NvdW50X251bWJlciI6ImFjY291bnQxMjMiLCJ0eXBlIjoiVXNlciIsInVzZXIiOnsiaXNfb3JnX2FkbWluIjp0cnVlfSwiaW50ZXJuYWwiOnsib3JnX2lkIjoib3JnMTIzIn19fQo=`
  responses:
    InternalServerError:
      description: "An internal server error has occurred and is not recoverable."
      content:
        application/vnd.api+json:
          schema:
            $ref: "#/components/schemas/Errors"
    BadRequest:
      description: "The server could could not process the current request."
      content:
        application/vnd.api+json:
          schema:
            $ref: "#/components/schemas/Errors"
    Forbidden:
      description: "The request was valid, but the request was refused by the server."
      content:
        application/vnd.api+json:
          schema:
            $ref: "#/components/schemas/Errors"
    ResourceNotFound:
      description: "The requested resource was not found."
      content:
        application/vnd.api+json:
          schema:
            $ref: "#/components/schemas/Errors"
    ServiceUnavailable:
      description: "The server is currently unavailable."
      content:
        application/vnd.api+json:
          schema:
            $ref: "#/components/schemas/Errors"
  schemas:
    # Schemas ending in "Type" are intentionally named to prevent naming conflicts with db model classes
    GranularityType:
      type: string
      enum: [ Hourly, Daily, Weekly, Monthly, Quarterly, Yearly ]
    ServiceLevelType:
      type: string
      enum: [ "", Premium, Standard, Self-Support, _ANY ]
    UsageType:
      type: string
      enum: [ "", Production, Development/Test, Disaster Recovery, _ANY ]
    ProductId:
      type: string
      enum:
        - OpenShift Container Platform
        - RHEL
        - RHEL Compute Node
        - RHEL Desktop
        - RHEL for ARM
        - RHEL for IBM Power
        - RHEL for IBM z
        - RHEL for x86
        - RHEL Server
        - RHEL Workstation
        - Satellite
        - Satellite Capsule
        - Satellite Server
        - OpenShift-metrics
        - OpenShift-dedicated-metrics
        - rhosak
    MetricId:
      type: string
      enum:
        - Cores
        - Sockets
        - Core-seconds
        - Instance-hours
        - Storage-gibibytes
        - Transfer-gibibytes
    ReportCategory:
      type: string
      enum:
        - physical
        - virtual
        - cloud
    Uom:
      type: string
      enum:
        - cores
        - sockets
    SortDirection:
      type: string
      enum:
        - asc
        - desc
    VersionInfo:
      properties:
        build:
          type: object
          properties:
            version:
              type: string
            gitDescription:
              type: string
            artifact:
              type: string
            name:
              type: string
            group:
              type: string
            gitHash:
              type: string
    OptInConfig:
      required:
        - meta
        - data
      properties:
        meta:
          type: object
          required:
            - account_number
            - org_id
          properties:
            account_number:
              type: string
            org_id:
              type: string
        data:
          type: object
          required:
            - opt_in_complete
          properties:
            opt_in_complete:
              type: boolean
            account:
              type: object
              required:
                - account_number
                - tally_sync_enabled
                - tally_reporting_enabled
                - opt_in_type
                - created
                - last_updated
              properties:
                account_number:
                  type: string
                tally_sync_enabled:
                  type: boolean
                tally_reporting_enabled:
                  type: boolean
                opt_in_type:
                  type: string
                created:
                  type: string
                  format: date-time
                last_updated:
                  type: string
                  format: date-time
            org:
              type: object
              required:
                - org_id
                - conduit_sync_enabled
                - opt_in_type
                - created
                - last_updated
              properties:
                org_id:
                  type: string
                conduit_sync_enabled:
                  type: boolean
                opt_in_type:
                  type: string
                created:
                  type: string
                  format: date-time
                last_updated:
                  type: string
                  format: date-time
    # If we need additional responses, look at
    # https://swagger.io/docs/specification/data-models/inheritance-and-polymorphism/ to reduce
    # redundancy
    PageLinks:
      properties:
        first:
          type: string
        last:
          type: string
        previous:
          type: string
        next:
          type: string
      required:
        - first
        - last
    TallyReportData:
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/TallyReportDataPoint"
        links:
          $ref: "#/components/schemas/PageLinks"
        meta:
          type: object
          properties:
            count:
              type: integer
            total_monthly:
              $ref: "#/components/schemas/TallyReportDataPoint"
            has_cloudigrade_data:
              type: boolean
            has_cloudigrade_mismatch:
              type: boolean
            product:
              $ref: '#/components/schemas/ProductId'
            metric_id:
              type: string
            service_level:
              $ref: '#/components/schemas/ServiceLevelType'
            usage:
              $ref: '#/components/schemas/UsageType'
            granularity:
              $ref: '#/components/schemas/GranularityType'
          required:
            - count
            - product
            - metric_id
            - granularity
    TallyReportDataPoint:
      description: "Data point for a given tally report."
      required:
        - date
        - value
      properties:
        date:
          description: "The date for this datapoint."
          type: string
          format: date-time
        value:
          type: number
          format: double
        has_data:
          type: boolean
    TallyReport:
      deprecated: true
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/TallySnapshot"
        links:
          $ref: "#/components/schemas/PageLinks"
        meta:
          type: object
          properties:
            count:
              type: integer
            total_core_hours:
              type: number
              format: double
            total_instance_hours:
              type: number
              format: double
            product:
              $ref: '#/components/schemas/ProductId'
            service_level:
              $ref: '#/components/schemas/ServiceLevelType'
              description: "Describes the service level that the report was made against. Not set if it wasn't
                specified as a query parameter."
            usage:
              $ref: '#/components/schemas/UsageType'
              description: "Describes the usage that the report was made against. Not set if it wasn't
                            specified as a query parameter."
            granularity:
              $ref: '#/components/schemas/GranularityType'
              description: "Describes the significance of each date in the TallySnapshot list. For example if the
                              granularity is set to 'weekly', the dates in the TallySnapshot list will represent the start of a
                              seven day period."
          required:
            - count
            - product
            - granularity
    TallySnapshot:
      deprecated: true
      required:
        - date
        - instance_count
      properties:
        date:
          description: "The start date for this snapshot entry. Dates are returned in UTC. Clients must
            consult the 'granularity' field in the TallyReport to determine the length of time each
            TallySnapshot covers."
          type: string
          format: date-time
        instance_count:
          description: "Total systems matching the report criteria on the date of this snapshot."
          type: integer
          format: int32
          minimum: 0
          default: 0
        cores:
          type: integer
          format: int32
          minimum: 0
          default: 0
        core_hours:
          type: number
          format: double
          minimum: 0
          default: 0
        instance_hours:
          type: number
          format: double
          minimum: 0
          default: 0
        sockets:
          description: "Total number of sockets calculated from systems matching the report criteria on the date of this snapshot."
          type: integer
          format: int32
          minimum: 0
          default: 0
        physical_instance_count:
          description: "Total number of physical systems matching the report criteria on the date of this snapshot."
          type: integer
          format: int32
          minimum: 0
          default: 0
        physical_cores:
          description: "Total number of cores calculated from physical systems matching the report criteria on the date of this snapshot."
          type: integer
          format: int32
          minimum: 0
          default: 0
        physical_sockets:
          description: "Total number of sockets calculated from physical systems matching the report criteria on the date of this snapshot."
          type: integer
          format: int32
          minimum: 0
          default: 0
        hypervisor_instance_count:
          description: "Total number of hypervisors matching the report criteria on the date of this snapshot."
          type: integer
          format: int32
          minimum: 0
          default: 0
        hypervisor_cores:
          description: "Total number of cores calculated from hypervisors matching the report criteria on the date of this snapshot."
          type: integer
          format: int32
          minimum: 0
          default: 0
        hypervisor_sockets:
          description: "Total number of sockets calculated from hypervisors matching the report criteria on the date of this snapshot."
          type: integer
          format: int32
          minimum: 0
          default: 0
        cloud_instance_count:
          description: "Total number of hosts running on a public cloud provider, matching the report criteria on the date of this snapshot."
          type: integer
          format: int32
          minimum: 0
          default: 0
        cloud_cores:
          description: "Total number of cores calculated from hosts running on a public cloud provider, matching the report criteria on the date of this snapshot."
          type: integer
          format: int32
          minimum: 0
          default: 0
        cloud_sockets:
          description: "Total number of sockets calculated from hosts running on a public cloud provider, matching the report criteria on the date of this snapshot."
          type: integer
          format: int32
          minimum: 0
          default: 0
        has_data:
          type: boolean
        has_cloudigrade_data:
          description: "Indicates whether this tally report was enriched with data from Cloudigrade."
          type: boolean
          default: false
        has_cloudigrade_mismatch:
          description: "Indicates whether this tally report appears to have a mismatch in reporting
            between Cloudigrade and other data sources. This may or may not indicate an issue with data
            data sources."
          type: boolean
          default: false
    CapacityReport:
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/CapacitySnapshot"
        links:
          $ref: "#/components/schemas/PageLinks"
        meta:
          type: object
          properties:
            count:
              type: integer
            product:
              $ref: '#/components/schemas/ProductId'
            granularity:
              $ref: '#/components/schemas/GranularityType'
              description: "Describes the significance of each date in the CapacitySnapshot list. For example if the
                granularity is set to 'weekly', the dates in the CapacitySnapshot list will represent the start of a
                seven day period."
            service_level:
              $ref: '#/components/schemas/ServiceLevelType'
              description: "Describes the service level that the report was made against. Not set if it wasn't
                specified as a query parameter."
            usage:
              $ref: '#/components/schemas/UsageType'
              description: "Describes the usages that the report was made against. Not set if it wasn't
               specified as a query parameter."
          required:
            - count
            - product
            - granularity
    CapacitySnapshot:
      required:
        - date
        - has_infinite_quantity
      properties:
        date:
          type: string
          format: date-time
          description: "The start date for this snapshot entry. Dates are returned in UTC. Clients must
            consult the 'granularity' field in the CapacityReport to determine the length of time each
            CapacitySnapshot covers."
        sockets:
          description: "Total socket capacity."
          type: integer
          format: int32
          minimum: 0
        physical_sockets:
          description: "Physical socket capacity."
          type: integer
          format: int32
          minimum: 0
        hypervisor_sockets:
          description: "Hypervisor socket capacity."
          type: integer
          format: int32
          minimum: 0
        cores:
          description: "Total cores capacity."
          type: integer
          format: int32
          minimum: 0
        physical_cores:
          description: "Total physical cores capacity."
          type: integer
          format: int32
          minimum: 0
        hypervisor_cores:
          description: "Total hypervisor cores capacity."
          type: integer
          format: int32
          minimum: 0
        has_infinite_quantity:
          description: "Indicates whether this snapshot has an infinite quantity subscription included.
            If there is an infinite quantity subscription involved, there is no meaningful number for
            capacity."
          type: boolean
    HostReportSort:
      type: string
      enum:
        - display_name
        - hardware_type
        - cores
        - sockets
        - last_seen
        - measurement_type
        - core_hours
        - instance_hours
    HostReport:
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Host"
        links:
          $ref: "#/components/schemas/PageLinks"
        meta:
          type: object
          properties:
            count:
              type: integer
            product:
              $ref: '#/components/schemas/ProductId'
            service_level:
              $ref: '#/components/schemas/ServiceLevelType'
              description: "Describes the service level that the report was made against. Not set if it wasn't
                    specified as a query parameter."
              type: string
            usage:
              $ref: '#/components/schemas/UsageType'
              description: "Describes the usages that the report was made against. Not set if it wasn't
                   specified as a query parameter."
            uom:
              $ref: '#/components/schemas/Uom'
          required:
            - count
            - product
    HypervisorGuestReport:
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Host"
        links:
          $ref: "#/components/schemas/PageLinks"
        meta:
          type: object
          properties:
            count:
              type: integer
          required:
            - count
    Host:
      required:
        - display_name
        - hardware_type
        - last_seen
      properties:
        inventory_id:
          description: The HBI identifier for this host.
          type: string
        insights_id:
          description: The insights identifier for this host, used as ID on cloud.redhat.com.
          type: string
        display_name:
          description: The display name for this host on cloud.redhat.com.
          type: string
        subscription_manager_id:
          description: The subscription-manager ID for this host, from `subscription-manager identity`.
          type: string
        sockets:
          description: Number of effective sockets counted for this host by Subscription Watch.
          type: integer
          format: int32
          minimum: 0
        cores:
          description: Number of effective cores counted for this host by Subscription Watch.
          type: integer
          format: int32
          minimum: 0
        core_hours:
          type: number
          format: double
        instance_hours:
          type: number
          format: double
        hardware_type:
          description: What the type of the host is (e.g. hypervisor, physical, etc.).
          type: string
        measurement_type:
          description: What was the applied measurement type (e.g. hypervisor, physical, aws, etc ).
          type: string
        number_of_guests:
          description: Number of guests if this host is a hypervisor.
          type: integer
          format: int32
        last_seen:
          description: Latest timestamp that Subscription Watch has for this host.
          type: string
          format: date-time
        is_unmapped_guest:
          description: Is this host an unmapped guest (not reported by virt-who)?
          type: boolean
        is_hypervisor:
          description: Is this host a hypervisor?
          type: boolean
        cloud_provider:
          description: If applicable, the cloud provider for this host.
          type: string
    InstanceMeta:
      title: Root Type for InstanceMeta
      description: The details of the entire list of InstanceData
      type: object
      properties:
        count:
          format: int32
          type: integer
        product:
          $ref: '#/components/schemas/ProductId'
        service_level:
          $ref: '#/components/schemas/ServiceLevelType'
        usage:
          $ref: '#/components/schemas/UsageType'
        measurements:
          type: array
          items:
            type: string
      example:
        count: 10
        product: RHEL
        service_level: Premium
        usage: Production
        measurements:
          - Instance-Hours
          - Storage-Gibibytes
          - Transfer-Gibibytes
    InstanceResponse:
      title: Root Type for InstanceResponse
      description: The output data of a product instance metrics
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/InstanceData'
        links:
          $ref: '#/components/schemas/PageLinks'
        meta:
          $ref: '#/components/schemas/InstanceMeta'
          properties:
            count:
              format: int32
              type: integer
      example:
        data:
          - inventory_id: d6214a0b-b344-4778-831c-d53dcacb2da3
            display_name: guest01.example.com
            subscription_manager_id: adafd9d5-5b00-42fa-a6c9-75801d45cc6d
            last_seen: '2020-01-01T00:00:00Z'
          - inventory_id: 9358e312-1c9f-42f4-8910-dcef6e970852
            display_name: guest02.example.com
            subscription_manager_id: b101a72f-1859-4489-acb8-d6d31c2578c4
            last_seen: '2020-01-01T00:00:00Z'
        links:
          first: string
          last: string
          next: string
        meta:
          count: 10
    InstanceReportSort:
      type: string
      enum:
        - display_name
        - last_seen
        - Cores
        - Sockets
        - Core-seconds
        - Instance-hours
        - Storage-gibibytes
        - Transfer-gibibytes
    InstanceData:
      title: Root Type for Instance
      description: The representation of a product cluster data
      type: object
      properties:
        id:
          type: string
        display_name:
          type: string
        measurements:
          description: >-
            Must be in the same order as "measurements" in the meta. (i.e. in the example
            instance.measurements[0] is the instance-hours, measurements[1] is storage-gibibytes,
            and measurements[2] is the transfer-gibibytes.
          type: array
          items:
            format: double
            type: number
        last_seen:
          format: date-time
          type: string
      example:
        id: d6214a0b-b344-4778-831c-d53dcacb2da3
        display_name: rhv.example.com
        measurements:
          - 42
          - null
          - 1
        last_seen: '2020-01-01T00:00:00Z'
    CandlepinPool:
      description: Subset of Candlepin pool data that rhsm-subscriptions understands.
      properties:
        accountNumber:
          type: string
        activeSubscription:
          type: boolean
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        quantity:
          type: integer
          format: int64
        productId:
          type: string
        productAttributes:
          type: array
          items:
            $ref: "#/components/schemas/CandlepinProductAttribute"
        providedProducts:
          type: array
          items:
            $ref: "#/components/schemas/CandlepinProvidedProduct"
        derivedProvidedProducts:
          type: array
          items:
            $ref: "#/components/schemas/CandlepinProvidedProduct"
        subscriptionId:
          type: string
        type:
          type: string
    CandlepinProductAttribute:
      properties:
        name:
          type: string
        value:
          type: string
    CandlepinProvidedProduct:
      properties:
        productId:
          type: string
    Errors:
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: "#/components/schemas/Error"
    Error:
      required:
        - status
        - code
        - title
      properties:
        status:
          type: string
        code:
          type: string
        title:
          type: string
        detail:
          type: string

    SubscriptionType:
      type: string
      enum:
        - On-demand
        - Annual

    SubscriptionEventType:
      type: string
      enum:
        - Subscription Start
        - Subscription End

    SkuCapacitySubscription:
      properties:
        id:
          type: string
        number:
          type: string

    SkuCapacity:
      properties:
        sku:
          description: "The identifier for the offering."
          type: string
        product_name:
          description: "The offering name."
          type: string
        service_level:
          $ref: "#/components/schemas/ServiceLevelType"
        usage:
          $ref: "#/components/schemas/UsageType"
        subscriptions:
          description: "List of active subscriptions that contribute to the quantity and capacity totals."
          type: array
          items:
            $ref: "#/components/schemas/SkuCapacitySubscription"
        next_event_date:
          description: "The most immediate date for a subscription event."
          type: string
          format: date-time
        next_event_type:
          description: "The most immediate subscription event, such as a subscription beginning or ending."
          $ref: "#/components/schemas/SubscriptionEventType"
        quantity:
          description: "The summed subscription quantities across the active subscriptions for the offering."
          type: integer
          format: int32
        physical_capacity:
          description: "The summed physical capacity of the unit-of-measure of the active subscriptions for the offering."
          type: integer
          format: int32
        virtual_capacity:
          description: "The summed virutal capacity of the unit-of-measure of the active subscriptions for the offering."
          type: integer
          format: int32
        total_capacity:
          description: "The combined (physical and virtual) capacity for the offering."
          type: integer
          format: int32
        has_infinite_quantity:
          description: "Denotes unlimited capacity for the offering when true."
          type: boolean
        uom:
          description: "The unit-of-measure for the capacity."
          $ref: "#/components/schemas/Uom"

    SkuCapacityReportSort:
      type: string
      enum:
        - sku
        - service_level
        - usage
        - next_event_date
        - next_event_type
        - quantity
        - total_capacity
        - product_name

    SkuCapacityReport:
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SkuCapacity'
        links:
          $ref: "#/components/schemas/PageLinks"
        meta:
          type: object
          properties:
            count:
              type: integer
            product:
              $ref: '#/components/schemas/ProductId'
            service_level:
              $ref: '#/components/schemas/ServiceLevelType'
              description: "The service level that the report was made against. Not set if it wasn't specified as a query parameter."
              type: string
            usage:
              $ref: '#/components/schemas/UsageType'
              description: "The usage that the report was made against. Not set if it wasn't specified as a query parameter."
            uom:
              $ref: '#/components/schemas/Uom'
            subscription_type:
              $ref: '#/components/schemas/SubscriptionType'
          required:
            - count
            - product
            - subscription_type

security:
  - 3ScaleIdentity: []
