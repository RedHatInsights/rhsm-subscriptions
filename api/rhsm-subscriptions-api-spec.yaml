openapi: "3.0.2"
info:
  title: "rhsm-subscriptions-api"
  description: "REST interface for the rhsm-subscriptions service."
  version: 1.0.0

servers:
  - url: /{PATH_PREFIX}/{APP_NAME}/v1
    variables:
      PATH_PREFIX:
        default: api
      APP_NAME:
        default: rhsm-subscriptions
  - url: https://{HOSTNAME}/{PATH_PREFIX}/{APP_NAME}/v1
    variables:
      HOSTNAME:
        enum:
          - ci.cloud.redhat.com
          - qa.cloud.redhat.com
          - stage.cloud.redhat.com
          - cloud.redhat.com
        default: ci.cloud.redhat.com
      PATH_PREFIX:
        default: api
      APP_NAME:
        default: rhsm-subscriptions

paths:
  /version:
    description: "Provides version and build information about the deployed application."
    get:
      summary: "Request version and build information about the deployed application."
      operationId: getVersion
      tags:
        - version
      responses:
        '200':
          description: 'The request for version information was successful.'
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/VersionInfo"
        '500':
          $ref: '#/components/responses/InternalServerError'
  /opt-in:
    description: "Endpoint for opting into subscription watch."
    get:
      summary: "Get the opt-in configuration for the current account."
      operationId: getOptInConfig
      responses:
        '200':
          description: "The request for the account's opt-in configuration was successful."
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OptInConfig"
              example:
                data:
                  opt_in_complete: true
                  account:
                    account_number: 12345
                    tally_sync_enabled: true
                    tally_reporting_enabled: true
                    opt_in_type: 'API'
                    created: '2017-08-04T17:32:05Z'
                    last_updated: '2017-08-04T17:32:05Z'
                  org:
                    org_id: 1111
                    conduit_sync_enabled: true
                    opt_in_type: 'API'
                    created: '2017-08-04T17:32:05Z'
                    last_updated: '2017-08-04T17:32:05Z'
                meta:
                  account_number: 12345
                  org_id: 1111
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: "Create/Update an account's opt-in configuration. Account and Org ID are defined by the
                identity header. If no parameters are specified, all everything will be enabled."
      operationId: putOptInConfig
      parameters:
        - name: enable_tally_sync
          in: query
          required: false
          schema:
            type: boolean
            default: true
        - name: enable_tally_reporting
          in: query
          required: false
          schema:
            type: boolean
            default: true
        - name: enable_conduit_sync
          in: query
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: "The request for the account's opt-in configuration was successful."
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OptInConfig"
              example:
                data:
                  opt_in_complete: true
                  account:
                    account_number: 12345
                    tally_sync_enabled: true
                    tally_reporting_enabled: true
                    opt_in_type: 'API'
                    created: '2017-08-04T17:32:05Z'
                    last_updated: '2017-08-04T17:32:05Z'
                  org:
                    org_id: 1111
                    conduit_sync_enabled: true
                    opt_in_type: 'API'
                    created: '2017-08-04T17:32:05Z'
                    last_updated: '2017-08-04T17:32:05Z'
                meta:
                  account_number: 12345
                  org_id: 1111
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: "Delete an opt-in config for the associated account/org. The account number and org ID are
                pulled from the identity header."
      operationId: deleteOptInConfig
      responses:
        '204':
          description: "Successfully deleted the opt-in configuration for the accociated account/org"
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /tally/products/{product_id}:
    description: "Operations for a tally report of a specific account and product."
    parameters:
      - name: product_id
        in: path
        required: true
        schema:
          type: string
        description: "The ID for the product we wish to query"
      - name: offset
        in: query
        schema:
          type: integer
        description: "The number of items to skip before starting to collect the result set"
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
        description: "The numbers of items to return"
    get:
      summary: "Fetch a tally report for an account and product. If page header parameters are omitted,
                then any gaps in the resulting report snapshots are filled with a default fake snapshot."
      operationId: getTallyReport
      parameters:
        - name: granularity
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/GranularityGenerated'
          description: "The level of granularity to return."
        - name: sla
          in: query
          schema:
            $ref: '#/components/schemas/ServiceLevelGenerated'
          description: "Include only snapshots matching the specified service level."
        - name: usage
          in: query
          schema:
            $ref: '#/components/schemas/UsageGenerated'
          description: "Include only snapshots matching the specified usage."
        - name: beginning
          in: query
          required: true
          schema:
            type: string
            format: date-time
          description: "Defines the start of the report period. Dates should be provided in ISO 8601
            format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z"
        - name: ending
          in: query
          required: true
          schema:
            type: string
            format: date-time
          description: "Defines the end of the report period.  Defaults to the current time. Dates should
            be provided in UTC."
      responses:
        '200':
          description: 'The request for a tally report was successful.'
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TallyReport"
              example:
                data:
                  - date: '2017-08-04T17:32:05Z'
                    instance_count: 10
                    cores: 40
                    sockets: 20
                    physical_instance_count: 5
                    physical_cores: 20
                    physical_sockets: 4
                    hypervisor_instance_count: 5
                    hypervisor_cores: 20
                    hypervisor_sockets: 4
                  - date: '2017-08-05T17:31:04Z'
                    instance_count: 7
                    cores: 14
                    sockets: 8
                    physical_instance_count: 8
                    physical_cores: 14
                    physical_sockets: 8
                    hypervisor_instance_count: 0
                    hypervisor_cores: 0
                    hypervisor_sockets: 0
                  - date: '2017-08-06T17:32:03Z'
                    instance_count: 24
                    cores: 28
                    sockets: 14
                    physical_instance_count: 0
                    physical_cores: 0
                    physical_sockets: 0
                    hypervisor_instance_count: 20
                    hypervisor_cores: 20
                    hypervisor_sockets: 10
                    cloud_instance_count: 4
                    cloud_cores: 8
                    cloud_sockets: 4
                links:
                  first: '/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=DAILY&sla=Premium&beginning=2017-08-01T17%3A32%3A28Z&ending=2017-08-31T17%3A32%3A28Z&offset=0&limit=5'
                  last: '/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=DAILY&sla=Premium&beginning=2017-08-01T17%3A32%3A28Z&ending=2017-08-31T17%3A32%3A28Z&offset=5&limit=5'
                  previous: null
                  next: '/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=DAILY&sla=Premium&beginning=2017-08-01T17%3A32%3A28Z&ending=2017-08-31T17%3A32%3A28Z&offset=5&limit=5'
                meta:
                  count: 10
                  product: RHEL
                  granularity: Daily
                  service_level: Premium
                  usage: Production
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - tally
  /capacity/products/{product_id}:
    description: 'Operations for capacity report for a given account and product'
    parameters:
      - name: product_id
        in: path
        required: true
        schema:
          type: string
        description: "The ID for the product we wish to query"
      - name: offset
        in: query
        schema:
          type: integer
        description: "The number of items to skip before starting to collect the result set"
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
        description: "The numbers of items to return"
    get:
      summary: "Fetch a capacity report for an account and product."
      operationId: getCapacityReport
      parameters:
        - name: granularity
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/GranularityGenerated'
          description: "The level of granularity to return."
        - name: sla
          in: query
          schema:
            $ref: '#/components/schemas/ServiceLevelGenerated'
          description: "Include only capacity for the specified service level."
        - name: usage
          in: query
          schema:
            $ref: '#/components/schemas/UsageGenerated'
          description: "Include only capacity for the specified usage level."
        - name: beginning
          in: query
          required: true
          schema:
            type: string
            format: date-time
          description: "Defines the start of the report period. Dates should be provided in ISO 8601
            format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z"
        - name: ending
          in: query
          required: true
          schema:
            type: string
            format: date-time
          description: "Defines the end of the report period.  Defaults to the current time. Dates should
            be provided in UTC."
      responses:
        '200':
          description: 'The request for a capacity report was successful.'
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/CapacityReport"
              example:
                data:
                  - date: '2017-08-04T17:32:05Z'
                    sockets: 0
                    physical_sockets: 0
                    hypervisor_sockets: 0
                    has_infinite_quantity: false
                  - date: '2017-08-05T17:31:04Z'
                    sockets: 0
                    physical_sockets: 0
                    hypervisor_sockets: 0
                    has_infinite_quantity: false
                  - date: '2017-08-06T17:32:03Z'
                    sockets: 10
                    physical_sockets: 5
                    hypervisor_sockets: 5
                    has_infinite_quantity: false
                  - date: '2017-08-07T17:34:02Z'
                    sockets: null
                    physical_sockets: null
                    hypervisor_sockets: null
                    has_infinite_quantity: true
                  - date: '2017-08-08T17:32:01Z'
                    sockets: 10
                    physical_sockets: 5
                    hypervisor_sockets: 5
                    has_infinite_quantity: true
                links:
                  first: '/api/rhsm-subscriptions/v1/capacity/RHEL?granularity=DAILY&sla=Premium&beginning=2017-08-01T17%3A32%3A28Z&ending=2017-08-31T17%3A32%3A28Z&offset=0&limit=5'
                  last: '/api/rhsm-subscriptions/v1/capacity/RHEL?granularity=DAILY&sla=Premium&beginning=2017-08-01T17%3A32%3A28Z&ending=2017-08-31T17%3A32%3A28Z&offset=5&limit=5'
                  previous: null
                  next: '/api/rhsm-subscriptions/v1/capacity/RHEL?granularity=DAILY&sla=Premium&beginning=2017-08-01T17%3A32%3A28Z&ending=2017-08-31T17%3A32%3A28Z&offset=5&limit=5'
                meta:
                  count: 10
                  product: RHEL
                  granularity: Daily
                  service_level: Premium
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - capacity
  /hosts/products/{product_id}:
    description: 'Operations for hosts for a given account and product'
    parameters:
      - name: product_id
        in: path
        required: true
        schema:
          type: string
        description: "The ID for the product we wish to query"
      - name: offset
        in: query
        schema:
          type: integer
        description: "The number of items to skip before starting to collect the result set"
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
          maximum: 100
        description: "The numbers of items to return"
    get:
      summary: "Fetch hosts matching report criteria."
      operationId: getHosts
      parameters:
        - name: sla
          in: query
          schema:
            $ref: '#/components/schemas/ServiceLevelGenerated'
          description: "Include only hosts for the specified service level."
        - name: usage
          in: query
          schema:
            $ref: '#/components/schemas/UsageGenerated'
          description: "Include only hosts for the specified usage level."
        - name: uom
          in: query
          schema:
            $ref: '#/components/schemas/Uom'
          description: "Filter hosts to those that contribute to a specific unit of measure"
        - name: sort
          in: query
          schema:
            $ref: "#/components/schemas/HostReportSort"
          description: "What property to sort by (optional)"
        - name: dir
          in: query
          schema:
            $ref: "#/components/schemas/SortDirection"
          description: "Which direction to sort by (default: asc)"
      responses:
        '200':
          description: 'The request for hosts was successful.'
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/HostReport"
              example:
                data:
                  - inventory_id: d6214a0b-b344-4778-831c-d53dcacb2da3
                    display_name: rhv.example.com
                    subscription_manager_id: adafd9d5-5b00-42fa-a6c9-75801d45cc6d
                    cores: 4
                    sockets: 2
                    hardware_type: hypervisor
                    number_of_guests: 4
                    last_seen: 2020-01-01T00:00:00Z
                  - inventory_id: 9358e312-1c9f-42f4-8910-dcef6e970852
                    display_name: db.example.com
                    subscription_manager_id: b101a72f-1859-4489-acb8-d6d31c2578c4
                    cores: 4
                    sockets: 2
                    hardware_type: physical
                    last_seen: 2020-01-01T00:00:00Z
                links:
                  first: '/api/rhsm-subscriptions/v1/hosts/RHEL?sla=Premium&usage=Production&offset=0&limit=5'
                  last: '/api/rhsm-subscriptions/v1/hosts/RHEL?sla=Premium&usage=Production&offset=5&limit=5'
                  previous: null
                  next: '/api/rhsm-subscriptions/v1/hosts/RHEL?sla=Premium&usage=Production&offset=5&limit=5'
                meta:
                  count: 10
                  product: RHEL
                  service_level: Premium
                  usage: Production
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - hosts
  /hosts/{hypervisor_uuid}/guests:
    description: 'Operations for hypervisor-guest mappings.'
    parameters:
      - name: hypervisor_uuid
        in: path
        required: true
        schema:
          type: string
        description: "The subscription-manager ID for the hypervisor we wish to query"
      - name: offset
        in: query
        schema:
          type: integer
        description: "The number of items to skip before starting to collect the result set"
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
          maximum: 100
        description: "The numbers of items to return"
    get:
      summary: "Fetch guests for this hypervisor."
      operationId: getHypervisorGuests
      responses:
        '200':
          description: 'The request for a capacity report was successful.'
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/HypervisorGuestReport"
              example:
                data:
                  - inventory_id: d6214a0b-b344-4778-831c-d53dcacb2da3
                    display_name: guest01.example.com
                    subscription_manager_id: adafd9d5-5b00-42fa-a6c9-75801d45cc6d
                    last_seen: 2020-01-01T00:00:00Z
                  - inventory_id: 9358e312-1c9f-42f4-8910-dcef6e970852
                    display_name: guest02.example.com
                    subscription_manager_id: b101a72f-1859-4489-acb8-d6d31c2578c4
                    last_seen: 2020-01-01T00:00:00Z
                links:
                  first: '/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=0&limit=5'
                  last: '/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5'
                  previous: null
                  next: '/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5'
                meta:
                  count: 10
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - hosts
  /ingress/candlepin_pools/{org_id}:
    description: "Integration endpoint for updating an account's subscription capacity from
      Candlepin pool data. (Internal-only API)"
    parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
        description: "The org ID of the pool data"
    post:
      summary: "Update an account's subscription capacity from Candlepin pool data. (Internal-only API)"
      operationId: updateCapacityFromCandlepinPools
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CandlepinPool'
      responses:
        '204':
          description: 'Subscription capacity for the account updated successfully.'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - ingress
  /openapi.json:
    get:
      description: "Get the OpenAPI spec in JSON format."
      operationId: getOpenApiJson
      tags:
        - root
      responses:
        '200':
          description: "The request to get the OpenAPI JSON was successful."
          content:
            application/json:
              schema:
                type: string
  /openapi.yaml:
    get:
      description: "Get the OpenAPI spec in YAML format."
      operationId: getOpenApiYaml
      tags:
        - root
      responses:
        '200':
          description: "The request to get the OpenAPI YAML was successful."
          content:
            application/x-yaml:
              schema:
                type: string

components:
  securitySchemes:
    3ScaleIdentity:
      type: apiKey
      in: header
      name: x-rh-identity
      description: |
        Base64-encoded JSON identity header provided by 3Scale. Contains an
        account number of the user issuing the request. Format of the JSON:
        ```
        {
            "identity": {
                "account_number": "account123",
                "type": "User",
                "user" : {
                    "is_org_admin": true
                },
                "internal" : {
                    "org_id": "org123"
                }
            }
        }
        ```
        Encoded (via `base64 -w0`):
        `eyJpZGVudGl0eSI6eyJhY2NvdW50X251bWJlciI6ImFjY291bnQxMjMiLCJ0eXBlIjoiVXNlciIsInVzZXIiOnsiaXNfb3JnX2FkbWluIjp0cnVlfSwiaW50ZXJuYWwiOnsib3JnX2lkIjoib3JnMTIzIn19fQo=`
  responses:
    InternalServerError:
      description: "An internal server error has occurred and is not recoverable."
      content:
        application/vnd.api+json:
          schema:
            $ref: "#/components/schemas/Errors"
    BadRequest:
      description: "The server could could not process the current request."
      content:
        application/vnd.api+json:
          schema:
            $ref: "#/components/schemas/Errors"
    Forbidden:
      description: "The request was valid, but the request was refused by the server."
      content:
        application/vnd.api+json:
          schema:
            $ref: "#/components/schemas/Errors"
    ResourceNotFound:
      description: "The requested resource was not found."
      content:
        application/vnd.api+json:
          schema:
            $ref: "#/components/schemas/Errors"
    ServiceUnavailable:
      description: "The server is currently unavailable."
      content:
        application/vnd.api+json:
          schema:
            $ref: "#/components/schemas/Errors"
  schemas:
    GranularityGenerated:
      type: string
      enum: [ DAILY, WEEKLY, MONTHLY, QUARTERLY, YEARLY ]
    ServiceLevelGenerated:
      type: string
      enum: [ "", Premium, Standard, Self-Support, _ANY ]
      x-enum-varnames: [ UNSPECIFIED, PREMIUM, STANDARD, SELF_SUPPORT, ANY ]
    UsageGenerated:
      type: string
      enum: [ "", Production, Development/Test, Disaster Recovery, _ANY ]
      x-enum-varnames: [ UNSPECIFIED, PRODUCTION, DEVELOPMENT_TEST, DISASTER_RECOVERY, ANY ]
    Uom:
      type: string
      enum:
        - cores
        - sockets
    SortDirection:
      type: string
      enum:
        - asc
        - desc
    VersionInfo:
      properties:
        build:
          type: object
          properties:
            version:
              type: string
            gitDescription:
              type: string
            artifact:
              type: string
            name:
              type: string
            group:
              type: string
            gitHash:
              type: string
    OptInConfig:
      required:
        - meta
        - data
      properties:
        meta:
          type: object
          required:
            - account_number
            - org_id
          properties:
            account_number:
              type: string
            org_id:
              type: string
        data:
          type: object
          required:
            - opt_in_complete
          properties:
            opt_in_complete:
              type: boolean
            account:
              type: object
              required:
                - account_number
                - tally_sync_enabled
                - tally_reporting_enabled
                - opt_in_type
                - created
                - last_updated
              properties:
                account_number:
                  type: string
                tally_sync_enabled:
                  type: boolean
                tally_reporting_enabled:
                  type: boolean
                opt_in_type:
                  type: string
                created:
                  type: string
                  format: date-time
                last_updated:
                  type: string
                  format: date-time
            org:
              type: object
              required:
                - org_id
                - conduit_sync_enabled
                - opt_in_type
                - created
                - last_updated
              properties:
                org_id:
                  type: string
                conduit_sync_enabled:
                  type: boolean
                opt_in_type:
                  type: string
                created:
                  type: string
                  format: date-time
                last_updated:
                  type: string
                  format: date-time
    # If we need additional responses, look at
    # https://swagger.io/docs/specification/data-models/inheritance-and-polymorphism/ to reduce
    # redundancy
    TallyReport:
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/TallySnapshot"
        links:
          type: object
          properties:
            first:
              type: string
            last:
              type: string
            previous:
              type: string
            next:
              type: string
          required:
            - first
            - last
        meta:
          type: object
          properties:
            count:
              type: integer
            product:
              type: string
            service_level:
              allOf:
                - $ref: '#/components/schemas/ServiceLevelGenerated'
              description: "Describes the service level that the report was made against. Not set if it wasn't
                specified as a query parameter."
            usage:
              allOf:
                - $ref: '#/components/schemas/UsageGenerated'
              description: "Describes the usage that the report was made against. Not set if it wasn't
                            specified as a query parameter."
            granularity:
              allOf:
                - $ref: '#/components/schemas/GranularityGenerated'
              description: "Describes the significance of each date in the TallySnapshot list. For example if the
                              granularity is set to 'weekly', the dates in the TallySnapshot list will represent the start of a
                              seven day period."
          required:
            - count
            - product
            - granularity
    TallySnapshot:
      # Container for fields we capture from the IT endpoint for upload to inventory service.  The element
      # being reported should be the only non-required element.  E.g. snapshots containing memory will have
      # date, instance count, and memory elements while snapshots containing cores will contain date,
      # instance count, and cores.
      required:
        - date
        - instance_count
      properties:
        date:
          description: "The start date for this snapshot entry. Dates are returned in UTC. Clients must
            consult the 'granularity' field in the TallyReport to determine the length of time each
            TallySnapshot covers."
          type: string
          format: date-time
        instance_count:
          description: "Total systems matching the report criteria on the date of this snapshot."
          type: integer
          format: int32
          minimum: 0
          default: 0
        cores:
          type: integer
          format: int32
          minimum: 0
          default: 0
        sockets:
          description: "Total number of sockets calculated from systems matching the report criteria on the date of this snapshot."
          type: integer
          format: int32
          minimum: 0
          default: 0
        physical_instance_count:
          description: "Total number of physical systems matching the report criteria on the date of this snapshot."
          type: integer
          format: int32
          minimum: 0
          default: 0
        physical_cores:
          description: "Total number of cores calculated from physical systems matching the report criteria on the date of this snapshot."
          type: integer
          format: int32
          minimum: 0
          default: 0
        physical_sockets:
          description: "Total number of sockets calculated from physical systems matching the report criteria on the date of this snapshot."
          type: integer
          format: int32
          minimum: 0
          default: 0
        hypervisor_instance_count:
          description: "Total number of hypervisors matching the report criteria on the date of this snapshot."
          type: integer
          format: int32
          minimum: 0
          default: 0
        hypervisor_cores:
          description: "Total number of cores calculated from hypervisors matching the report criteria on the date of this snapshot."
          type: integer
          format: int32
          minimum: 0
          default: 0
        hypervisor_sockets:
          description: "Total number of sockets calculated from hypervisors matching the report criteria on the date of this snapshot."
          type: integer
          format: int32
          minimum: 0
          default: 0
        cloud_instance_count:
          description: "Total number of hosts running on a public cloud provider, matching the report criteria on the date of this snapshot."
          type: integer
          format: int32
          minimum: 0
          default: 0
        cloud_cores:
          description: "Total number of cores calculated from hosts running on a public cloud provider, matching the report criteria on the date of this snapshot."
          type: integer
          format: int32
          minimum: 0
          default: 0
        cloud_sockets:
          description: "Total number of sockets calculated from hosts running on a public cloud provider, matching the report criteria on the date of this snapshot."
          type: integer
          format: int32
          minimum: 0
          default: 0
        has_data:
          type: boolean
        has_cloudigrade_data:
          description: "Indicates whether this tally report was enriched with data from Cloudigrade."
          type: boolean
          default: false
        has_cloudigrade_mismatch:
          description: "Indicates whether this tally report appears to have a mismatch in reporting
            between Cloudigrade and other data sources. This may or may not indicate an issue with data
            data sources."
          type: boolean
          default: false
    CapacityReport:
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/CapacitySnapshot"
        links:
          type: object
          properties:
            first:
              type: string
            last:
              type: string
            previous:
              type: string
            next:
              type: string
          required:
            - first
            - last
        meta:
          type: object
          properties:
            count:
              type: integer
            product:
              type: string
            granularity:
              allOf:
                - $ref: '#/components/schemas/GranularityGenerated'
              description: "Describes the significance of each date in the CapacitySnapshot list. For example if the
                granularity is set to 'weekly', the dates in the CapacitySnapshot list will represent the start of a
                seven day period."
            service_level:
              allOf:
                - $ref: '#/components/schemas/ServiceLevelGenerated'
              description: "Describes the service level that the report was made against. Not set if it wasn't
                specified as a query parameter."
            usage:
              allOf:
                - $ref: '#/components/schemas/UsageGenerated'
              description: "Describes the usages that the report was made against. Not set if it wasn't
               specified as a query parameter."
          required:
            - count
            - product
            - granularity
    CapacitySnapshot:
      required:
        - date
        - has_infinite_quantity
      properties:
        date:
          type: string
          format: date-time
          description: "The start date for this snapshot entry. Dates are returned in UTC. Clients must
            consult the 'granularity' field in the CapacityReport to determine the length of time each
            CapacitySnapshot covers."
        sockets:
          description: "Total socket capacity."
          type: integer
          format: int32
          minimum: 0
        physical_sockets:
          description: "Physical socket capacity."
          type: integer
          format: int32
          minimum: 0
        hypervisor_sockets:
          description: "Hypervisor socket capacity."
          type: integer
          format: int32
          minimum: 0
        cores:
          description: "Total cores capacity."
          type: integer
          format: int32
          minimum: 0
        physical_cores:
          description: "Total physical cores capacity."
          type: integer
          format: int32
          minimum: 0
        hypervisor_cores:
          description: "Total hypervisor cores capacity."
          type: integer
          format: int32
          minimum: 0
        has_infinite_quantity:
          description: "Indicates whether this snapshot has an infinite quantity subscription included.
            If there is an infinite quantity subscription involved, there is no meaningful number for
            capacity."
          type: boolean
    HostReportSort:
      type: string
      enum:
        - display_name
        - hardware_type
        - cores
        - sockets
        - last_seen
        - measurement_type
    HostReport:
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Host"
        links:
          type: object
          properties:
            first:
              type: string
            last:
              type: string
            previous:
              type: string
            next:
              type: string
          required:
            - first
            - last
        meta:
          type: object
          properties:
            count:
              type: integer
            product:
              type: string
            service_level:
              allOf:
                - $ref: '#/components/schemas/ServiceLevelGenerated'
              description: "Describes the service level that the report was made against. Not set if it wasn't
                    specified as a query parameter."
              type: string
            usage:
              allOf:
                - $ref: '#/components/schemas/UsageGenerated'
              description: "Describes the usages that the report was made against. Not set if it wasn't
                   specified as a query parameter."
            uom:
              $ref: '#/components/schemas/Uom'
          required:
            - count
            - product
    HypervisorGuestReport:
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Host"
        links:
          type: object
          properties:
            first:
              type: string
            last:
              type: string
            previous:
              type: string
            next:
              type: string
          required:
            - first
            - last
        meta:
          type: object
          properties:
            count:
              type: integer
          required:
            - count
    Host:
      required:
        - inventory_id
        - display_name
        - hardware_type
        - last_seen
      properties:
        inventory_id:
          description: The HBI identifier for this host.
          type: string
        insights_id:
          description: The insights identifier for this host, used as ID on cloud.redhat.com.
          type: string
        display_name:
          description: The display name for this host on cloud.redhat.com.
          type: string
        subscription_manager_id:
          description: The subscription-manager ID for this host, from `subscription-manager identity`.
          type: string
        sockets:
          description: Number of effective sockets counted for this host by Subscription Watch.
          type: integer
          format: int32
          minimum: 0
        cores:
          description: Number of effective cores counted for this host by Subscription Watch.
          type: integer
          format: int32
          minimum: 0
        hardware_type:
          description: What the type of the host is (e.g. hypervisor, physical, etc.).
          type: string
        measurement_type:
          description: What was the applied measurement type (e.g. hypervisor, physical, aws, etc ).
          type: string
        number_of_guests:
          description: Number of guests if this host is a hypervisor.
          type: integer
          format: int32
        last_seen:
          description: Latest timestamp that Subscription Watch has for this host.
          type: string
          format: date-time
        is_unmapped_guest:
          description: Is this host an unmapped guest (not reported by virt-who)?
          type: boolean
        is_hypervisor:
          description: Is this host a hypervisor?
          type: boolean
        cloud_provider:
          description: If applicable, the cloud provider for this host.
          type: string
    CandlepinPool:
      description: Subset of Candlepin pool data that rhsm-subscriptions understands.
      properties:
        accountNumber:
          type: string
        activeSubscription:
          type: boolean
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        quantity:
          type: integer
          format: int64
        productId:
          type: string
        productAttributes:
          type: array
          items:
            $ref: "#/components/schemas/CandlepinProductAttribute"
        providedProducts:
          type: array
          items:
            $ref: "#/components/schemas/CandlepinProvidedProduct"
        derivedProvidedProducts:
          type: array
          items:
            $ref: "#/components/schemas/CandlepinProvidedProduct"
        subscriptionId:
          type: string
        type:
          type: string
    CandlepinProductAttribute:
      properties:
        name:
          type: string
        value:
          type: string
    CandlepinProvidedProduct:
      properties:
        productId:
          type: string
    Errors:
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: "#/components/schemas/Error"
    Error:
      required:
        - status
        - code
        - title
      properties:
        status:
          type: string
        code:
          type: string
        title:
          type: string
        detail:
          type: string

security:
  - 3ScaleIdentity: [ ]
