openapi: "3.0.2"
info:
  title: "rhsm-subscriptions internal tally API"
  version: 1.0.0

paths:
  /internal/tally/resend:
    description: 'Operations to resend specific tally snapshots to marketplaces'
    post:
      operationId: resendTally
      summary: "Resend specific tally snapshots"
      requestBody:
        $ref: '#/components/requestBodies/UuidListBody'
      responses:
        '202':
          description: "The request for resending the tally snapshots was accepted"
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/TallyResend"
        '400':
          $ref: "../../../spec/error-responses.yaml#/$defs/BadRequest"
        '403':
          $ref: "../../../spec/error-responses.yaml#/$defs/Forbidden"
        '500':
          $ref: "../../../spec/error-responses.yaml#/$defs/InternalServerError"
      tags:
        - internalTally
  /internal/tally/sync-remittance:
    description: 'Operations to sync remittance with existing tally snapshots.'
    post:
      operationId: syncRemittance
      summary: "Sync remittance with existing tally snapshots for all metrics configured with MONTHLY billing window."
      responses:
        '200':
          description: "The request for syncing remittance was successful."
        '400':
          $ref: "../../../spec/error-responses.yaml#/$defs/BadRequest"
        '403':
          $ref: "../../../spec/error-responses.yaml#/$defs/Forbidden"
        '500':
          $ref: "../../../spec/error-responses.yaml#/$defs/InternalServerError"
  /internal/tally/hourly:
    description: 'Operations pertaining to the hourly tally.'
    post:
      operationId: performHourlyTallyForOrg
      summary: "Immediately perform the hourly tally for a specific org."
      parameters:
        - name: org
          in: query
          required: true
          schema:
            type: string
          description: "The orgId to tally."
        - name: start
          in: query
          required: true
          schema:
            type: string
            format: date-time
            description: "The start date for the tally (e.g. 22-05-03T10:00:00Z). Must be specified along with the end parameter."
        - name: end
          in: query
          required: true
          schema:
            type: string
            format: date-time
            description: "The end date for the tally (e.g. 22-05-03T10:00:00Z). Must be specified along with the start parameter."
        - name: x-rh-swatch-synchronous-request
          in: header
          required: false
          schema:
            type: boolean
            default: "false"
            description: "When present, a synchronous request is made."
      responses:
        '200':
          description: "The hourly tally operation succeeded for the specified orgId."
        '400':
          $ref: "../../../spec/error-responses.yaml#/$defs/BadRequest"
        '403':
          $ref: "../../../spec/error-responses.yaml#/$defs/Forbidden"
        '500':
          $ref: "../../../spec/error-responses.yaml#/$defs/InternalServerError"
  /internal-tally-openapi.json:
    $ref: "../../../spec/openapi-paths.yaml#/openapi-json"
  /internal-tally-openapi.yaml:
    $ref: "../../../spec/openapi-paths.yaml#/openapi-yaml"
  /internal/rpc/tally/purge:
    description: 'Operations to purge existing tally snapshots matching the configured retention policy.'
    post:
      operationId: purgeTallySnapshots
      summary: 'Purge existing tally snapshots matching the configured retention policy.'
      responses:
        '204':
          description: 'The request for purging tally snapshots was successful.'
        '401':
          $ref: "../../../spec/error-responses.yaml#/$defs/Unauthorized"
        '500':
          $ref: "../../../spec/error-responses.yaml#/$defs/InternalServerError"
      tags: [internalTally]
  /internal/rpc/tally/data/{org_id}:
    description: Clear tallies, hosts, and events for a given org ID. Enabled via ENABLE_ACCOUNT_RESET environment variable.
    delete:
      operationId: deleteDataAssociatedWithOrg
      parameters:
        - in: path
          name: org_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Finished deleting data associated with organization
          content:
            application/json:
              schema:
                type: string
        '400':
          $ref: "../../../spec/error-responses.yaml#/$defs/BadRequest"
        '403':
          $ref: "../../../spec/error-responses.yaml#/$defs/Forbidden"
        '500':
          $ref: "../../../spec/error-responses.yaml#/$defs/InternalServerError"
      tags: [internalTally]
  /internal/rpc/tally/data/{event_id}:
    description: Delete an event. Supported only in dev-mode.
    delete:
      operationId: deleteEvent
      parameters:
        - in: path
          name: event_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully deleted Event with ID
          content:
            application/json:
              schema:
                type: string
        '400':
          $ref: "../../../spec/error-responses.yaml#/$defs/BadRequest"
        '403':
          $ref: "../../../spec/error-responses.yaml#/$defs/Forbidden"
        '500':
          $ref: "../../../spec/error-responses.yaml#/$defs/InternalServerError"
      tags: [internalTally]
  /internal/rpc/tally/data/snapshots:
    description: Trigger and update tally for all configured org.
    put:
      operationId: tallyConfiguredAccounts
      responses:
        '200':
          description: "Updated snapshots for all org."
        '400':
          $ref: "../../../spec/error-responses.yaml#/$defs/BadRequest"
        '403':
          $ref: "../../../spec/error-responses.yaml#/$defs/Forbidden"
        '404':
          $ref: "../../../spec/error-responses.yaml#/$defs/ResourceNotFound"
        '500':
          $ref: "../../../spec/error-responses.yaml#/$defs/InternalServerError"
      tags: [internalTally]
components:
  requestBodies:
    UuidListBody:
      description: "A list of UUIDs"
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UuidList"
  schemas:
    UuidList:
      type: object
      properties:
        uuids:
          type: array
          items:
            type: string
    TallyResend:
      properties:
        data:
          type: object
          required:
            - tallies_resent
          properties:
            tallies_resent:
              type: integer
