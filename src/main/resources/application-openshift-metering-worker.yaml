METERING_TASK_TOPIC: ${clowder.kafka.topics[?(@.requestedName == 'platform.rhsm-subscriptions.metering-tasks')].name:platform.rhsm-subscriptions.metering-tasks}

rhsm-subscriptions:
  # Use Spring Resource notation for this (e.g. "classpath:" or "file:")
  account-list-resource-location: ${ACCOUNT_LIST_RESOURCE_LOCATION:}
  account-batch-size: ${ACCOUNT_BATCH_SIZE:1}

  metering:
    prometheus:
      metric:
        queryTemplates:
          default: >-
            #{metric.prometheus.queryParams[metric]}
            * on(_id) group_right
            min_over_time(#{metric.prometheus.queryParams[metadataMetric]}{product="#{metric.prometheus.queryParams[product]}", external_organization="#{runtime[orgId]}", billing_model="marketplace", support=~"Premium|Standard|Self-Support|None"}[1h])
          addonSamples: >-
            #{metric.prometheus.queryParams[metric]}
            * on(_id) group_right
            min_over_time(#{metric.prometheus.queryParams[metadataMetric]}{resource_type="addon",resource_name="#{metric.prometheus.queryParams[resourceName]}", external_organization="#{runtime[orgId]}", billing_model="marketplace", support=~"Premium|Standard|Self-Support|None"}[1h])
        maxAttempts: ${OPENSHIFT_MAX_ATTEMPTS:50}
        backOffMaxInterval: ${OPENSHIFT_BACK_OFF_MAX_INTERVAL:50000}
        backOffInitialInterval: ${OPENSHIFT_BACK_OFF_INITIAL_INTERVAL:1000}
        backOffMultiplier: ${OPENSHIFT_BACK_OFF_MULTIPLIER:1.5}
    tasks:
      topic: ${METERING_TASK_TOPIC}
      kafka-group-id: ${METERING_TASK_GROUP_ID:metering-task-processor}
      seek-override-end: ${KAFKA_SEEK_OVERRIDE_END:false}
      seek-override-timestamp: ${KAFKA_SEEK_OVERRIDE_TIMESTAMP:}
