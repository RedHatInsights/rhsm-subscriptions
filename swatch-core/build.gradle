plugins {
    id "swatch.java-library-conventions"
    id "swatch.spring-boot-dependencies-conventions"
    id 'jsonschema2pojo'
    id 'jacoco'
}

dependencies {
    annotationProcessor "org.hibernate.orm:hibernate-jpamodelgen"
    implementation project(":api") // for util methods in ResourceUtils
    implementation project(":clients:rbac-client") // for security integration w/ rbac
    api project(":swatch-common-resteasy")
    // API exports swatch-product-configuration classes to all projects that include swatch-core
    api project(":swatch-product-configuration")
    implementation "org.hibernate.validator:hibernate-validator"
    implementation "jakarta.validation:jakarta.validation-api"
    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.springframework.boot:spring-boot-actuator-autoconfigure"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "com.google.guava:guava" // for ip address class
    implementation "com.fasterxml.jackson.core:jackson-annotations" // for json generated models
    implementation "com.fasterxml.jackson.core:jackson-databind" // for use of objectmapper in EventRecord
    implementation "org.springframework.kafka:spring-kafka"
    implementation "io.micrometer:micrometer-core"
    implementation "com.jayway.jsonpath:json-path"
    implementation "com.splunk.logging:splunk-library-javalogging"
    implementation "org.codehaus.janino:janino"
    implementation (libraries["resteasy-spring-boot-starter"]) {
        exclude group: "org.jboss", module: "jandex"
    }

    testImplementation project(":swatch-core-test")
    testImplementation "org.springframework:spring-test"
}

jsonSchema2Pojo {
    source = files("${projectDir}/schemas")
    targetPackage = "org.candlepin.subscriptions.json"
    includeAdditionalProperties = false
    includeJsr303Annotations = true
    initializeCollections = false
    dateTimeType = 'java.time.OffsetDateTime'
    sourceType = 'yamlschema'
    generateBuilders = true
    includeGetters = true
    includeSetters = true
    useJakartaValidation = true
}

description = 'SWATCH Core Library'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}
