apiVersion: v1
kind: Template
labels:
  app: rhsm-subscriptions
  template: rhsm-subscriptions-capacity-ingress
metadata:
  annotations:
    description: Components for ingesting capacity information for Subscription Watch.
  name: rhsm-subscriptions-capacity-ingress

parameters:
  - name: LOGGING_LEVEL_ROOT
    value: WARN
  - name: LOGGING_LEVEL
    value: INFO
  - name: KAFKA_BOOTSTRAP_HOST
    required: true
  - name: KAFKA_MESSAGE_THREADS
    value: '24'
  - name: REPLICAS
    value: '1'
  - name: IMAGE
    value: quay.io/cloudservices/rhsm-subscriptions
  - name: IMAGE_TAG
    value: latest
  - name: IMAGE_PULL_SECRET
    value: quay-cloudservices-pull
  - name: MEMORY_REQUEST
    value: 1000Mi
  - name: MEMORY_LIMIT
    value: 1744Mi
  - name: CPU_REQUEST
    value: 500m
  - name: CPU_LIMIT
    value: '900m'
  - name: SPLUNK_FORWARDER_IMAGE
    value: quay.io/cloudservices/rhsm-splunk-forwarder:4a75424
  - name: SPLUNK_FORWARDER_MEMORY_REQUEST
    value: 128Mi
  - name: SPLUNK_FORWARDER_MEMORY_LIMIT
    value: 256Mi
  - name: SPLUNK_FORWARDER_CPU_REQUEST
    value: 50m
  - name: SPLUNK_FORWARDER_CPU_LIMIT
    value: 100m
  - name: DATABASE_CONNECTION_TIMEOUT_MS
    value: '30000'
  - name: DATABASE_MAX_POOL_SIZE
    value: '10'
  - name: SUBSCRIPTION_SYNC_ENABLED
    value: 'true'
  - name: DEVTEST_SUBSCRIPTION_EDITING_ENABLED
    value: 'false'
  - name: SUBSCRIPTION_URL
    value: https://subscription.qa.api.redhat.com/svcrest/subscription/v5
  - name: SUBSCRIPTION_IGNORE_EXPIRED_OLDER_THAN
    value: 2m
  - name: SUBSCRIPTION_IGNORE_STARTING_LATER_THAN
    value: 2m
  - name: PRODUCT_URL
    value: https://product.qa.api.redhat.com/svcrest/product/v3

objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: rhsm-subscriptions-capacity-ingress
    spec:
      replicas: ${{REPLICAS}}
      selector:
        deploymentconfig: rhsm-subscriptions-capacity-ingress
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            deploymentconfig: rhsm-subscriptions-capacity-ingress
            prometheus: rhsm
          annotations:
            prometheus.io/path: /metrics
            prometheus.io/port: '9000'
            prometheus.io/scrape: 'true'
        spec:
          initContainers:
            - image: ${IMAGE}:${IMAGE_TAG}
              name: liquibase
              env:
                - name: SPRING_PROFILES_ACTIVE
                  value: liquibase-only
                - name: JAVA_MAX_MEM_RATIO
                  value: '85'
                - name: GC_MAX_METASPACE_SIZE
                  value: '256'
                - name: DATABASE_HOST
                  valueFrom:
                    secretKeyRef:
                      name: rhsm-db
                      key: db.host
                - name: DATABASE_PORT
                  valueFrom:
                    secretKeyRef:
                      name: rhsm-db
                      key: db.port
                - name: DATABASE_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: rhsm-db
                      key: db.user
                - name: DATABASE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: rhsm-db
                      key: db.password
                - name: DATABASE_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: rhsm-db
                      key: db.name
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
          containers:
            - image: ${IMAGE}:${IMAGE_TAG}
              name: rhsm-subscriptions-capacity-ingress
              env:
                # turn off built-in jolokia, so that the spring boot jolokia actuator will work
                - name: AB_JOLOKIA_OFF
                  value: 'true'
                - name: LOG_FILE
                  value: /logs/server.log
                - name: SPRING_PROFILES_ACTIVE
                  value: capacity-ingress
                - name: JAVA_MAX_MEM_RATIO
                  value: '85'
                - name: GC_MAX_METASPACE_SIZE
                  value: '256'
                - name: LOGGING_LEVEL_ROOT
                  value: ${LOGGING_LEVEL_ROOT}
                - name: LOGGING_LEVEL_ORG_CANDLEPIN
                  value: ${LOGGING_LEVEL}
                - name: KAFKA_BOOTSTRAP_HOST
                  value: ${KAFKA_BOOTSTRAP_HOST}
                - name: KAFKA_MESSAGE_THREADS
                  value: ${KAFKA_MESSAGE_THREADS}
                - name: DATABASE_HOST
                  valueFrom:
                    secretKeyRef:
                      name: rhsm-db
                      key: db.host
                - name: DATABASE_PORT
                  valueFrom:
                    secretKeyRef:
                      name: rhsm-db
                      key: db.port
                - name: DATABASE_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: rhsm-db
                      key: db.user
                - name: DATABASE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: rhsm-db
                      key: db.password
                - name: DATABASE_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: rhsm-db
                      key: db.name
                - name: DATABASE_CONNECTION_TIMEOUT_MS
                  value: ${DATABASE_CONNECTION_TIMEOUT_MS}
                - name: DATABASE_MAX_POOL_SIZE
                  value: ${DATABASE_MAX_POOL_SIZE}
                - name: SUBSCRIPTION_SYNC_ENABLED
                  value: ${SUBSCRIPTION_SYNC_ENABLED}
                - name: INVENTORY_DATABASE_HOST
                  valueFrom:
                    secretKeyRef:
                      name: host-inventory-db-readonly
                      key: db.host
                - name: INVENTORY_DATABASE_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: host-inventory-db-readonly
                      key: db.name
                - name: INVENTORY_DATABASE_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: host-inventory-db-readonly
                      key: db.user
                - name: INVENTORY_DATABASE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: host-inventory-db-readonly
                      key: db.password
                - name: PRODUCT_WHITELIST_RESOURCE_LOCATION
                  value: file:/capacity-allowlist/product-allowlist.txt
                - name: PRODUCT_KEYSTORE
                  value: /service-certs/keystore.jks
                - name: PRODUCT_KEYSTORE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: tls
                      key: keystore_password
                - name: SUBSCRIPTION_KEYSTORE
                  value: /service-certs/keystore.jks
                - name: SUBSCRIPTION_URL
                  value: ${SUBSCRIPTION_URL}
                - name: SUBSCRIPTION_IGNORE_EXPIRED_OLDER_THAN
                  value: ${SUBSCRIPTION_IGNORE_EXPIRED_OLDER_THAN}
                - name: SUBSCRIPTION_IGNORE_STARTING_LATER_THAN
                  value: ${SUBSCRIPTION_IGNORE_STARTING_LATER_THAN}
                - name: PRODUCT_URL
                  value: ${PRODUCT_URL}
                - name: SUBSCRIPTION_KEYSTORE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: tls
                      key: keystore_password
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /health
                  port: 9000
                  scheme: HTTP
                initialDelaySeconds: 90
                periodSeconds: 20
                successThreshold: 1
                timeoutSeconds: 3
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /metrics
                  port: 9000
                  scheme: HTTP
                initialDelaySeconds: 90
                periodSeconds: 20
                successThreshold: 1
                timeoutSeconds: 3
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
              ports:
                - containerPort: 8443
                  protocol: TCP
                  name: web-secure
                - containerPort: 8000
                  protocol: TCP
                  name: web
                - containerPort: 9000
                  protocol: TCP
                  name: metrics-port
              volumeMounts:
                - name: capacity-allowlist
                  mountPath: /capacity-allowlist
                - name: logs
                  mountPath: /logs
                - name: service-certs
                  mountPath: /service-certs
              workingDir: /
            - name: splunk
              env:
                - name: SPLUNKMETA_namespace
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
              image: ${SPLUNK_FORWARDER_IMAGE}
              resources:
                requests:
                  cpu: ${SPLUNK_FORWARDER_CPU_REQUEST}
                  memory: ${SPLUNK_FORWARDER_MEMORY_REQUEST}
                limits:
                  cpu: ${SPLUNK_FORWARDER_CPU_LIMIT}
                  memory: ${SPLUNK_FORWARDER_MEMORY_LIMIT}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /var/log/app
                  name: logs
                  readOnly: true
                - mountPath: /tls/splunk.pem
                  name: splunk
                  subPath: splunk.pem
          volumes:
            - name: capacity-allowlist
              configMap:
                name: capacity-allowlist
            - name: splunk
              secret:
                secretName: splunk
            - name: service-certs
              secret:
                secretName: pinhead
            - name: logs
              emptyDir:
          restartPolicy: Always
          terminationGracePeriodSeconds: 75
          imagePullSecrets:
          - name: ${IMAGE_PULL_SECRET}
          - name: quay-cloudservices-pull
      triggers:
        - type: ConfigChange

  - apiVersion: v1
    kind: Service
    metadata:
      name: rhsm-subscriptions-capacity-ingress
    spec:
      ports:
        - port: 8443
          protocol: TCP
          targetPort: web-secure
      selector:
        deploymentconfig: rhsm-subscriptions-capacity-ingress

  - apiVersion: v1
    kind: Service
    metadata:
      name: rhsm-subscriptions-capacity-ingress-monitoring
      labels:
        prometheus: rhsm
    spec:
      ports:
        - port: 9000
          name: "9000"
          protocol: TCP
          targetPort: metrics-port
      selector:
        deploymentconfig: rhsm-subscriptions-capacity-ingress
