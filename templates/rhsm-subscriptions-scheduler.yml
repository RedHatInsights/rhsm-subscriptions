apiVersion: v1
kind: Template
labels:
  app: rhsm-subscriptions
  template: rhsm-subscriptions-scheduler
metadata:
  annotations:
    description: Scheduled tasks for Subscription Watch
  name: rhsm-subscriptions-scheduler

parameters:
  - name: LOGGING_LEVEL_ROOT
    value: WARN
  - name: LOGGING_LEVEL
    value: INFO
  - name: KAFKA_BOOTSTRAP_HOST
    required: true
  - name: PURGE_SNAPSHOT_SCHEDULE
    value: 0 3 * * *
  - name: CAPTURE_SNAPSHOT_SCHEDULE
    value: 0 1 * * *
  - name: CAPTURE_HOURLY_SNAPSHOT_SCHEDULE
    value: '@hourly'
  - name: EVENT_RECORD_RETENTION
    value: 90d
  - name: IMAGE
    value: quay.io/cloudservices/rhsm-subscriptions
  - name: IMAGE_TAG
    value: latest
  - name: IMAGE_PULL_SECRET
    value: quay-cloudservices-pull
  - name: MEMORY_REQUEST
    value: 1000Mi
  - name: MEMORY_LIMIT
    value: 1650Mi
  - name: CPU_REQUEST
    value: 500m
  - name: CPU_LIMIT
    value: 1800m
  - name: SPLUNK_FORWARDER_IMAGE
    value: quay.io/cloudservices/rhsm-splunk-forwarder:19bd22d
  - name: SPLUNK_FORWARDER_MEMORY_REQUEST
    value: 128Mi
  - name: SPLUNK_FORWARDER_MEMORY_LIMIT
    value: 256Mi
  - name: SPLUNK_FORWARDER_CPU_REQUEST
    value: 50m
  - name: SPLUNK_FORWARDER_CPU_LIMIT
    value: 100m
  - name: HOURLY_TALLY_OFFSET
    value: 60m
  - name: EGRESS_IMAGE_TAG
    value: fec6dc2
  - name: DB_CHANGELOG_CLEANUP_SCHEDULE
    value: 00 15 19 08 *
  - name: DB_CHANGELOG_CLEANUP_SUSPEND
    value: 'true'
  - name: DB_CHANGELOG_CLEANUP_SQL
    value: delete from databasechangeloglock

objects:
  - apiVersion: batch/v1beta1
    kind: CronJob
    metadata:
      name: rhsm-subscriptions-cron-tally
    spec:
      schedule: ${CAPTURE_SNAPSHOT_SCHEDULE}
      jobTemplate:
        spec:
          activeDeadlineSeconds: 1800
          template:
            spec:
              activeDeadlineSeconds: 1800
              restartPolicy: Never
              imagePullSecrets:
                - name: ${IMAGE_PULL_SECRET}
                - name: quay-cloudservices-pull
              containers:
                - image: ${IMAGE}:${IMAGE_TAG}
                  name: rhsm-subscriptions-cron-tally
                  env:
                    - name: SPRING_PROFILES_ACTIVE
                      value: capture-snapshots,kafka-queue
                    - name: JAVA_MAX_MEM_RATIO
                      value: '85'
                    - name: GC_MAX_METASPACE_SIZE
                      value: '256'
                    - name: LOG_FILE
                      value: /logs/server.log
                    - name: LOGGING_LEVEL_ROOT
                      value: ${LOGGING_LEVEL_ROOT}
                    - name: LOGGING_LEVEL_ORG_CANDLEPIN
                      value: ${LOGGING_LEVEL}
                    - name: KAFKA_BOOTSTRAP_HOST
                      value: ${KAFKA_BOOTSTRAP_HOST}
                    - name: DATABASE_HOST
                      valueFrom:
                        secretKeyRef:
                          name: rhsm-db
                          key: db.host
                    - name: DATABASE_PORT
                      valueFrom:
                        secretKeyRef:
                          name: rhsm-db
                          key: db.port
                    - name: DATABASE_USERNAME
                      valueFrom:
                        secretKeyRef:
                          name: rhsm-db
                          key: db.user
                    - name: DATABASE_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: rhsm-db
                          key: db.password
                    - name: DATABASE_DATABASE
                      valueFrom:
                        secretKeyRef:
                          name: rhsm-db
                          key: db.name
                    - name: INVENTORY_DATABASE_HOST
                      valueFrom:
                        secretKeyRef:
                          name: host-inventory-db-readonly
                          key: db.host
                    - name: INVENTORY_DATABASE_DATABASE
                      valueFrom:
                        secretKeyRef:
                          name: host-inventory-db-readonly
                          key: db.name
                    - name: INVENTORY_DATABASE_USERNAME
                      valueFrom:
                        secretKeyRef:
                          name: host-inventory-db-readonly
                          key: db.user
                    - name: INVENTORY_DATABASE_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: host-inventory-db-readonly
                          key: db.password
                  resources:
                    requests:
                      cpu: ${CPU_REQUEST}
                      memory: ${MEMORY_REQUEST}
                    limits:
                      cpu: ${CPU_LIMIT}
                      memory: ${MEMORY_LIMIT}
                  volumeMounts:
                    - name: logs
                      mountPath: /logs
                - name: splunk
                  env:
                    - name: SPLUNKMETA_namespace
                      valueFrom:
                        fieldRef:
                          apiVersion: v1
                          fieldPath: metadata.namespace
                  image: ${SPLUNK_FORWARDER_IMAGE}
                  resources:
                    requests:
                      cpu: ${SPLUNK_FORWARDER_CPU_REQUEST}
                      memory: ${SPLUNK_FORWARDER_MEMORY_REQUEST}
                    limits:
                      cpu: ${SPLUNK_FORWARDER_CPU_LIMIT}
                      memory: ${SPLUNK_FORWARDER_MEMORY_LIMIT}
                  terminationMessagePath: /dev/termination-log
                  terminationMessagePolicy: File
                  volumeMounts:
                    - mountPath: /var/log/app
                      name: logs
                      readOnly: true
                    - mountPath: /tls/splunk.pem
                      name: splunk
                      subPath: splunk.pem
              volumes:
                - name: splunk
                  secret:
                    secretName: splunk
                - name: logs
                  emptyDir:
  - apiVersion: batch/v1beta1
    kind: CronJob
    metadata:
      name: rhsm-subscriptions-cron-hourly-tally
    spec:
      schedule: ${CAPTURE_HOURLY_SNAPSHOT_SCHEDULE}
      jobTemplate:
        spec:
          activeDeadlineSeconds: 1800
          template:
            spec:
              activeDeadlineSeconds: 1800
              restartPolicy: Never
              imagePullSecrets:
                - name: ${IMAGE_PULL_SECRET}
                - name: quay-cloudservices-pull
              containers:
                - image: ${IMAGE}:${IMAGE_TAG}
                  name: rhsm-subscriptions-cron-hourly-tally
                  env:
                    - name: SPRING_PROFILES_ACTIVE
                      value: capture-hourly-snapshots,kafka-queue
                    - name: JAVA_MAX_MEM_RATIO
                      value: '85'
                    - name: GC_MAX_METASPACE_SIZE
                      value: '256'
                    - name: LOG_FILE
                      value: /logs/server.log
                    - name: LOGGING_LEVEL_ROOT
                      value: ${LOGGING_LEVEL_ROOT}
                    - name: LOGGING_LEVEL_ORG_CANDLEPIN
                      value: ${LOGGING_LEVEL}
                    - name: KAFKA_BOOTSTRAP_HOST
                      value: ${KAFKA_BOOTSTRAP_HOST}
                    - name: HOURLY_TALLY_OFFSET
                      value: ${HOURLY_TALLY_OFFSET}
                    - name: DATABASE_HOST
                      valueFrom:
                        secretKeyRef:
                          name: rhsm-db
                          key: db.host
                    - name: DATABASE_PORT
                      valueFrom:
                        secretKeyRef:
                          name: rhsm-db
                          key: db.port
                    - name: DATABASE_USERNAME
                      valueFrom:
                        secretKeyRef:
                          name: rhsm-db
                          key: db.user
                    - name: DATABASE_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: rhsm-db
                          key: db.password
                    - name: DATABASE_DATABASE
                      valueFrom:
                        secretKeyRef:
                          name: rhsm-db
                          key: db.name
                    - name: INVENTORY_DATABASE_HOST
                      valueFrom:
                        secretKeyRef:
                          name: host-inventory-db-readonly
                          key: db.host
                    - name: INVENTORY_DATABASE_DATABASE
                      valueFrom:
                        secretKeyRef:
                          name: host-inventory-db-readonly
                          key: db.name
                    - name: INVENTORY_DATABASE_USERNAME
                      valueFrom:
                        secretKeyRef:
                          name: host-inventory-db-readonly
                          key: db.user
                    - name: INVENTORY_DATABASE_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: host-inventory-db-readonly
                          key: db.password
                  resources:
                    requests:
                      cpu: ${CPU_REQUEST}
                      memory: ${MEMORY_REQUEST}
                    limits:
                      cpu: ${CPU_LIMIT}
                      memory: ${MEMORY_LIMIT}
                  volumeMounts:
                    - name: logs
                      mountPath: /logs
                - name: splunk
                  env:
                    - name: SPLUNKMETA_namespace
                      valueFrom:
                        fieldRef:
                          apiVersion: v1
                          fieldPath: metadata.namespace
                  image: ${SPLUNK_FORWARDER_IMAGE}
                  resources:
                    requests:
                      cpu: ${SPLUNK_FORWARDER_CPU_REQUEST}
                      memory: ${SPLUNK_FORWARDER_MEMORY_REQUEST}
                    limits:
                      cpu: ${SPLUNK_FORWARDER_CPU_LIMIT}
                      memory: ${SPLUNK_FORWARDER_MEMORY_LIMIT}
                  terminationMessagePath: /dev/termination-log
                  terminationMessagePolicy: File
                  volumeMounts:
                    - mountPath: /var/log/app
                      name: logs
                      readOnly: true
                    - mountPath: /tls/splunk.pem
                      name: splunk
                      subPath: splunk.pem
              volumes:
                - name: splunk
                  secret:
                    secretName: splunk
                - name: logs
                  emptyDir:
  - apiVersion: batch/v1beta1
    kind: CronJob
    metadata:
      name: rhsm-subscriptions-cron-purge
    spec:
      schedule: ${PURGE_SNAPSHOT_SCHEDULE}
      jobTemplate:
        spec:
          activeDeadlineSeconds: 1800
          template:
            spec:
              activeDeadlineSeconds: 1800
              restartPolicy: Never
              imagePullSecrets:
                - name: ${IMAGE_PULL_SECRET}
                - name: quay-cloudservices-pull
              containers:
                - image: ${IMAGE}:${IMAGE_TAG}
                  name: rhsm-subscriptions-cron-purge
                  env:
                    - name: SPRING_PROFILES_ACTIVE
                      value: purge-snapshots,kafka-queue
                    - name: JAVA_MAX_MEM_RATIO
                      value: '85'
                    - name: GC_MAX_METASPACE_SIZE
                      value: '256'
                    - name: LOG_FILE
                      value: /logs/server.log
                    - name: LOGGING_LEVEL_ROOT
                      value: ${LOGGING_LEVEL_ROOT}
                    - name: LOGGING_LEVEL_ORG_CANDLEPIN
                      value: ${LOGGING_LEVEL}
                    - name: KAFKA_BOOTSTRAP_HOST
                      value: ${KAFKA_BOOTSTRAP_HOST}
                    - name: EVENT_RECORD_RETENTION
                      value: ${EVENT_RECORD_RETENTION}
                    - name: DATABASE_HOST
                      valueFrom:
                        secretKeyRef:
                          name: rhsm-db
                          key: db.host
                    - name: DATABASE_PORT
                      valueFrom:
                        secretKeyRef:
                          name: rhsm-db
                          key: db.port
                    - name: DATABASE_USERNAME
                      valueFrom:
                        secretKeyRef:
                          name: rhsm-db
                          key: db.user
                    - name: DATABASE_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: rhsm-db
                          key: db.password
                    - name: DATABASE_DATABASE
                      valueFrom:
                        secretKeyRef:
                          name: rhsm-db
                          key: db.name
                    - name: INVENTORY_DATABASE_HOST
                      valueFrom:
                        secretKeyRef:
                          name: host-inventory-db-readonly
                          key: db.host
                    - name: INVENTORY_DATABASE_DATABASE
                      valueFrom:
                        secretKeyRef:
                          name: host-inventory-db-readonly
                          key: db.name
                    - name: INVENTORY_DATABASE_USERNAME
                      valueFrom:
                        secretKeyRef:
                          name: host-inventory-db-readonly
                          key: db.user
                    - name: INVENTORY_DATABASE_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: host-inventory-db-readonly
                          key: db.password
                  resources:
                    requests:
                      cpu: ${CPU_REQUEST}
                      memory: ${MEMORY_REQUEST}
                    limits:
                      cpu: ${CPU_LIMIT}
                      memory: ${MEMORY_LIMIT}
                  volumeMounts:
                    - name: logs
                      mountPath: /logs
                - name: splunk
                  env:
                    - name: SPLUNKMETA_namespace
                      valueFrom:
                        fieldRef:
                          apiVersion: v1
                          fieldPath: metadata.namespace
                  image: ${SPLUNK_FORWARDER_IMAGE}
                  resources:
                    requests:
                      cpu: ${SPLUNK_FORWARDER_CPU_REQUEST}
                      memory: ${SPLUNK_FORWARDER_MEMORY_REQUEST}
                    limits:
                      cpu: ${SPLUNK_FORWARDER_CPU_LIMIT}
                      memory: ${SPLUNK_FORWARDER_MEMORY_LIMIT}
                  terminationMessagePath: /dev/termination-log
                  terminationMessagePolicy: File
                  volumeMounts:
                    - mountPath: /var/log/app
                      name: logs
                      readOnly: true
                    - mountPath: /tls/splunk.pem
                      name: splunk
                      subPath: splunk.pem
              volumes:
                - name: splunk
                  secret:
                    secretName: splunk
                - name: logs
                  emptyDir:
  - apiVersion: batch/v1beta1
    kind: CronJob
    metadata:
      name: db-changelog-cleanup
    spec:
      schedule: ${DB_CHANGELOG_CLEANUP_SCHEDULE}
      jobTemplate:
        spec:
          activeDeadlineSeconds: 60
          suspend:  ${{DB_CHANGELOG_CLEANUP_SUSPEND}}
          template:
            spec:
              restartPolicy: Never
              imagePullSecrets:
                - name: quay-cloudservices-pull
              containers:
              - image: quay.io/cloudservices/rhsm-subscriptions-egress:${EGRESS_IMAGE_TAG}
                imagePullPolicy: Always
                name: db-changelog-cleanup
                command: ["/bin/sh", "-c"]
                args:
                - psql -h $POSTGRESQL_SERVICE_HOST -U $POSTGRESQL_USER $POSTGRESQL_DATABASE -c "$DB_CHANGELOG_CLEANUP_SQL"
                resources:
                  requests:
                    cpu: 250m
                    memory: 256Mi
                  limits:
                    cpu: 500m
                    memory: 256Mi
                env:
                - name: POSTGRESQL_SERVICE_HOST
                  valueFrom:
                    secretKeyRef:
                      name: rhsm-db
                      key: db.host
                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      name: rhsm-db
                      key: db.user
                - name: POSTGRESQL_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: rhsm-db
                      key: db.name
                - name: PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: rhsm-db
                      key: db.password
                - name: DB_CHANGELOG_CLEANUP_SQL
                  value: ${DB_CHANGELOG_CLEANUP_SQL}
