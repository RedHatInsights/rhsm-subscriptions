apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: rhsm-subscriptions
  template: swatch-billing-provider-rh-marketplace
metadata:
  annotations:
    description: Components that handle submitting usage info to Red Hat Marketplace.
  name: swatch-billing-provider-rh-marketplace

parameters:
  - name: HAWTIO_BASE_PATH
    value: /app/rhsm-rh-marketplace/hawtio
  - name: SERVER_MAX_HTTP_HEADER_SIZE
    value: '48000'
  - name: LOGGING_LEVEL_ROOT
    value: WARN
  - name: LOGGING_LEVEL
    value: INFO
  - name: KAFKA_BOOTSTRAP_HOST
    required: true
  - name: KAFKA_MESSAGE_THREADS
    value: '24'
  - name: KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS
    value: '3600000'
  - name: KAFKA_SEEK_OVERRIDE_END
    value: 'false'
  - name: KAFKA_SEEK_OVERRIDE_TIMESTAMP
    value: ''
  - name: REPLICAS
    value: '1'
  - name: IMAGE
    value: quay.io/cloudservices/rhsm-subscriptions
  - name: IMAGE_TAG
    value: latest
  - name: IMAGE_PULL_SECRET
    value: quay-cloudservices-pull
  - name: MEMORY_REQUEST
    value: 1000Mi
  - name: MEMORY_LIMIT
    value: 1700Mi
  - name: CPU_REQUEST
    value: 450m
  - name: CPU_LIMIT
    value: 1800m
  - name: SPLUNK_FORWARDER_IMAGE
    value: quay.io/cloudservices/rhsm-splunk-forwarder:4a75424
  - name: SPLUNK_FORWARDER_MEMORY_REQUEST
    value: 128Mi
  - name: SPLUNK_FORWARDER_MEMORY_LIMIT
    value: 256Mi
  - name: SPLUNK_FORWARDER_CPU_REQUEST
    value: 50m
  - name: SPLUNK_FORWARDER_CPU_LIMIT
    value: 100m
  - name: RH_MARKETPLACE_TOKEN_REFRESH_PERIOD
    value: 1m
  - name: RH_MARKETPLACE_MAX_ATTEMPTS
    value: '10'
  - name: RH_MARKETPLACE_BACK_OFF_MAX_INTERVAL
    value: 64s
  - name: RH_MARKETPLACE_BACK_OFF_INITIAL_INTERVAL
    value: 1s
  - name: RH_MARKETPLACE_BACK_OFF_MULTIPLIER
    value: '2'
  - name: RH_MARKETPLACE_VERIFY_BATCHES
    value: 'true'
  - name: RH_MARKETPLACE_MANUAL_SUBMISSION_ENABLED
    value: 'false'
  - name: RH_MARKETPLACE_AMENDMENT_NOT_SUPPORTED_MARKER
    value: '(amendments) is not available'
  - name: DATABASE_CONNECTION_TIMEOUT_MS
    value: '30000'
  - name: DATABASE_MAX_POOL_SIZE
    value: '25'
  - name: SUBSCRIPTION_URL
    value: https://subscription.qa.api.redhat.com/svcrest/subscription/v5
  - name: SUBSCRIPTION_MAX_CONNECTIONS
    value: '100'
  - name: SUBSCRIPTION_BACKOFF_INITIAL_INTERVAL
    value: 1s
  - name: SUBSCRIPTION_MAX_RETRY_ATTEMPTS
    value: '4'
  - name: SUBSCRIPTION_PAGE_SIZE
    value: '500'
  - name: USER_HOST
    required: true
  - name: USER_MAX_CONNECTIONS
    value: '100'
  - name: USER_MAX_ATTEMPTS
    value: '10'
  - name: USER_BACK_OFF_MAX_INTERVAL
    value: 64s
  - name: USER_BACK_OFF_INITIAL_INTERVAL
    value: 1s
  - name: USER_BACK_OFF_MULTIPLIER
    value: '2'

objects:
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: swatch-billing-provider-rh-marketplace
    spec:
      replicas: ${{REPLICAS}}
      selector:
        deploymentconfig: swatch-billing-provider-rh-marketplace
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            deploymentconfig: swatch-billing-provider-rh-marketplace
            prometheus: rhsm
          annotations:
            prometheus.io/path: /metrics
            prometheus.io/port: '9000'
            prometheus.io/scrape: 'true'
        spec:
          initContainers:
            - image: ${IMAGE}:${IMAGE_TAG}
              name: liquibase
              env:
                - name: SPRING_PROFILES_ACTIVE
                  value: liquibase-only
                - name: JAVA_MAX_MEM_RATIO
                  value: '85'
                - name: GC_MAX_METASPACE_SIZE
                  value: '256'
                - name: DATABASE_HOST
                  valueFrom:
                    secretKeyRef:
                      name: rhsm-db
                      key: db.host
                - name: DATABASE_PORT
                  valueFrom:
                    secretKeyRef:
                      name: rhsm-db
                      key: db.port
                - name: DATABASE_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: rhsm-db
                      key: db.user
                - name: DATABASE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: rhsm-db
                      key: db.password
                - name: DATABASE_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: rhsm-db
                      key: db.name
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
          containers:
            - image: ${IMAGE}:${IMAGE_TAG}
              name: swatch-billing-provider-rh-marketplace
              env:
                # turn off built-in jolokia, so that the spring boot jolokia actuator will work
                - name: AB_JOLOKIA_OFF
                  value: 'true'
                - name: SERVER_MAX_HTTP_HEADER_SIZE
                  value: ${SERVER_MAX_HTTP_HEADER_SIZE}
                - name: HAWTIO_BASE_PATH
                  value: ${HAWTIO_BASE_PATH}
                - name: LOG_FILE
                  value: /logs/server.log
                - name: SPRING_PROFILES_ACTIVE
                  value: rh-marketplace,kafka-queue
                - name: JAVA_MAX_MEM_RATIO
                  value: '85'
                - name: GC_MAX_METASPACE_SIZE
                  value: '256'
                - name: LOGGING_LEVEL_ROOT
                  value: ${LOGGING_LEVEL_ROOT}
                - name: LOGGING_LEVEL_ORG_CANDLEPIN
                  value: ${LOGGING_LEVEL}
                - name: KAFKA_BOOTSTRAP_HOST
                  value: ${KAFKA_BOOTSTRAP_HOST}
                - name: KAFKA_MESSAGE_THREADS
                  value: ${KAFKA_MESSAGE_THREADS}
                - name: KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS
                  value: ${KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS}
                - name: KAFKA_SEEK_OVERRIDE_END
                  value: ${KAFKA_SEEK_OVERRIDE_END}
                - name: KAFKA_SEEK_OVERRIDE_TIMESTAMP
                  value: ${KAFKA_SEEK_OVERRIDE_TIMESTAMP}
                - name: DATABASE_HOST
                  valueFrom:
                    secretKeyRef:
                      name: rhsm-db
                      key: db.host
                - name: DATABASE_PORT
                  valueFrom:
                    secretKeyRef:
                      name: rhsm-db
                      key: db.port
                - name: DATABASE_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: rhsm-db
                      key: db.user
                - name: DATABASE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: rhsm-db
                      key: db.password
                - name: DATABASE_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: rhsm-db
                      key: db.name
                - name: DATABASE_CONNECTION_TIMEOUT_MS
                  value: ${DATABASE_CONNECTION_TIMEOUT_MS}
                - name: DATABASE_MAX_POOL_SIZE
                  value: ${DATABASE_MAX_POOL_SIZE}
                - name: RH_MARKETPLACE_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: rh-marketplace
                      key: key
                - name: RH_MARKETPLACE_URL
                  valueFrom:
                    secretKeyRef:
                      name: rh-marketplace
                      key: url
                - name: RH_MARKETPLACE_TOKEN_REFRESH_PERIOD
                  value: ${RH_MARKETPLACE_TOKEN_REFRESH_PERIOD}
                - name: RH_MARKETPLACE_MAX_ATTEMPTS
                  value: ${RH_MARKETPLACE_MAX_ATTEMPTS}
                - name: RH_MARKETPLACE_BACK_OFF_MAX_INTERVAL
                  value: ${RH_MARKETPLACE_BACK_OFF_MAX_INTERVAL}
                - name: RH_MARKETPLACE_BACK_OFF_INITIAL_INTERVAL
                  value: ${RH_MARKETPLACE_BACK_OFF_INITIAL_INTERVAL}
                - name: RH_MARKETPLACE_BACK_OFF_MULTIPLIER
                  value: ${RH_MARKETPLACE_BACK_OFF_MULTIPLIER}
                - name: RH_MARKETPLACE_VERIFY_BATCHES
                  value: ${RH_MARKETPLACE_VERIFY_BATCHES}
                - name: RH_MARKETPLACE_MANUAL_SUBMISSION_ENABLED
                  value: ${RH_MARKETPLACE_MANUAL_SUBMISSION_ENABLED}
                - name: RH_MARKETPLACE_AMENDMENT_NOT_SUPPORTED_MARKER
                  value: ${RH_MARKETPLACE_AMENDMENT_NOT_SUPPORTED_MARKER}
                - name: SUBSCRIPTION_KEYSTORE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: tls
                      key: keystore_password
                - name: SUBSCRIPTION_KEYSTORE
                  value: /pinhead/keystore.jks
                - name: SUBSCRIPTION_URL
                  value: ${SUBSCRIPTION_URL}
                - name: SUBSCRIPTION_MAX_CONNECTIONS
                  value: ${SUBSCRIPTION_MAX_CONNECTIONS}
                - name: SUBSCRIPTION_BACKOFF_INITIAL_INTERVAL
                  value: ${SUBSCRIPTION_BACKOFF_INITIAL_INTERVAL}
                - name: SUBSCRIPTION_MAX_RETRY_ATTEMPTS
                  value: ${SUBSCRIPTION_MAX_RETRY_ATTEMPTS}
                - name: SUBSCRIPTION_PAGE_SIZE
                  value: ${SUBSCRIPTION_PAGE_SIZE}
                - name: USER_HOST
                  value: ${USER_HOST}
                - name: USER_MAX_CONNECTIONS
                  value: ${USER_MAX_CONNECTIONS}
                - name: USER_MAX_ATTEMPTS
                  value: ${USER_MAX_ATTEMPTS}
                - name: USER_BACK_OFF_MAX_INTERVAL
                  value: ${USER_BACK_OFF_MAX_INTERVAL}
                - name: USER_BACK_OFF_INITIAL_INTERVAL
                  value: ${USER_BACK_OFF_INITIAL_INTERVAL}
                - name: USER_BACK_OFF_MULTIPLIER
                  value: ${USER_BACK_OFF_MULTIPLIER}
                - name: RHSM_KEYSTORE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: tls
                      key: keystore_password
                - name: RHSM_KEYSTORE
                  value: /pinhead/keystore.jks
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /health
                  port: 9000
                  scheme: HTTP
                initialDelaySeconds: 90
                periodSeconds: 20
                successThreshold: 1
                timeoutSeconds: 3
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
              ports:
                - containerPort: 8000
                  protocol: TCP
                  name: web
                - containerPort: 9000
                  protocol: TCP
                  name: metrics-port
              volumeMounts:
                - name: pinhead
                  mountPath: /pinhead
                - name: logs
                  mountPath: /logs
              workingDir: /
            - name: splunk
              env:
                - name: SPLUNKMETA_namespace
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
              image: ${SPLUNK_FORWARDER_IMAGE}
              resources:
                requests:
                  cpu: ${SPLUNK_FORWARDER_CPU_REQUEST}
                  memory: ${SPLUNK_FORWARDER_MEMORY_REQUEST}
                limits:
                  cpu: ${SPLUNK_FORWARDER_CPU_LIMIT}
                  memory: ${SPLUNK_FORWARDER_MEMORY_LIMIT}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /var/log/app
                  name: logs
                  readOnly: true
                - mountPath: /tls/splunk.pem
                  name: splunk
                  subPath: splunk.pem
          volumes:
            - name: pinhead
              secret:
                secretName: pinhead
            - name: splunk
              secret:
                secretName: splunk
            - name: logs
              emptyDir: {}
          restartPolicy: Always
          terminationGracePeriodSeconds: 75
          imagePullSecrets:
            - name: ${IMAGE_PULL_SECRET}
            - name: quay-cloudservices-pull
      triggers:
        - type: ConfigChange

  - apiVersion: v1
    kind: Service
    metadata:
      name: swatch-billing-provider-rh-marketplace
      labels:
        prometheus: rhsm
    spec:
      ports:
        - port: 9000
          name: "9000"
          protocol: TCP
          targetPort: metrics-port
      selector:
        deploymentconfig: swatch-billing-provider-rh-marketplace
