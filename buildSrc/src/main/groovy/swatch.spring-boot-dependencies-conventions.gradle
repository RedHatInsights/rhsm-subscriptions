// Plugin: swatch.spring-boot-dependencies-conventions
// uses spring dependency-management to apply spring boot dependencies bom and other constraints
plugins {
    id "io.spring.dependency-management"
}

dependencies {
    // common testing deps, junit + mockito + hamcrest
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "org.junit.jupiter:junit-jupiter-params"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.mockito:mockito-junit-jupiter"
    testImplementation "org.hamcrest:hamcrest"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

// Define all versions here so that all projects will use the same versions.
dependencyManagement {
    imports {
        // See https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-dependencies to
        // get listings of the contents of this BOM
        mavenBom libraries["spring-boot-dependencies"]
    }
    // adding a library here locks it to a specific version, and allows it to be referenced without
    // version; this section can also be used to override the spring-boot-dependencies BOM
    dependencies{
        dependency libraries["jakarta-ws-rs"]
        dependency libraries["swagger-annotations"]
        dependency libraries["swagger-ui"]
        dependency libraries["webjars-locator"]
        dependency(libraries["resteasy-spring-boot-starter"]) {
            exclude "org.jboss:jandex"
        }
        dependency libraries["resteasy-client"]
        dependency libraries["resteasy-multipart-provider"]
        dependency libraries["resteasy-validator-provider"]
        dependency libraries["resteasy-jackson2-provider"]
        dependency libraries["guava"]
        dependency libraries["splunk-library-javalogging"]
        dependency libraries["janino"]
    }
}
