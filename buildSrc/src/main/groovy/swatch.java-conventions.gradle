// Plugin: swatch.java-conventions
// gradle config common to all swatch java projects
plugins {
    id "java"
    id "com.diffplug.spotless"
    id 'com.adarshr.test-logger'
    id 'jacoco'
}

repositories {
    mavenCentral()
    maven {
        url = "https://packages.confluent.io/maven/"
    }
    maven {
        url = "https://splunk.jfrog.io/splunk/ext-releases-local"
    }
}

dependencies {
    compileOnly libraries["lombok"]
    annotationProcessor libraries["lombok"]
    testCompileOnly libraries["lombok"]
    testAnnotationProcessor libraries["lombok"]
}

spotless {
    java {
        targetExclude '**/build/**' // exclude generated code
        enforceCheck false // allows build task to be successful, even if there is a code style violation
        googleJavaFormat()
        licenseHeaderFile "${rootDir}/config/codestyle/HEADER.txt" //lets you specify code that you don't want to violate rules or be reformatted
        toggleOffOn()
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform {
        String iTags = System.getProperty("includeTags")
        if (iTags != null) {
            includeTags(iTags)
        }

        String eTags = System.getProperty("excludeTags")
        if (eTags != null) {
            excludeTags(eTags)
        }
    }
    if (System.getenv("DOCKER_HOST") == null) {
        String UID = 'id -u'.execute().text.strip()
        environment "DOCKER_HOST", "unix:///run/user/$UID/podman/podman.sock"
    }
    environment "TESTCONTAINERS_RYUK_DISABLED", "true"
    environment "TESTCONTAINERS_CHECKS_DISABLE", "true"

    maxHeapSize = "1024m"
}

tasks.withType(Jar).configureEach {
    // Here to address https://youtrack.jetbrains.com/issue/IDEA-305759
    duplicatesStrategy = DuplicatesStrategy.WARN
}

jacocoTestReport {
    reports {
        xml.required = false
    }
}