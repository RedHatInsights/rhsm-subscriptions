SERVER_PORT=${clowder.endpoints.swatch-producer-azure.port:8000}
LOGGING_LEVEL_COM_REDHAT_SWATCH=INFO
LOGGING_LEVEL_ROOT=INFO
SWATCH_INTERNAL_SUBSCRIPTION_ENDPOINT=${clowder.endpoints.swatch-subscription-sync-service.url}
ENABLE_SPLUNK_HEC=true
SPLUNK_HEC_URL=https://splunk-hec.redhat.com:8088/
SPLUNK_SOURCE=${quarkus.application.name}
SPLUNK_SOURCE_TYPE=quarkus_service
SPLUNK_HEC_BATCH_SIZE=1000
SPLUNK_HEC_BATCH_INTERVAL=10S
SPLUNK_HEC_RETRY_COUNT=3
SPLUNK_HEC_INCLUDE_EX=true
USAGE_AGGREGATE_FAIL_ON_DESER_FAILURE=true
WIREMOCK_HOSTNAME=wiremock

# azure config
AZURE_MARKETPLACE_USAGE_WINDOW=72h
AZURE_MANUAL_SUBMISSION_ENABLED=false
%dev.AZURE_MANUAL_SUBMISSION_ENABLED=true
%test.AZURE_MANUAL_SUBMISSION_ENABLED=${%dev.AZURE_MANUAL_SUBMISSION_ENABLED}
%stage.AZURE_MANUAL_SUBMISSION_ENABLED=true

AZURE_SEND_RETRIES=0
AZURE_USAGE_CONTEXT_LOOKUP_RETRIES=0

ENABLE_AZURE_DRY_RUN=true
%ephemeral.ENABLE_AZURE_DRY_RUN=true
%stage.ENABLE_AZURE_DRY_RUN=true
%prod.ENABLE_AZURE_DRY_RUN=true
%test.ENABLE_AZURE_DRY_RUN=false

AZURE_OAUTH_TOKEN_URL=https://login.microsoftonline.com/[TenantIdPlaceholder]/oauth2/token
%wiremock.AZURE_OAUTH_TOKEN_URL=http://${WIREMOCK_HOSTNAME}:8101/mock/oauth/token
AZURE_MARKETPLACE_CREDENTIALS={"credentials":{"azure":{"clients":[{"tenantId":"test","clientId":"test","clientSecret":"test","publisher":"test"}]}}}
AZURE_MARKETPLACE_BASE_URL=https://marketplaceapi.microsoft.com
%wiremock.AZURE_MARKETPLACE_BASE_URL=http://${WIREMOCK_HOSTNAME}:8101/mock/azureMarketplace
AZURE_MARKETPLACE_API_VERSION=2018-08-31
AZURE_OIDC_SAAS_MARKETPLACE_RESOURCE=20e940b3-4c77-4b0b-9a53-9e16a1b010a7

BILLABLE_USAGE_TOPIC=platform.rhsm-subscriptions.billable-usage
BILLABLE_USAGE_HOURLY_AGGREGATE_TOPIC=platform.rhsm-subscriptions.billable-usage-hourly-aggregate
KSTREAM_BILLABLE_USAGE_STORE=billable-usage-store
KSTREAM_BILLABLE_USAGE_SUPPRESS_STORE=billable-usage-suppress
KSTREAM_BILLABLE_USAGE_AGGREGATION_WINDOW_DURATION=3600s
KSTREAM_BILLABLE_USAGE_AGGREGATION_GRACE_DURATION=600s


%dev.SWATCH_INTERNAL_SUBSCRIPTION_ENDPOINT=http://localhost:8101
%wiremock.SWATCH_INTERNAL_SUBSCRIPTION_ENDPOINT=http://${WIREMOCK_HOSTNAME}:8101/mock/internalSub

# dev-specific defaults; these can still be overridden by env var
%dev.LOGGING_LEVEL_COM_REDHAT_SWATCH=DEBUG
%dev.SWATCH_SELF_PSK=placeholder
%dev.ENABLE_SPLUNK_HEC=false
%dev.SPLUNK_HEC_URL=https://splunk-hec.prod.utility-us-east-2.redhat.com:8088/
%dev.SPLUNKMETA_host=${USER}@${HOSTNAME}
%dev.SPLUNKMETA_namespace=local
%dev.SPLUNK_HEC_INCLUDE_EX=true

# set the test profile properties to the same values as dev; these get activated for @QuarkusTest

%test.SWATCH_SELF_PSK=${%dev.SWATCH_SELF_PSK}
%test.ENABLE_SPLUNK_HEC=${%dev.ENABLE_SPLUNK_HEC}
%test.SPLUNKMETA_host=unit_tests
%test.SWATCH_INTERNAL_SUBSCRIPTION_ENDPOINT=${%dev.SWATCH_INTERNAL_SUBSCRIPTION_ENDPOINT}

# dev-specific config items that don't need to be overridden via env var
# do not use JSON logs in dev mode
quarkus.log.level=${LOGGING_LEVEL_ROOT}
quarkus.log.category."com.redhat.swatch".level=${LOGGING_LEVEL_COM_REDHAT_SWATCH}

quarkus.http.port=${SERVER_PORT}
# make quarkus choose a dynamic port for testing to avoid port collisions w/ simultaneous tests
quarkus.http.test-port=0
# expose swagger-ui and openapi JSON/YAML on turnpike-friendly paths
quarkus.smallrye-openapi.path=/api/${quarkus.application.name}/internal/openapi
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/api/${quarkus.application.name}/internal/swagger-ui

#clowder quarkus config takes care of setting these, no need to try to do clowder.kafka.brokers[0]

# Common kafka settings
kafka.bootstrap.servers=localhost:9092

# Kafka security configuration.  These properties must be present so that
# clowder-quarkus-config-source will populate them from the Clowder provided configuration JSON.
# If the properties are simply absent from this file, then clowder-quarkus-config-source will not
# set values for the property even if a value is present in the Clowder JSON.
#
# Additionally, Kafka has a bug, https://issues.apache.org/jira/browse/KAFKA-4090, where if a
# client attempts to connect to a TLS enabled port using PLAINTEXT, an OutOfMemoryException gets
# thrown instead of something more relevant to the actual issue.
kafka.sasl.jaas.config = ""
kafka.sasl.mechanism = PLAIN
kafka.security.protocol = PLAINTEXT
kafka.ssl.truststore.location = ""
kafka.ssl.truststore.type = PEM


quarkus.kafka-streams.bootstrap-servers=${kafka.bootstrap.servers:localhost:9092}
quarkus.kafka-streams.application-server=${HOST}:${SERVER_PORT}
quarkus.kafka-streams.application-id=platform.rhsm-subscriptions.swatch-billable-usage-aggregator
quarkus.kafka-streams.topics=${BILLABLE_USAGE_TOPIC}
quarkus.kafka-streams.default.key.serde=com.redhat.swatch.azure.kafka.streams.BillableUsageAggregationKeySerde
quarkus.kafka-streams.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde


# pass-through options
kafka-streams.cache.max.bytes.buffering=10240
kafka-streams.commit.interval.ms=1000
kafka-streams.metadata.max.age.ms=500
kafka-streams.auto.offset.reset=latest

# Consumer settings
mp.messaging.incoming.billable-usage-hourly-aggregate-in.fail-on-deserialization-failure=${USAGE_AGGREGATE_FAIL_ON_DESER_FAILURE}
mp.messaging.incoming.billable-usage-hourly-aggregate-in.connector=smallrye-kafka
mp.messaging.incoming.billable-usage-hourly-aggregate-in.topic=${BILLABLE_USAGE_HOURLY_AGGREGATE_TOPIC}

mp.messaging.incoming.billable-usage-hourly-aggregate-in.group.id=swatch-producer-azure-usage-aggregate-consumer
# Go back to the first records, if it's our first access
mp.messaging.incoming.billable-usage-hourly-aggregate-in.auto.offset.reset = earliest

# Producer settings
mp.messaging.outgoing.tally-out.connector=smallrye-kafka
mp.messaging.outgoing.tally-out.topic=platform.rhsm-subscriptions.billable-usage

# Dead Letter Topic settings
mp.messaging.outgoing.tally-dlt.connector=smallrye-kafka
mp.messaging.outgoing.tally-dlt.topic=platform.rhsm-subscriptions.billable-usage.dlt

quarkus.rest-client."com.redhat.swatch.clients.swatch.internal.subscription.api.resources.InternalSubscriptionsApi".url=${SWATCH_INTERNAL_SUBSCRIPTION_ENDPOINT}/api/rhsm-subscriptions/v1
quarkus.rest-client."com.redhat.swatch.clients.swatch.internal.subscription.api.resources.InternalSubscriptionsApi".trust-store=${clowder.endpoints.swatch-subscription-sync-service.trust-store-path}
quarkus.rest-client."com.redhat.swatch.clients.swatch.internal.subscription.api.resources.InternalSubscriptionsApi".trust-store-password=${clowder.endpoints.swatch-subscription-sync-service.trust-store-password}
quarkus.rest-client."com.redhat.swatch.clients.swatch.internal.subscription.api.resources.InternalSubscriptionsApi".trust-store-type=${clowder.endpoints.swatch-subscription-sync-service.trust-store-type}
quarkus.rest-client."com.redhat.swatch.clients.swatch.internal.subscription.api.resources.InternalSubscriptionsApi".providers=com.redhat.swatch.resteasy.client.SwatchPskHeaderFilter,com.redhat.swatch.azure.resource.DefaultApiExceptionMapper

quarkus.log.handler.splunk.enabled=${ENABLE_SPLUNK_HEC:false}
quarkus.log.handler.splunk.url=${SPLUNK_HEC_URL:https://splunk-hec.redhat.com:8088/}
quarkus.log.handler.splunk.token=${SPLUNK_HEC_TOKEN:replaceme}
quarkus.log.handler.splunk.metadata-source=${SPLUNK_SOURCE:swatch-producer-aws}
quarkus.log.handler.splunk.metadata-source-type=${SPLUNK_SOURCE_TYPE:quarkus_service}
quarkus.log.handler.splunk.metadata-host=${SPLUNKMETA_host:${USER}@${HOSTNAME}}
quarkus.log.handler.splunk.batch-size-count=${SPLUNK_HEC_BATCH_SIZE:1000}
quarkus.log.handler.splunk.batch-interval=${SPLUNK_HEC_BATCH_INTERVAL:10S}
quarkus.log.handler.splunk.max-retries=${SPLUNK_HEC_RETRY_COUNT:0}
quarkus.log.handler.splunk.metadata-fields.namespace=${SPLUNKMETA_namespace:local}
quarkus.log.handler.splunk.format=%d %-5p [%c{3.}] (%t) %s%e%n
quarkus.log.handler.splunk.include-exception=${SPLUNK_HEC_INCLUDE_EX:false}

# otel config
quarkus.otel.sdk.disabled=true
%ephemeral.quarkus.otel.sdk.disabled=true
%stage.quarkus.otel.sdk.disabled=false
%prod.quarkus.otel.sdk.disabled=false

quarkus.otel.exporter.otlp.endpoint=http://splunk-otel-collector:4317
