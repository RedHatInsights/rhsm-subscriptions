---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: swatch-subscription-sync
parameters:
  - name: JAVA_DEBUG
    # Set to "true" to enable remote debugging
    value: ''
  - name: JAVA_OPTS_APPEND
    value: ''
  - name: ENV_NAME
    value: env-swatch-subscription-sync
  - name: DEV_MODE
    value: 'false'
  - name: LOGGING_LEVEL_ROOT
    value: WARN
  - name: LOGGING_LEVEL
    value: INFO
  - name: LOGGING_SHOW_SQL_QUERIES
    value: 'false'
  - name: KAFKA_MESSAGE_THREADS
    value: '24'
  - name: KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS
    value: '3600000'
  - name: KAFKA_SEEK_OVERRIDE_END
    value: 'false'
  - name: KAFKA_SEEK_OVERRIDE_TIMESTAMP
    value: ''
  - name: REPLICAS
    value: '1'
  - name: IMAGE
    value: quay.io/cloudservices/rhsm-subscriptions
  - name: IMAGE_TAG
    value: latest
  - name: IMAGE_PULL_SECRET
    value: quay-cloudservices-pull
  - name: MEMORY_REQUEST
    value: 1000Mi
  - name: MEMORY_LIMIT
    value: 1744Mi
  - name: CPU_REQUEST
    value: 500m
  - name: CPU_LIMIT
    value: '900m'
  - name: DATABASE_CONNECTION_TIMEOUT_MS
    value: '30000'
  - name: DATABASE_MAX_POOL_SIZE
    value: '10'
  - name: SUBSCRIPTION_SYNC_ENABLED
    value: 'true'
  - name: SUBSCRIPTION_PAGE_SIZE
    value: '500'
  - name: DEVTEST_EVENT_EDITING_ENABLED
    value: 'false'
  - name: SUBSCRIPTION_URL
    value: https://subscription.stage.api.redhat.com/svcrest/subscription/v5
  - name: PRODUCT_URL
    value: https://product.stage.api.redhat.com/svcrest/product/v3
  - name: SUBSCRIPTION_MAX_CONNECTIONS
    value: '100'
  - name: SUBSCRIPTION_MAX_RETRY_ATTEMPTS
    value: '4'
  - name: SUBSCRIPTION_BACKOFF_INITIAL_INTERVAL
    value: 1s
  - name: SUBSCRIPTION_BACK_OFF_MAX_INTERVAL
    value: 64s
  - name: SUBSCRIPTION_BACK_OFF_MULTIPLIER
    value: '2'
  - name: USER_HOST
  - name: USER_MAX_CONNECTIONS
    value: '100'
  - name: USER_MAX_ATTEMPTS
    value: '10'
  - name: USER_BACK_OFF_MAX_INTERVAL
    value: 64s
  - name: USER_BACK_OFF_INITIAL_INTERVAL
    value: 1s
  - name: USER_BACK_OFF_MULTIPLIER
    value: '2'
  - name: SPRING_ACTIVEMQ_BROKER_URL
    value: vm://localhost?broker.persistent=false
  - name: UMB_SERVICE_ACCOUNT_NAME
    value: placeholder
  - name: UMB_ENABLED
    value: 'false'
  - name: UMB_PROCESSING_ENABLED
    value: 'true'
  - name: UMB_KEYSTORE_PATH
    value: /pinhead/keystore.jks
  - name: ENABLE_SPLUNK_HEC
    value: 'true'
  - name: SPLUNK_SOURCE
    value: 'rhsm-subscription-hec'
  - name: SPLUNK_SOURCE_TYPE
    value: 'springboot_server'
  - name: SPLUNK_MESSAGE_FORMAT
    value: 'text'
  - name: SPLUNK_HEC_URL
    value: https://splunk-hec.redhat.com:8088
  - name: SPLUNK_HEC_CONNECT_TIMEOUT
    value: '5000'
  - name: SPLUNK_HEC_BATCH_SIZE
    value: '1000'
  - name: SPLUNK_HEC_TERMINATION_TIMEOUT
    value: '2000'
# nonprod secret keys have different syntax than prod/stage
  - name: INVENTORY_SECRET_KEY_NAME
    value: 'host-inventory-db'
  - name: INVENTORY_SECRET_KEY_NAME_PREFIX
    value: ''
  - name: INVENTORY_DATABASE_SCHEMA
    value: public
  - name: KAFKA_SUBSCRIPTIONS_PRUNE_REPLICAS
    value: '3'
  - name: KAFKA_SUBSCRIPTIONS_PRUNE_PARTITIONS
    value: '3'
  - name: CURL_CRON_IMAGE
    value: quay.io/app-sre/ubi8-ubi-minimal
  - name: CURL_CRON_IMAGE_TAG
    value: latest
  - name: CURL_CRON_MEMORY_REQUEST
    value: 10Mi
  - name: CURL_CRON_MEMORY_LIMIT
    value: 50Mi
  - name: CURL_CRON_CPU_REQUEST
    value: 100m
  - name: CURL_CRON_CPU_LIMIT
    value: 100m
  - name: OTEL_SERVICE_NAME
    value: swatch-subscription-sync
  - name: OTEL_JAVAAGENT_ENABLED
    value: 'false'
  - name: OTEL_EXPORTER_OTLP_ENDPOINT
    value: 'http://localhost:4317'
  - name: OTEL_EXPORTER_OTLP_PROTOCOL
    value: 'grpc'

# allow overriding to support independent deploy with bonfire
  - name: DB_POD
    value: swatch-tally

objects:
  - apiVersion: cloud.redhat.com/v1alpha1
    kind: ClowdApp
    metadata:
      name: swatch-subscription-sync
      labels:
        prometheus: rhsm
    spec:
      envName: ${ENV_NAME}

# Needs to stay commented out until there's an rhsm ClowdApp deployed in stage/prod
#      dependencies:
#        - rhsm

      database:
        sharedDbAppName: swatch-tally
      dependencies:
        - swatch-tally
        - rbac

      # Creates a database if local mode, or uses RDS in production
      # database:
      #   name: ${DB_POD}
      #   version: 12

      pullSecrets:
        name: ${IMAGE_PULL_SECRET}

      deployments:
      - name: service
        webServices:
          public:
            enabled: true
          metrics:
            enabled: true
        replicas: ${{REPLICAS}}
        podSpec:
          image: ${IMAGE}:${IMAGE_TAG}
          initContainers:
            - env:
                - name: JAVA_DEBUG
                  value: ${JAVA_DEBUG}
                - name: SPRING_PROFILES_ACTIVE
                  value: liquibase-only
                  # Override liquibase disablement in the main container
                - name: SPRING_LIQUIBASE_ENABLED
                  value: 'true'
              inheritEnv: true
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
          env:
            - name: JAVA_DEBUG
              value: ${JAVA_DEBUG}
            - name: JAVA_OPTS_APPEND
              value: -javaagent:/opt/splunk-otel-javaagent.jar ${JAVA_OPTS_APPEND}
            - name: SPRING_LIQUIBASE_ENABLED
              value: 'false'
            - name: ENABLE_SPLUNK_HEC
              value: ${ENABLE_SPLUNK_HEC}
            - name: SPLUNKMETA_namespace
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: HOST_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: SPLUNK_HEC_URL
              value: ${SPLUNK_HEC_URL}
            - name: SPLUNK_HEC_TOKEN
              valueFrom:
                secretKeyRef:
                  name: splunk-hec-external
                  key: token
            - name: SPLUNK_SOURCE
              value: ${SPLUNK_SOURCE}
            - name: SPLUNK_SOURCE_TYPE
              value: ${SPLUNK_SOURCE_TYPE}
            - name: SPLUNK_MESSAGE_FORMAT
              value: ${SPLUNK_MESSAGE_FORMAT}
            - name: SPLUNK_HEC_CONNECT_TIMEOUT
              value: ${SPLUNK_HEC_CONNECT_TIMEOUT}
            - name: SPLUNK_HEC_BATCH_SIZE
              value: ${SPLUNK_HEC_BATCH_SIZE}
            - name: SPLUNK_HEC_TERMINATION_TIMEOUT
              value: ${SPLUNK_HEC_TERMINATION_TIMEOUT}
            - name: SPRING_PROFILES_ACTIVE
              value: capacity-ingress,api,kafka-queue
            - name: SUBSCRIPTION_SYNC_ENABLED
              value: ${SUBSCRIPTION_SYNC_ENABLED}
            - name: LOG_FILE
              value: /logs/server.log
            - name: JAVA_MAX_MEM_RATIO
              value: '85'
            - name: GC_MAX_METASPACE_SIZE
              value: '256'
            - name: LOGGING_LEVEL_ROOT
              value: ${LOGGING_LEVEL_ROOT}
            - name: LOGGING_LEVEL_ORG_CANDLEPIN
              value: ${LOGGING_LEVEL}
            - name: LOGGING_LEVEL_COM_REDHAT_SWATCH
              value: ${LOGGING_LEVEL}
            - name: LOGGING_SHOW_SQL_QUERIES
              value: ${LOGGING_SHOW_SQL_QUERIES}
            - name: KAFKA_MESSAGE_THREADS
              value: ${KAFKA_MESSAGE_THREADS}
            - name: KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS
              value: ${KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS}
            - name: KAFKA_SEEK_OVERRIDE_END
              value: ${KAFKA_SEEK_OVERRIDE_END}
            - name: KAFKA_SEEK_OVERRIDE_TIMESTAMP
              value: ${KAFKA_SEEK_OVERRIDE_TIMESTAMP}
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: ${DB_POD}-db
                  key: db.host
            - name: DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: ${DB_POD}-db
                  key: db.port
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: ${DB_POD}-db
                  key: db.user
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${DB_POD}-db
                  key: db.password
            - name: DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: ${DB_POD}-db
                  key: db.name
            - name: DATABASE_CONNECTION_TIMEOUT_MS
              value: ${DATABASE_CONNECTION_TIMEOUT_MS}
            - name: DATABASE_MAX_POOL_SIZE
              value: ${DATABASE_MAX_POOL_SIZE}
            - name: INVENTORY_DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: ${INVENTORY_SECRET_KEY_NAME}
                  key: db.host
            - name: INVENTORY_DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: ${INVENTORY_SECRET_KEY_NAME}
                  key: ${INVENTORY_SECRET_KEY_NAME_PREFIX}name
            - name: INVENTORY_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: ${INVENTORY_SECRET_KEY_NAME}
                  key: db.user
            - name: INVENTORY_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${INVENTORY_SECRET_KEY_NAME}
                  key: ${INVENTORY_SECRET_KEY_NAME_PREFIX}password
            - name: INVENTORY_DATABASE_SCHEMA
              value: ${INVENTORY_DATABASE_SCHEMA}
            - name: PRODUCT_DENYLIST_RESOURCE_LOCATION
              value: file:/denylist/product-denylist.txt
            - name: PRODUCT_KEYSTORE
              value: /pinhead/keystore.jks
            - name: PRODUCT_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tls
                  key: keystore_password
            - name: RHSM_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tls
                  key: keystore_password
            - name: RHSM_KEYSTORE
              value: /pinhead/keystore.jks
            - name: RHSM_TRUSTSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tls
                  key: keystore_password
            - name: RHSM_TRUSTSTORE
              value: /pinhead/truststore.jks
            - name: SUBSCRIPTION_KEYSTORE
              value: /pinhead/keystore.jks
            - name: SUBSCRIPTION_URL
              value: ${SUBSCRIPTION_URL}
            - name: SUBSCRIPTION_MAX_CONNECTIONS
              value: ${SUBSCRIPTION_MAX_CONNECTIONS}
            - name: SUBSCRIPTION_BACKOFF_INITIAL_INTERVAL
              value: ${SUBSCRIPTION_BACKOFF_INITIAL_INTERVAL}
            - name: SUBSCRIPTION_BACK_OFF_MAX_INTERVAL
              value: ${SUBSCRIPTION_BACK_OFF_MAX_INTERVAL}
            - name: SUBSCRIPTION_BACK_OFF_MULTIPLIER
              value: ${SUBSCRIPTION_BACK_OFF_MULTIPLIER}
            - name: SUBSCRIPTION_MAX_RETRY_ATTEMPTS
              value: ${SUBSCRIPTION_MAX_RETRY_ATTEMPTS}
            - name: PRODUCT_URL
              value: ${PRODUCT_URL}
            - name: SUBSCRIPTION_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tls
                  key: keystore_password
            - name: DEV_MODE
              value: ${DEV_MODE}
            - name: SWATCH_SELF_PSK
              valueFrom:
                secretKeyRef:
                  name: swatch-psks
                  key: self
            - name: USER_HOST
              value: ${USER_HOST}
            - name: USER_MAX_CONNECTIONS
              value: ${USER_MAX_CONNECTIONS}
            - name: USER_MAX_ATTEMPTS
              value: ${USER_MAX_ATTEMPTS}
            - name: USER_BACK_OFF_MAX_INTERVAL
              value: ${USER_BACK_OFF_MAX_INTERVAL}
            - name: USER_BACK_OFF_INITIAL_INTERVAL
              value: ${USER_BACK_OFF_INITIAL_INTERVAL}
            - name: USER_BACK_OFF_MULTIPLIER
              value: ${USER_BACK_OFF_MULTIPLIER}
            - name: SPRING_ACTIVEMQ_BROKER_URL
              value: ${SPRING_ACTIVEMQ_BROKER_URL}
            - name: UMB_KEYSTORE
              value: file:${UMB_KEYSTORE_PATH}
            - name: UMB_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tls
                  key: keystore_password
            - name: UMB_TRUSTSTORE
              value: file:/pinhead/truststore.jks
            - name: UMB_TRUSTSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tls
                  key: keystore_password
            - name: UMB_ENABLED
              value: ${UMB_ENABLED}
            - name: UMB_PROCESSING_ENABLED
              value: ${UMB_PROCESSING_ENABLED}
            - name: UMB_SERVICE_ACCOUNT_NAME
              value: ${UMB_SERVICE_ACCOUNT_NAME}
            - name: UMB_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: ${OTEL_EXPORTER_OTLP_ENDPOINT}
            - name: OTEL_EXPORTER_OTLP_PROTOCOL
              value: ${OTEL_EXPORTER_OTLP_PROTOCOL}
            - name: OTEL_SERVICE_NAME
              value: ${OTEL_SERVICE_NAME}
            - name: OTEL_JAVAAGENT_ENABLED
              value: ${OTEL_JAVAAGENT_ENABLED}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/liveness
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 70
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 70
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: denylist
              mountPath: /denylist
            - name: pinhead
              mountPath: /pinhead
          volumes:
            - name: logs
              emptyDir:
            - name: denylist
              configMap:
                name: denylist
            - name: pinhead
              secret:
                secretName: pinhead

  - apiVersion: v1
    kind: Secret
    metadata:
      name: swatch-psks
    data:
      self: cGxhY2Vob2xkZXI=
