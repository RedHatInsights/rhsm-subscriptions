plugins {
    id 'swatch.quarkus-conventions'
    id 'jsonschema2pojo'
}

dependencies {
    compileOnly libraries["lombok"]
    implementation 'io.quarkus:quarkus-micrometer-registry-prometheus'
    implementation 'io.quarkus:quarkus-opentelemetry'
    implementation 'io.quarkus:quarkus-security'
    implementation 'io.quarkus:quarkus-oidc-client'
    implementation 'io.quarkus:quarkus-kafka-streams'
    implementation project(':clients:swatch-internal-subscription-client')
    implementation project(':swatch-common-config-workaround')
    implementation libraries["clowder-quarkus-config-source"]
    implementation libraries["quarkus-logging-splunk"]
    implementation libraries["splunk-library-javalogging"]
    implementation project(':swatch-product-configuration')
    annotationProcessor enforcedPlatform(libraries["quarkus-bom"])
    testImplementation libraries["junit-jupiter"]
    testImplementation "org.apache.kafka:kafka-streams-test-utils"
}

jsonSchema2Pojo {
    source = files("${projectDir}/../swatch-core/schemas/billable_usage.yaml")
    targetPackage = "com.redhat.swatch.billable.usage.model"
    targetDirectory = file("${buildDir}/generated/src/gen/java")
    includeAdditionalProperties = false
    includeJsr303Annotations = true
    initializeCollections = false
    dateTimeType = 'java.time.OffsetDateTime'
    sourceType = 'yamlschema'
    generateBuilders = true
    includeGetters = true
    includeSetters = true
    useJakartaValidation = true
}

sourceSets.main.java.srcDirs += ["${buildDir}/generated/src/gen/java"]
