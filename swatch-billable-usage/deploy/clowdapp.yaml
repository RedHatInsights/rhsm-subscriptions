---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: swatch-billable-usage
parameters:
  - name: JAVA_DEBUG
    # Set to "true" to enable remote debugging
    value: ''
  - name: QUARKUS_LAUNCH_DEVMODE
    value: ''
  - name: IMAGE_PULL_SECRET
    value: quay-cloudservices-pull
  - name: MEMORY_REQUEST
    value: 600Mi
  - name: MEMORY_LIMIT
    value: 750Mi
  - name: CPU_REQUEST
    value: 200m
  - name: CPU_LIMIT
    value: '1'
  - name: MIGRATION_IMAGE
    value: quay.io/cloudservices/swatch-database
  - name: MIGRATION_MEMORY_REQUEST
    value: 256Mi
  - name: MIGRATION_MEMORY_LIMIT
    value: 512Mi
  - name: MIGRATION_CPU_REQUEST
    value: 100m
  - name: MIGRATION_CPU_LIMIT
    value: 500m
  - name: ENV_NAME
    value: env-swatch-billable-usage
  - name: REPLICAS
    value: '1'
  - name: IMAGE
    value: quay.io/cloudservices/swatch-billable-usage
  - name: IMAGE_TAG
    value: latest
  - name: LOGGING_LEVEL_ROOT
    value: 'INFO'
  - name: LOGGING_LEVEL_COM_REDHAT_SWATCH
    value: 'INFO'
  - name: LOGGING_SHOW_SQL_QUERIES
    value: 'false'
  - name: KAFKA_BILLABLE_USAGE_REPLICAS
    value: '3'
  - name: KAFKA_BILLABLE_USAGE_PARTITIONS
    value: '3'
  - name: KAFKA_ENABLED_ORGS_REPLICAS
    value: '3'
  - name: KAFKA_ENABLED_ORGS_PARTITIONS
    value: '3'
  - name: KAFKA_REMITTANCES_PURGE_TASK_REPLICAS
    value: '3'
  - name: KAFKA_REMITTANCES_PURGE_TASK_PARTITIONS
    value: '3'
  - name: KAFKA_TALLY_REPLICAS
    value: '3'
  - name: KAFKA_TALLY_PARTITIONS
    value: '3'
  - name: QUARKUS_PROFILE
    value: prod
  - name: CURL_CRON_IMAGE
    value: registry.access.redhat.com/ubi8/ubi-minimal
  - name: CURL_CRON_IMAGE_TAG
    value: latest
  - name: CURL_CRON_MEMORY_REQUEST
    value: 50Mi
  - name: CURL_CRON_MEMORY_LIMIT
    value: 50Mi
  - name: CURL_CRON_CPU_REQUEST
    value: 100m
  - name: CURL_CRON_CPU_LIMIT
    value: 100m
  - name: AGGREGATE_FLUSH_SCHEDULE
    value: '@hourly'
  - name: PURGE_REMITTANCE_SCHEDULE
    value: 0 3 * * *
  - name: BILLING_PRODUCER_BACK_OFF_INITIAL_INTERVAL
    value: '1000ms'
  - name: BILLING_PRODUCER_BACK_OFF_MAX_INTERVAL
    value: '60s'
  - name: BILLING_PRODUCER_BACK_OFF_MULTIPLIER
    value: '2'
  - name: BILLING_PRODUCER_MAX_ATTEMPTS
    value: '1'
  - name: DISABLE_OTEL
    value: 'false'
  # allow overriding to support independent deploy with bonfire
  - name: DB_POD
    value: swatch-database

objects:
- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: swatch-billable-usage
    labels:
      prometheus: quarkus
  spec:
    envName: ${ENV_NAME}
    database:
      sharedDbAppName: ${DB_POD}
    dependencies:
      - ${DB_POD}
      - swatch-contracts

    kafkaTopics:
      - replicas: ${{KAFKA_BILLABLE_USAGE_REPLICAS}}
        partitions: ${{KAFKA_BILLABLE_USAGE_PARTITIONS}}
        topicName: platform.rhsm-subscriptions.billable-usage
      - replicas: ${{KAFKA_BILLABLE_USAGE_REPLICAS}}
        partitions: ${{KAFKA_BILLABLE_USAGE_PARTITIONS}}
        topicName: platform.rhsm-subscriptions.billable-usage.status
      - replicas: ${{KAFKA_BILLABLE_USAGE_REPLICAS}}
        partitions: ${{KAFKA_BILLABLE_USAGE_PARTITIONS}}
        topicName: platform.rhsm-subscriptions.billable-usage-hourly-aggregate
      - replicas: ${{KAFKA_BILLABLE_USAGE_REPLICAS}}
        partitions: ${{KAFKA_BILLABLE_USAGE_PARTITIONS}}
        topicName: platform.rhsm-subscriptions.swatch-billable-usage-aggregator-billable-usage-store-repartition
      - replicas: ${{KAFKA_BILLABLE_USAGE_REPLICAS}}
        partitions: ${{KAFKA_BILLABLE_USAGE_PARTITIONS}}
        topicName: platform.rhsm-subscriptions.swatch-billable-usage-aggregator-billable-usage-suppress-store-changelog
      - replicas: ${{KAFKA_ENABLED_ORGS_REPLICAS}}
        partitions: ${{KAFKA_ENABLED_ORGS_PARTITIONS}}
        topicName: platform.rhsm-subscriptions.enabled-orgs-for-tasks
      - replicas: ${{KAFKA_REMITTANCES_PURGE_TASK_REPLICAS}}
        partitions: ${{KAFKA_REMITTANCES_PURGE_TASK_PARTITIONS}}
        topicName: platform.rhsm-subscriptions.remittances-purge-task
      - replicas: ${{KAFKA_TALLY_REPLICAS}}
        partitions: ${{KAFKA_TALLY_PARTITIONS}}
        topicName: platform.rhsm-subscriptions.tally

    pullSecrets:
      name: ${IMAGE_PULL_SECRET}

    deployments:
      - name: service
        replicas: ${{REPLICAS}}
        webServices:
          public:
            enabled: true
        podSpec:
          image: ${IMAGE}:${IMAGE_TAG}
          initContainers:
            - image: ${MIGRATION_IMAGE}:${IMAGE_TAG}
              command: ["/opt/jboss/container/java/run/run-java.sh"]
              args: ["core", "update"]
              inheritEnv: true
              resources:
                requests:
                  cpu: ${MIGRATION_CPU_REQUEST}
                  memory: ${MIGRATION_MEMORY_REQUEST}
                limits:
                  cpu: ${MIGRATION_CPU_LIMIT}
                  memory: ${MIGRATION_MEMORY_LIMIT}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/live
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/ready
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          env:
            - name: JAVA_DEBUG
              value: ${JAVA_DEBUG}
            - name: QUARKUS_LAUNCH_DEVMODE
              value: ${QUARKUS_LAUNCH_DEVMODE}
            - name: LOGGING_LEVEL_ROOT
              value: ${LOGGING_LEVEL_ROOT}
            - name: LOGGING_LEVEL_COM_REDHAT_SWATCH
              value: ${LOGGING_LEVEL_COM_REDHAT_SWATCH}
            - name: LOGGING_SHOW_SQL_QUERIES
              value: ${LOGGING_SHOW_SQL_QUERIES}
            - name: SPLUNKMETA_namespace
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: HOST_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: SPLUNK_HEC_TOKEN
              valueFrom:
                secretKeyRef:
                  name: splunk-hec-external
                  key: token
            - name: SWATCH_SELF_PSK
              valueFrom:
                secretKeyRef:
                  name: swatch-psks
                  key: self
            - name: QUARKUS_PROFILE
              value: ${QUARKUS_PROFILE}
            - name: KAFKA_BILLABLE_USAGE_PARTITIONS
              value: ${KAFKA_BILLABLE_USAGE_PARTITIONS}
            - name: CONTRACT_CLIENT_BACK_OFF_INITIAL_INTERVAL_MILLIS
              value: '1000ms'
            - name: CONTRACT_CLIENT_BACK_OFF_MAX_INTERVAL_MILLIS
              value: '64s'
            - name: CONTRACT_CLIENT_BACK_OFF_MULTIPLIER
              value: '2'
            - name: CONTRACT_CLIENT_MAX_ATTEMPTS
              value: '1'
            - name: BILLING_PRODUCER_BACK_OFF_INITIAL_INTERVAL
              value: ${BILLING_PRODUCER_BACK_OFF_INITIAL_INTERVAL}
            - name: BILLING_PRODUCER_BACK_OFF_MAX_INTERVAL
              value: ${BILLING_PRODUCER_BACK_OFF_MAX_INTERVAL}
            - name: BILLING_PRODUCER_BACK_OFF_MULTIPLIER
              value: ${BILLING_PRODUCER_BACK_OFF_MULTIPLIER}
            - name: BILLING_PRODUCER_MAX_ATTEMPTS
              value: ${BILLING_PRODUCER_MAX_ATTEMPTS}
            - name: DISABLE_OTEL
              value: ${DISABLE_OTEL}
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: ${DB_POD}-db
                  key: db.host
            - name: DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: ${DB_POD}-db
                  key: db.port
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: ${DB_POD}-db
                  key: db.user
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${DB_POD}-db
                  key: db.password
            - name: DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: ${DB_POD}-db
                  key: db.name
          volumeMounts:
            - name: logs
              mountPath: /logs
          volumes:
            - name: logs
              emptyDir:
    jobs:
      - name: sync
        schedule: ${AGGREGATE_FLUSH_SCHEDULE}
        activeDeadlineSeconds: 1800
        successfulJobsHistoryLimit: 2
        restartPolicy: Never
        podSpec:
          image: ${CURL_CRON_IMAGE}:${CURL_CRON_IMAGE_TAG}
          command:
            - /usr/bin/bash
            - -c
            - >
              /usr/bin/curl --fail -H "Origin: https://swatch-billable-usage-service.redhat.com" -H "x-rh-swatch-psk: ${SWATCH_SELF_PSK}" -X PUT "http://swatch-billable-usage-service:8000/api/swatch-billable-usage/internal/rpc/topics/flush"
          env:
            - name: SWATCH_SELF_PSK
              valueFrom:
                secretKeyRef:
                  name: swatch-psks
                  key: self
          resources:
            requests:
              cpu: ${CURL_CRON_CPU_REQUEST}
              memory: ${CURL_CRON_MEMORY_REQUEST}
            limits:
              cpu: ${CURL_CRON_CPU_LIMIT}
              memory: ${CURL_CRON_MEMORY_LIMIT}

      - name: purge-remittances
        schedule: ${PURGE_REMITTANCE_SCHEDULE}
        activeDeadlineSeconds: 1800
        successfulJobsHistoryLimit: 2
        restartPolicy: Never
        podSpec:
          image: ${CURL_CRON_IMAGE}:${CURL_CRON_IMAGE_TAG}
          command:
            - /usr/bin/bash
            - -c
            - >
              /usr/bin/curl --fail -H "Origin: https://swatch-billable-usage-service.redhat.com" -H "x-rh-swatch-psk: ${SWATCH_SELF_PSK}" -X POST "http://swatch-billable-usage-service:8000/api/swatch-billable-usage/internal/rpc/remittance/purge"
          env:
            - name: SWATCH_SELF_PSK
              valueFrom:
                secretKeyRef:
                  name: swatch-psks
                  key: self
          resources:
            requests:
              cpu: ${CURL_CRON_CPU_REQUEST}
              memory: ${CURL_CRON_MEMORY_REQUEST}
            limits:
              cpu: ${CURL_CRON_CPU_LIMIT}
              memory: ${CURL_CRON_MEMORY_LIMIT}

- apiVersion: v1
  kind: Secret
  metadata:
    name: swatch-psks
  data:
    self: cGxhY2Vob2xkZXI=
