---
openapi: 3.0.2
info:
  title: SWATCH Contract Service
  version: 1.0.0
  description: CRUD Operations for contract information
  termsOfService: http://swagger.io/terms/
  contact:
    name: SWATCH Dev
    url: https://github.com/RedHatInsights/rhsm-subscriptions
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /api/swatch-contracts/internal/contracts/{uuid}:
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contract'
            examples:
              persisted contract info:
                value:
                  uuid: some text
                  subscription_number: some text
                  start_date: 2018-02-10T09:30Z
                  end_date: 2018-02-10T09:30Z
                  org_id: some text
                  billing_provider: aws
                  billing_account_id: some text
                  product_id: some text
                  sku: some text
                  vendor_product_code: some text
                  metrics:
                    - metric_id: some text
                      value: 18
                    - metric_id: some text
                      value: 28
        required: false
      parameters:
        - examples:
            uuid:
              value: 8ece4096-bef6-4ad6-b0db-20c8e6b2a78c
          name: uuid
          description: UUID generated from a previously saved contract
          schema:
            type: string
          in: path
          required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
              examples:
                persisted contract info:
                  value:
                    billing_account_id: "123456789101"
                    billing_provider: aws
                    end_date: 2023-03-01T00:00:00Z
                    metrics:
                      - metric_id: Instance-hours
                        value: 68
                    org_id: org123
                    product_id: BASILISK
                    start_date: 2022-01-01T00:00:00Z
                    subscription_number: "12345678"
                    sku: BAS123
                    uuid: 8ece4096-bef6-4ad6-b0db-20c8e6b2a78c
          description: Success
        default:
          $ref: '#/components/responses/ErrorResponse'
      operationId: updateContract
      description: Update a contract record by its uuid.  Only update values passed.
      security:
        - test: []
    delete:
      parameters:
        - examples:
            uuid:
              value: 8ece4096-bef6-4ad6-b0db-20c8e6b2a78c
          name: uuid
          description: UUID generated from a previously saved contract
          schema:
            type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
        default:
          $ref: '#/components/responses/ErrorResponse'
      operationId: deleteContractByUUID
      description: "This will execute a hard delete of a contract and its associated\
        \ metrics from the database.  This is NOT the same as setting a contract to\
        \ expired.  To expire a certificate, the updateContract endpoint should be\
        \ used with an end_date."
      security:
        - test: []
  /api/swatch-contracts/internal/contracts:
    get:
      parameters:
        - examples:
            org_id:
              value: org123
          name: org_id
          description: ""
          schema:
            type: string
          in: query
          required: true
        - examples:
            product_id:
              value: BASILISK
          name: product_id
          description: ""
          schema:
            type: string
          in: query
        - examples:
            metric_id:
              value: Instance-hours
          name: metric_id
          description: ""
          schema:
            type: string
          in: query
        - examples:
            vendor_product_code:
              value: 6n58d3s3qpvk22dgew2gal7w3
          name: vendor_product_code
          description: ""
          schema:
            type: string
          in: query
        - examples:
            billing_provider:
              value: aws
          name: billing_provider
          description: ""
          schema:
            type: string
          in: query
        - examples:
            billing_account_id:
              value: "123456789101"
          name: billing_account_id
          description: ""
          schema:
            type: string
          in: query
        - name: timestamp
          description: Return only contract records active at this timestamp
          schema:
            type: string
            format: date-time
          in: query
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract'
          description: success
        default:
          $ref: '#/components/responses/ErrorResponse'
      security:
        - support: []
        - test: []
        - service: []
      operationId: getContract
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contract'
            examples:
              create contract payload:
                value:
                  subscription_number: sn789
                  sku: MW999
                  start_date: 2022-03-05T00:00:00Z
                  org_id: RACEMS
                  billing_provider: aws
                  billing_account_id: bp1
                  product_id: BASILISK
                  metrics:
                    - metric_id: instance-hours
                      value: 100
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
          description: success
        default:
          $ref: '#/components/responses/ErrorResponse'
      security:
        - test: []
      operationId: createContract
  /api/swatch-contracts/internal/rpc/sync/contracts/{org_id}:
    description: "Trigger a contract sync for a given Org ID"
    post:
      parameters:
        - name: org_id
          description: ""
          schema:
            type: string
          in: path
          required: true
      summary: "Sync contracts for given org_id."
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              examples:
                status response:
                  value:
                    status: 'Success'
                    message: "Contracts Synced for given org_id"
          description: success

      security:
        - test: []
      operationId: syncContractsByOrg
  /internal/rpc/syncAllContracts:
    description: "Trigger a sync for all contracts"
    post:
      summary: "Sync all contracts."
      operationId: syncAllContracts
      responses:
        '202':
          description: "The request for syncing all contracts is successfully running."
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/StatusResponse"
              examples:
                status response:
                  value:
                    status: 'Success'
                    message: "All contracts Synced"
      security:
        - test: []
  /internal/offerings/{sku}/product_tags:
      description: "Mapping sku to product tags."
      parameters:
        - name: sku
          in: path
          required: true
          schema:
            type: string
      get:
        summary: "Lookup product tags by sku"
        operationId: getSkuProductTags
        responses:
          '200':
            description: "The request to get product tags by sku ."
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OfferingProductTags'
                example:
                  data:
                    - Rho one
                    - Rho two
          default:
            $ref: '#/components/responses/ErrorResponse'
        tags:
          - Offerings
        security:
          - test: [ ]
          - support: [ ]
          - service: [ ]
  '/api/swatch-contracts/internal/rpc/partner/contracts':
    post:
      operationId: createPartnerEntitlementContract
      requestBody:
        description: Create a contract record from partner entitlement.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerEntitlementContract'
            examples:
              contract info:
                value:
                  action: contract-updated
                  redHatSubscriptionNumber: '12400374'
                  currentDimensions:
                    -
                      dimensionName: cpu-hours
                      dimensionValue: '5'
                      expirationDate: '2018-02-10T09:30Z'
                    -
                      dimensionName: instance-hours
                      dimensionValue: '10'
                      expirationDate: '2018-02-10T09:30Z'
                  cloudIdentifiers:
                    awsCustomerId: 'HSwCpt6sqkC'
                    awsCustomerAccountId: '795061427196'
                    productCode: '1234567890abcdefghijklmno'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              examples:
                status response:
                  value:
                    status: 'Success'
                    message: "Contract created"
          description: Success
        default:
          $ref: '#/components/responses/ErrorResponse'
      security:
        - test: []
components:
  schemas:
    Error:
      required:
        - status
        - code
        - title
      properties:
        status:
          type: string
        code:
          type: string
        title:
          type: string
        detail:
          type: string
    Contract:
      description: ""
      required:
        - start_date
        - org_id
        - billing_provider
        - billing_account_id
        - product_id
        - metrics
        - sku
        - vendor_product_code
      type: object
      properties:
        uuid:
          description: Randomly generated if not set
          type: string
          example: 8ece4096-bef6-4ad6-b0db-20c8e6b2a78c
        subscription_number:
          description: ""
          type: string
          example: "12345678"
        sku:
          description: ""
          type: string
          example: BAS123
        start_date:
          format: date-time
          description: ""
          type: string
          example: 2022-01-01T00:00:00Z
        end_date:
          format: date-time
          description: ""
          type: string
          example: 2023-03-01T00:00:00Z
        org_id:
          description: ""
          type: string
          example: org123
        billing_provider:
          description: ""
          type: string
          example: aws
        billing_account_id:
          description: AWS billing account ids are 12 digits
          type: string
          example: "123456789101"
        product_id:
          description: ""
          type: string
          example: BASILISK
        vendor_product_code:
          description: ""
          type: string
          example: "6n58d3s3qpvk22dgew2gal7w3"
        metrics:
          description: ""
          type: array
          items:
            $ref: '#/components/schemas/Metric'
          example: "[{\"metric_id\": \"Instance-hours\", \"value\": 68.6}]"
      example:
        uuid: some text
        subscription_number: some text
        start_date: 2018-02-10T09:30Z
        end_date: 2018-02-10T09:30Z
        org_id: some text
        billing_provider: aws
        billing_account_id: some text
        product_id: some text
        metrics:
          - metric_id: some text
            value: 3.57
          - metric_id: some text
            value: 52.67
    Metric:
      title: Root Type for Metric
      description: ""
      required:
        - value
        - metric_id
      type: object
      properties:
        metric_id:
          type: string
          example: Instance-hours
        value:
          format: int32
          type: integer
          example: 1
      example:
        metric_id: Instance-hours
        value: 68.6
    OfferingProductTags:
      properties:
        data:
          type: array
          items:
            type: string
    PartnerEntitlementContract:
      properties:
        action:
          description: Create or update contract
          type: string
#          enum:
#            - contract-updated
        redHatSubscriptionNumber:
          description: Map it to subscription_number
          type: string
        currentDimensions:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Dimension'
          example: '[{"dimensionName": "test_dim_1", "dimensionValue": 5, "expirationDate": "2023-02-15T00:00:00Z"}]'
        cloudIdentifiers:
          type: object
          properties:
            awsCustomerId:
              type: string
            awsCustomerAccountId:
              type: string
            productCode:
              type: string
    Dimension:
      properties:
        dimensionName:
          type: string
        dimensionValue:
          type: string
        expirationDate:
          format: date-time
          description: ''
          type: string
          example: '2023-03-01T00:00:00Z'
    StatusResponse:
      properties:
        status:
          type: string
        message:
          type: string
  responses:
    ErrorResponse:
      description: "Error handling request"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  securitySchemes:
    support:
      type: apiKey
      description: API is available for support operations
      name: x-rh-identity
      in: header
    service:
      type: apiKey
      description: API is available for services
      name: x-rh-swatch-psk
      in: header
    test:
      type: apiKey
      description: API is available for testing purposes (pre-production environments
        only)
      name: x-rh-swatch-psk
      in: header
