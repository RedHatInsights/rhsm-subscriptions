---
openapi: 3.0.2
info:
  title: SWATCH Contract Service
  version: 1.0.0
  description: CRUD Operations for contract information
  termsOfService: http://swagger.io/terms/
  contact:
    name: SWATCH Dev
    url: https://github.com/RedHatInsights/rhsm-subscriptions
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /api/rhsm-subscriptions/v1/capacity/products/{product_id}/{metric_id}:
    description: 'Operations for capacity report for a given account and product'
    parameters:
      - name: product_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/ProductId"
        description: "The ID for the product we wish to query"
      - name: metric_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/MetricId"
        description: "The metric ID for the product we wish to query"
      - name: offset
        in: query
        schema:
          type: integer
        description: "The number of items to skip before starting to collect the result set"
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
        description: "The numbers of items to return"
    get:
      summary: "Fetch a capacity report for an account and product."
      operationId: getCapacityReportByMetricId
      parameters:
        - name: granularity
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/GranularityType'
          description: "The level of granularity to return."
        - name: category
          in: query
          schema:
            $ref: '#/components/schemas/ReportCategory'
          description: 'The category to fetch data for'
        - name: sla
          in: query
          schema:
            $ref: '#/components/schemas/ServiceLevelType'
          description: "Include only capacity for the specified service level."
        - name: usage
          in: query
          schema:
            $ref: '#/components/schemas/UsageType'
          description: "Include only capacity for the specified usage level."
        - name: beginning
          in: query
          required: true
          schema:
            type: string
            format: date-time
          description: "Defines the start of the report period. Dates should be provided in ISO 8601
            format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z"
        - name: ending
          in: query
          required: true
          schema:
            type: string
            format: date-time
          description: "Defines the end of the report period.  Defaults to the current time. Dates should
            be provided in UTC."
      responses:
        '200':
          description: 'The request for a capacity report was successful.'
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/CapacityReportByMetricId"
              example:
                data:
                  - date: '2017-08-01T17:32:05Z'
                    has_data: true
                    value: 100.0
                  - date: '2017-08-02T17:31:04Z'
                    has_data: false
                    value: 0.0
                  - date: '2017-08-03T17:31:04Z'
                    has_data: false
                    value: 0.0
                  - date: '2017-08-04T17:31:04Z'
                    has_data: false
                    value: 0.0
                  - date: '2017-08-05T17:31:04Z'
                    has_data: false
                    value: 0.0
                links:
                  first: '/api/rhsm-subscriptions/v1/capacity/RHEL%20for%20x86/Sockets?granularity=DAILY&sla=Premium&beginning=2017-08-01T17%3A32%3A28Z&ending=2017-08-31T17%3A32%3A28Z&offset=0&limit=5'
                  last: '/api/rhsm-subscriptions/v1/capacity/RHEL%20for%20x86/Sockets?granularity=DAILY&sla=Premium&beginning=2017-08-01T17%3A32%3A28Z&ending=2017-08-31T17%3A32%3A28Z&offset=5&limit=5'
                  previous: null
                  next: '/api/rhsm-subscriptions/v1/capacity/RHEL%20for%20x86/Sockets?granularity=DAILY&sla=Premium&beginning=2017-08-01T17%3A32%3A28Z&ending=2017-08-31T17%3A32%3A28Z&offset=5&limit=5'
                meta:
                  count: 10
                  product: RHEL Server
                  granularity: Daily
                  service_level: Premium
        default:
          $ref: "#/components/responses/ErrorResponse"
      tags:
        - capacity
      security:
        - customer: []
  /api/swatch-contracts/internal/contracts/{uuid}:
    delete:
      parameters:
        - examples:
            uuid:
              value: 8ece4096-bef6-4ad6-b0db-20c8e6b2a78c
          name: uuid
          description: UUID generated from a previously saved contract
          schema:
            type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
        default:
          $ref: '#/components/responses/ErrorResponse'
      operationId: deleteContractByUUID
      description: "This will execute a hard delete of a contract and its associated\
        \ metrics from the database.  This is NOT the same as setting a contract to\
        \ expired.  To expire a certificate, the updateContract endpoint should be\
        \ used with an end_date."
      security:
        - test: []
  /api/swatch-contracts/internal/contracts:
    get:
      parameters:
        - examples:
            org_id:
              value: org123
          name: org_id
          description: ""
          schema:
            type: string
          in: query
          required: true
        - examples:
            product_id:
              value: BASILISK
          name: product_id
          description: ""
          schema:
            type: string
          in: query
        - examples:
            vendor_product_code:
              value: 6n58d3s3qpvk22dgew2gal7w3
          name: vendor_product_code
          description: ""
          schema:
            type: string
          in: query
        - examples:
            billing_provider:
              value: aws
          name: billing_provider
          description: ""
          schema:
            type: string
          in: query
        - examples:
            billing_account_id:
              value: "123456789101"
          name: billing_account_id
          description: ""
          schema:
            type: string
          in: query
        - name: timestamp
          description: Return only contract records active at this timestamp
          schema:
            type: string
            format: date-time
          in: query
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract'
          description: success
        default:
          $ref: '#/components/responses/ErrorResponse'
      security:
        - support: []
        - test: []
        - service: []
      operationId: getContract
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contract'
            examples:
              create contract payload:
                value:
                  subscription_number: sn789
                  sku: MW999
                  start_date: 2022-03-05T00:00:00Z
                  org_id: RACEMS
                  billing_provider: aws
                  billing_account_id: bp1
                  product_id: BASILISK
                  vendor_product_code: VPC
                  metrics:
                    - metric_id: instance-hours
                      value: 100
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
          description: success
        default:
          $ref: '#/components/responses/ErrorResponse'
      security:
        - test: []
      operationId: createContract
  /api/swatch-contracts/internal/rpc/sync/contracts/{org_id}:
    description: "Trigger a contract sync for a given Org ID"
    post:
      parameters:
        - name: org_id
          description: ""
          schema:
            type: string
          in: path
          required: true
      summary: "Sync contracts for given org_id."
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              examples:
                status response:
                  value:
                    status: 'Success'
                    message: "Contracts Synced for given org_id"
          description: success
      security:
        - support: []
        - test: []
      operationId: syncContractsByOrg

  /api/swatch-contracts/internal/rpc/reset/contracts/{org_id}:
    description: "Clear all contracts for a given org ID. "
    delete:
      parameters:
        - name: org_id
          description: ""
          schema:
            type: string
          in: path
          required: true
      summary: "Clear all contracts for given org_id."
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              examples:
                status response:
                  value:
                    status: 'Success'
                    message: "Contracts Cleared for given org_id"
          description: success
      security:
        - support: [ ]
        - test: [ ]
        - service: [ ]
      operationId: deleteContractsByOrg

  /internal/rpc/syncAllContracts:
    description: "Trigger a sync for all contracts"
    post:
      summary: "Sync all contracts."
      operationId: syncAllContracts
      responses:
        '202':
          description: "The request for syncing all contracts is successfully running."
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/StatusResponse"
              examples:
                status response:
                  value:
                    status: 'Success'
                    message: "All contracts Synced"
      security:
        - support: []
        - test: []
  /internal/offerings/{sku}/product_tags:
      description: "Mapping sku to product tags."
      parameters:
        - name: sku
          in: path
          required: true
          schema:
            type: string
      get:
        summary: "Lookup product tags by sku"
        operationId: getSkuProductTags
        responses:
          '200':
            description: "The request to get product tags by sku ."
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OfferingProductTags'
                example:
                  data:
                    - Rho one
                    - Rho two
          default:
            $ref: '#/components/responses/ErrorResponse'
        tags:
          - Offerings
        security:
          - test: [ ]
          - support: [ ]
          - service: [ ]
  '/api/swatch-contracts/internal/rpc/partner/contracts':
    post:
      operationId: createPartnerEntitlementContract
      requestBody:
        description: Create a contract record from partner entitlement.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerEntitlementContract'
            examples:
              contract info:
                value:
                  action: contract-updated
                  redHatSubscriptionNumber: '12400374'
                  currentDimensions:
                    -
                      dimensionName: cpu-hours
                      dimensionValue: '5'
                      expirationDate: '2018-02-10T09:30Z'
                    -
                      dimensionName: instance-hours
                      dimensionValue: '10'
                      expirationDate: '2018-02-10T09:30Z'
                  cloudIdentifiers:
                    awsCustomerId: 'HSwCpt6sqkC'
                    awsCustomerAccountId: '795061427196'
                    productCode: '1234567890abcdefghijklmno'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              examples:
                status response:
                  value:
                    status: 'Success'
                    message: "Contract created"
          description: Success
        default:
          $ref: '#/components/responses/ErrorResponse'
      security:
        - test: []
components:
  schemas:
    Error:
      required:
        - status
        - code
        - title
      properties:
        status:
          type: string
        code:
          type: string
        title:
          type: string
        detail:
          type: string
    Contract:
      description: ""
      required:
        - start_date
        - org_id
        - billing_provider
        - billing_account_id
        - product_id
        - metrics
        - sku
        - vendor_product_code
      type: object
      properties:
        uuid:
          description: Randomly generated if not set
          type: string
          example: 8ece4096-bef6-4ad6-b0db-20c8e6b2a78c
        subscription_number:
          description: ""
          type: string
          example: "12345678"
        sku:
          description: ""
          type: string
          example: BAS123
        start_date:
          format: date-time
          description: ""
          type: string
          example: 2022-01-01T00:00:00Z
        end_date:
          format: date-time
          description: ""
          type: string
          example: 2023-03-01T00:00:00Z
        org_id:
          description: ""
          type: string
          example: org123
        billing_provider:
          description: ""
          type: string
          example: aws
        billing_provider_id:
          description: Encoded additional information needed for billing
          type: string
        billing_account_id:
          description: AWS billing account ids are 12 digits
          type: string
          example: "123456789101"
        product_id:
          description: ""
          type: string
          example: BASILISK
        vendor_product_code:
          description: ""
          type: string
          example: "6n58d3s3qpvk22dgew2gal7w3"
        metrics:
          description: ""
          type: array
          items:
            $ref: '#/components/schemas/Metric'
          example: "[{\"metric_id\": \"Instance-hours\", \"value\": 68.6}]"
      example:
        uuid: some text
        subscription_number: some text
        start_date: 2018-02-10T09:30Z
        end_date: 2018-02-10T09:30Z
        org_id: some text
        billing_provider: aws
        billing_account_id: some text
        product_id: some text
        metrics:
          - metric_id: some text
            value: 3.57
          - metric_id: some text
            value: 52.67
    Metric:
      title: Root Type for Metric
      description: ""
      required:
        - value
        - metric_id
      type: object
      properties:
        metric_id:
          type: string
          example: Instance-hours
        value:
          format: int32
          type: integer
          example: 1
      example:
        metric_id: Instance-hours
        value: 68.6
    OfferingProductTags:
      properties:
        data:
          type: array
          items:
            type: string
    PartnerEntitlementContract:
      properties:
        action:
          description: Create or update contract
          type: string
#          enum:
#            - contract-updated
        redHatSubscriptionNumber:
          description: Map it to subscription_number
          type: string
        currentDimensions:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Dimension'
          example: '[{"dimensionName": "test_dim_1", "dimensionValue": 5, "expirationDate": "2023-02-15T00:00:00Z"}]'
        cloudIdentifiers:
          type: object
          properties:
            partner:
              type: string
            awsCustomerId:
              type: string
            awsCustomerAccountId:
              type: string
            productCode:
              type: string
            azureResourceId:
              type: string
            azureTenantId:
              type: string
            azureOfferId:
              type: string
            planId:
              type: string
    Dimension:
      properties:
        dimensionName:
          type: string
        dimensionValue:
          type: string
        expirationDate:
          format: date-time
          description: ''
          type: string
          example: '2023-03-01T00:00:00Z'
    StatusResponse:
      properties:
        status:
          type: string
        message:
          type: string
    # Schemas ending in "Type" are intentionally named to prevent naming conflicts with db model classes
    GranularityType:
      description: "Describes the significance of each date in the snapshot list. For example if the
          granularity is set to 'weekly', the dates in the snapshot list will represent the start
          of a seven day period."
      type: string
      enum: [ Hourly, Daily, Weekly, Monthly, Quarterly, Yearly ]
    ServiceLevelType:
      description: "Describes the service level that the report was made against. Not set if it
          wasn't specified as a query parameter."
      type: string
      enum: [ "", Premium, Standard, Self-Support, _ANY ]
    UsageType:
      description: "Describes the usage that the report was made against. Not set if it wasn't
          specified as a query parameter."
      type: string
      enum: [ "", Production, Development/Test, Disaster Recovery, _ANY ]
    ReportCategory:
      type: string
      enum:
        - physical
        - virtual
        - cloud
        - hypervisor
    CapacityReportByMetricId:
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/CapacitySnapshotByMetricId"
        links:
          $ref: "#/components/schemas/PageLinks"
        meta:
          type: object
          properties:
            count:
              type: integer
            product:
              type: string
            metric_id:
              type: string
            granularity:
              $ref: '#/components/schemas/GranularityType'
            service_level:
              $ref: '#/components/schemas/ServiceLevelType'
            usage:
              $ref: '#/components/schemas/UsageType'
            category:
              $ref: '#/components/schemas/ReportCategory'
          required:
            - count
            - product
            - granularity
    CapacitySnapshotByMetricId:
      required:
        - date
        - has_data
        - value
      properties:
        date:
          type: string
          format: date-time
          description: "The start date for this snapshot entry. Dates are returned in UTC. Clients must
            consult the 'granularity' field in the CapacityReport to determine the length of time each
            CapacitySnapshot covers."
        has_data:
          type: boolean
        value:
          description: "Capacity value"
          type: integer
          format: int32
          minimum: 0
        has_infinite_quantity:
          type: boolean
    PageLinks:
      properties:
        first:
          type: string
        last:
          type: string
        previous:
          type: string
        next:
          type: string
      required:
        - first
        - last
    ProductId:
      type: string
      format: ProductId
    MetricId:
      type: string
      format: MetricId
  responses:
    ErrorResponse:
      description: "Error handling request"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  securitySchemes:
    customer:
      type: apiKey
      description: customer facing API
      name: x-rh-identity
      in: header
    support:
      type: apiKey
      description: API is available for support operations
      name: x-rh-identity
      in: header
    service:
      type: apiKey
      description: API is available for services
      name: x-rh-swatch-psk
      in: header
    test:
      type: apiKey
      description: API is available for testing purposes (pre-production environments
        only)
      name: x-rh-swatch-psk
      in: header
