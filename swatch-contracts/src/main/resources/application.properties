SERVER_PORT=${clowder.endpoints.swatch-contracts.port:8000}
SWATCH_INTERNAL_SUBSCRIPTION_ENDPOINT=http://swatch-subscription-sync-service:8000/api/rhsm-subscriptions/v1
LOGGING_LEVEL_COM_REDHAT_SWATCH=INFO
LOGGING_LEVEL_ROOT=INFO
DATABASE_HOST: ${clowder.database.hostname:localhost}
DATABASE_PORT: ${clowder.database.port:5432}
DATABASE_DATABASE: ${clowder.database.name:rhsm-subscriptions}
DATABASE_USERNAME: ${clowder.database.username:rhsm-subscriptions}
DATABASE_PASSWORD: ${clowder.database.password:rhsm-subscriptions}

SWATCH_TEST_APIS_ENABLED=true
%ephemeral.SWATCH_TEST_APIS_ENABLED=true
%stage.SWATCH_TEST_APIS_ENABLED=true
%prod.SWATCH_TEST_APIS_ENABLED=false

ENABLE_SPLUNK_HEC=true
SPLUNK_HEC_URL=https://splunk-hec.redhat.com:8088/
SPLUNK_SOURCE=swatch-contracts
SPLUNK_SOURCE_TYPE=quarkus_service
SPLUNK_HEC_BATCH_SIZE=1000
SPLUNK_HEC_BATCH_INTERVAL=10S
SPLUNK_HEC_RETRY_COUNT=3
SPLUNK_HEC_INCLUDE_EX=false

# dev-specific defaults; these can still be overridden by env var
%dev.LOGGING_LEVEL_COM_REDHAT_SWATCH=DEBUG
%dev.SWATCH_SELF_PSK=placeholder
%dev.ENABLE_SPLUNK_HEC=false
%dev.SPLUNK_HEC_URL=https://splunk-hec.prod.utility-us-east-2.redhat.com:8088/
%dev.SPLUNKMETA_host=${USER}@${HOSTNAME}
%dev.SPLUNKMETA_namespace=local
%dev.SPLUNK_HEC_INCLUDE_EX=true
%dev.SWATCH_INTERNAL_SUBSCRIPTION_ENDPOINT=http://localhost:8001/api/rhsm-subscriptions/v1

# set the test profile properties to the same values as dev; these get activated for @QuarkusTest
%test.SWATCH_SELF_PSK=${%dev.SWATCH_SELF_PSK}
%test.ENABLE_SPLUNK_HEC=${%dev.ENABLE_SPLUNK_HEC}
%test.SPLUNKMETA_host=unit_tests

# per-environment Red Hat Partner Gateway Endpoints
%dev.ENTITLEMENT_GATEWAY_URL=https://ibm-entitlement-gateway.dev.api.redhat.com
%qa.ENTITLEMENT_GATEWAY_URL=https://ibm-entitlement-gateway.qa.api.redhat.com
%stage.ENTITLEMENT_GATEWAY_URL=https://ibm-entitlement-gateway.stage.api.redhat.com
%prod.ENTITLEMENT_GATEWAY_URL=https://ibm-entitlement-gateway.api.redhat.com
%ephemeral.ENTITLEMENT_GATEWAY_URL=${%stage.ENTITLEMENT_GATEWAY_URL}

# dev-specific config items that don't need to be overridden via env var
# do not use JSON logs in dev mode
%dev.quarkus.log.console.json=false
quarkus.log.level=${LOGGING_LEVEL_ROOT}
# customized w/ %X which shows MDC values
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{3.}] (%t) %X %s%e%n
quarkus.log.category."com.redhat.swatch".level=${LOGGING_LEVEL_COM_REDHAT_SWATCH}
# NOTE: because we extend spec interfaces, quarkus.security.jaxrs.deny-unannotated-endpoints=true does
# *NOT* deny by default, but the following does work
quarkus.security.deny-unannotated-members=true
# Disable role checking in dev mode. Use QUARKUS_SECURITY_AUTH_ENABLED_IN_DEV_MODE=true to override.
quarkus.security.auth.enabled-in-dev-mode=false


quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${DATABASE_USERNAME}
quarkus.datasource.password=${DATABASE_PASSWORD}
quarkus.datasource.jdbc.url=jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_DATABASE}

%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:db
%test.quarkus.hibernate-orm.dialect=org.hibernate.dialect.H2Dialect

quarkus.liquibase.database-change-log-lock-table-name=DATABASECHANGELOGLOCK_SWATCH_CONTRACTS
quarkus.liquibase.database-change-log-table-name=DATABASECHANGELOG_SWATCH_CONTRACTS
quarkus.liquibase.migrate-at-start=true

quarkus.http.port=${SERVER_PORT}
quarkus.http.test-port=0

quarkus.log.handler.splunk.enabled=${ENABLE_SPLUNK_HEC:false}
quarkus.log.handler.splunk.url=${SPLUNK_HEC_URL:https://splunk-hec.redhat.com:8088/}
quarkus.log.handler.splunk.token=${SPLUNK_HEC_TOKEN:replaceme}
quarkus.log.handler.splunk.metadata-source=${SPLUNK_SOURCE:swatch-contracts}
quarkus.log.handler.splunk.metadata-source-type=${SPLUNK_SOURCE_TYPE:quarkus_service}
quarkus.log.handler.splunk.metadata-host=${SPLUNKMETA_host:${USER}@${HOSTNAME}}
quarkus.log.handler.splunk.batch-size-count=${SPLUNK_HEC_BATCH_SIZE:1000}
quarkus.log.handler.splunk.batch-interval=${SPLUNK_HEC_BATCH_INTERVAL:10S}
quarkus.log.handler.splunk.max-retries=${SPLUNK_HEC_RETRY_COUNT:0}
quarkus.log.handler.splunk.metadata-fields.namespace=${SPLUNKMETA_namespace:local}
quarkus.log.handler.splunk.format=%d %-5p [%c{3.}] (%t) %s%e%n
quarkus.log.handler.splunk.include-exception=${SPLUNK_HEC_INCLUDE_EX:false}

quarkus.rest-client."com.redhat.swatch.clients.rh.partner.gateway.api.resources.PartnerApi".url=${ENTITLEMENT_GATEWAY_URL:http://localhost:8101}
quarkus.rest-client."com.redhat.swatch.clients.rh.partner.gateway.api.resources.PartnerApi".key-store=${KEYSTORE_RESOURCE:}
quarkus.rest-client."com.redhat.swatch.clients.rh.partner.gateway.api.resources.PartnerApi".key-store-password=${KEYSTORE_PASSWORD:}
quarkus.rest-client."com.redhat.swatch.clients.rh.partner.gateway.api.resources.PartnerApi".trust-store=${TRUSTSTORE_RESOURCE:}
quarkus.rest-client."com.redhat.swatch.clients.rh.partner.gateway.api.resources.PartnerApi".trust-store-password=${TRUSTSTORE_PASSWORD:}

# configuration properties for subscriptions-sync
quarkus.rest-client."com.redhat.swatch.clients.swatch.internal.subscription.api.resources.InternalSubscriptionsApi".url=${SWATCH_INTERNAL_SUBSCRIPTION_ENDPOINT}
quarkus.rest-client."com.redhat.swatch.clients.swatch.internal.subscription.api.resources.InternalSubscriptionsApi".providers=com.redhat.swatch.contract.config.SwatchPskHeaderFilter

SWATCH_CONTRACT_PRODUCER_ENABLED = false

UMB_ENABLED=false
%stage.UMB_ENABLED=true
%prod.UMB_ENABLED=true

UMB_HOSTNAME=localhost
%stage.UMB_HOSTNAME=umb.stage.api.redhat.com
%prod.UMB_HOSTNAME=umb.api.redhat.com

UMB_PORT=5672
%stage.UMB_PORT=5671
%prod.UMB_PORT=5671

CONTRACT_UMB_QUEUE=umb-contract
%stage.CONTRACT_UMB_QUEUE=VirtualTopic.services.partner-entitlement-gateway
%prod.CONTRACT_UMB_QUEUE=VirtualTopic.services.partner-entitlement-gateway

%stage.UMB_SERVICE_ACCOUNT_NAME=nonprod-insightsrhsm
%prod.UMB_SERVICE_ACCOUNT_NAME=insightsrhsm

amqp-host=${UMB_HOSTNAME}
amqp-port=${UMB_PORT}

mp.messaging.incoming.contracts.address=${CONTRACT_UMB_QUEUE}
mp.messaging.incoming.contracts.client-options-name=umb

mp.messaging.outgoing.contractstest.address=${CONTRACT_UMB_QUEUE}
mp.messaging.outgoing.contractstest.client-options-name=umb


mp.messaging.incoming.contracts.connector=smallrye-in-memory
mp.messaging.outgoing.contractstest.connector=smallrye-in-memory
%stage.mp.messaging.incoming.contracts.connector=smallrye-amqp
%stage.mp.messaging.outgoing.contractstest.connector=smallrye-in-memory
%prod.mp.messaging.incoming.contracts.connector=smallrye-amqp
%prod.mp.messaging.outgoing.contractstest.connector=smallrye-in-memory

#This is to trace only my package and enable logging if the org exists
quarkus.log.category."com.redhat.swatch.contract.filters".level=DEBUG
FILTER_ORGS=TESTORG1