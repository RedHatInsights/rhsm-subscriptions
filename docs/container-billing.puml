@startuml
!include <C4/C4_Container>

' see https://forum.plantuml.net/8356/white-backgrounds-are-rendered-transparent-in-svg
skinparam backgroundColor #FEFEFE

LAYOUT_WITH_LEGEND()

title Container diagram for Subscription watch SaaS Billing Services

Person(customer, "Red Hat Customer")

Boundary(backoffice, "Red Hat Backoffice") {
  System_Ext(subprod, "IT Subscription/Product Services")
  System_Ext(umb, "UMB", "RH IT Messaging Broker")
  System_Ext(partnergw, "IT Partner Services", "Handles Cloud Provider Listings and SaaS Subscription Lifecycle")
}

Boundary(crc, console.redhat.com) {
  Boundary(swatch, "Subscription watch") {
    System(tally, "Tally", "System that tallies system usage based on telemetry.")
    System(contracts, "swatch-contracts", "Manages customer subscription data for subscription watch")
    ContainerQueue(tally_summaries, "platform.rhsm-subscriptions.tally", "Kafka Topic")
    System_Boundary(billing_producers, "Billing Services") {
      ContainerQueue(billable_usage_topic, "platform.rhsm-subscriptions.billable-usage", "Kafka Topic")
      ContainerQueue(billable_usage_status, "platform.rhsm-subscriptions.billable-usage.status", "Kafka Topic")
      Container(billable_usage, "swatch-billable-usage", "Java, container", "Handles billing & remittance")
      Container(saas_marketplace_worker, "SaaS Marketplace Worker", "Java, container", "Notifies SaaS Marketplace of hourly usage.")
    }
  }
}

System_Ext(saas_marketplace, "SaaS Marketplace", "Service responsible for billing the customer for PAYG usage.")

' tally process
Rel(tally, tally_summaries, "Produces to")

' SaaS marketplace notification
Rel(saas_marketplace_worker, saas_marketplace, "Notifies", "JSON/HTTPS")
Rel(saas_marketplace_worker, billable_usage_topic, "Consumes from")
Rel(saas_marketplace_worker, billable_usage_status, "Produces to")
Rel(billable_usage, billable_usage_topic, "Consumes from")
Rel(billable_usage, tally_summaries, "Consumes from")
Rel(customer, saas_marketplace, "Uses", "HTTPS")


'title System Context diagram for SaaS Metering Dataflows

Rel(partnergw, subprod, "Syncs subscription data")
Rel(partnergw, umb, "Produces change notifications")
Rel(subprod, umb, "Produces change notifications")
Rel(contracts, umb, "Consumes change notifications")
Rel(contracts, subprod, "Queries subscription & product data")
Rel(contracts, partnergw, "Queries SaaS-specific subscription data")
Rel(billable_usage, billable_usage_topic, "Produces message")

@enduml
