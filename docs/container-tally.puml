@startuml
!include <C4/C4_Container>

' see https://forum.plantuml.net/8356/white-backgrounds-are-rendered-transparent-in-svg
skinparam backgroundColor #FEFEFE

LAYOUT_WITH_LEGEND()

title Container diagram for Subscription watch Tally

Person_Ext(customer, "Red Hat Customer")

Boundary(crc, console.redhat.com) {
  Boundary(swatch, "Subscription watch") {
    System_Boundary(tally, "Tally") {
      Container(tally_job, "Tally CronJob", "Java, Container", "CronJob for daily (non-PAYG) usage tallies.")
      Container(tally_purge_job, "Tally Purge CronJob", "Java, Container", "Removes old (outside retenion policy) data.")
      Container(tally_hourly_job, "Tally Hourly CronJob", "Java, Container", "CronJob for hourly (PAYG) usage tallies.")
      Container(tally_worker, "Tally Worker", "Kafka Consumer", "Summarizes usage based on telemetry sources.")
      ContainerQueue(tally_tasks, "platform.rhsm-subscriptions.tasks", "Kafka Topic")
    }
    ContainerDb(db, "Database", "Postgres Database", "Stores subscription and usage information.")
    ContainerQueue(tally_summaries, "platform.rhsm-subscriptions.tally", "Kafka Topic")
  }
  System_Ext(hbi, "Host Based Inventory") {
  	ContainerDb_Ext(hbi_db, "HBI Database", "Postgres", "Central datastore for system information for console.redhat.com.")
  }
}

System_Ext(customer_system, "Customer System", "Customer system or service instance (e.g. RHEL or OSD instance).")

' external dataflows
Rel(customer, customer_system, "Provisions/Uses")
Rel(customer_system, hbi, "Reports to")

' tally process
Rel(tally_job, tally_tasks, "Produces to")
Rel(tally_hourly_job, tally_tasks, "Produces to")
Rel_Back(tally_tasks, tally_worker, "Consumes from")
Rel(tally_worker, db, "Reads from and writes to", "JDBC")
Rel(tally_worker, hbi_db, "Reads from", "JDBC")
Rel_Back(tally_summaries, tally_worker, "Produces to")
Rel(tally_purge_job, db, "Reads from and writes to", "JDBC")
@enduml
